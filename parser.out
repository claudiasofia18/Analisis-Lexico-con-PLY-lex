Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APPEND
    BRACEL
    BRACER
    BREAK
    CAP
    CHAN
    CONST
    DEFAULT
    DEFER
    ELSE
    ERROR
    FALLTHROUGH
    FALSE
    FRONT
    GO
    GOTO
    IF
    IMPORT
    INTERFACE
    LEN
    LIST
    MAP
    NEW
    PACKAGE
    PUSHBACK
    STRINGTYPE
    STRUCT
    TRUE
    TYPE

Grammar

Rule 0     S' -> main
Rule 1     main -> ejecutable
Rule 2     main -> ejecutable main
Rule 3     main -> funcion
Rule 4     ejecutable -> estructuraControl
Rule 5     ejecutable -> impresion
Rule 6     ejecutable -> declaracion
Rule 7     ejecutable -> asignacion
Rule 8     ejecutable -> lectura
Rule 9     ejecutable -> expresionMatematica
Rule 10    ejecutable -> condicion
Rule 11    impresion -> impresionSencilla
Rule 12    impresion -> impresionBufio
Rule 13    impresion -> impresionFormato
Rule 14    lectura -> lecturaReader
Rule 15    lectura -> lecturaScanf
Rule 16    lectura -> lecturaSscanf
Rule 17    asignacion -> varShortAssign asignable
Rule 18    asignacion -> varAssign ASSIGN asignable
Rule 19    asignacion -> VARIABLE ASSIGN asignable
Rule 20    asignacion -> varAssign tipoDato ASSIGN asignable
Rule 21    declaracion -> varAssign tipoDato
Rule 22    asignable -> valor
Rule 23    asignable -> expresionMatematica
Rule 24    asignable -> condicion
Rule 25    funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
Rule 26    cuerpo -> ejecutable
Rule 27    cuerpo -> RETURN VARIABLE
Rule 28    estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR
Rule 29    estructuraControl -> FOR condicion LOCKL main LOCKR
Rule 30    estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
Rule 31    estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 32    estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 33    estructuraControl -> SELECT LOCKL casesSelect LOCKR
Rule 34    casesSelect -> caseSelect
Rule 35    casesSelect -> caseSelect casesSelect
Rule 36    caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main
Rule 37    cases -> case
Rule 38    cases -> case cases
Rule 39    case -> CASE condicionCase COLON main
Rule 40    impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR
Rule 41    tipoImpresion -> FMT DOT PRINT
Rule 42    tipoImpresion -> FMT DOT PRINTLN
Rule 43    impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
Rule 44    impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
Rule 45    lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
Rule 46    lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
Rule 47    opcionLectura -> COMA opciones
Rule 48    opcionLectura -> COMA opciones opcionLectura
Rule 49    ampersand -> AMPERSON VARIABLE
Rule 50    lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
Rule 51    opcionesLectura -> opciones
Rule 52    opcionesLectura -> opciones COMA opcionesLectura
Rule 53    opciones -> STRING
Rule 54    opciones -> ampersand
Rule 55    declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
Rule 56    declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
Rule 57    varShortAssign -> VARIABLE SHORTASSIGN
Rule 58    varAssign -> VAR VARIABLE
Rule 59    condicionCase -> INTEGER
Rule 60    condicionCase -> VARIABLE
Rule 61    condicionCase -> condicion
Rule 62    condicion -> valor operadorComparacion valor
Rule 63    condicion -> valor operadorLogico valor
Rule 64    condicion -> comparaciones
Rule 65    comparaciones -> INTEGER EQUAL INTEGER
Rule 66    comparaciones -> INTEGER UNEQUAL INTEGER
Rule 67    comparaciones -> INTEGER GREATERTHAN INTEGER
Rule 68    comparaciones -> INTEGER SMALLERTHAN INTEGER
Rule 69    comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER
Rule 70    comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER
Rule 71    operadorComparacion -> EQUAL
Rule 72    operadorComparacion -> UNEQUAL
Rule 73    operadorComparacion -> GREATERTHAN
Rule 74    operadorComparacion -> SMALLERTHAN
Rule 75    operadorComparacion -> GREATEROREQUALTHAN
Rule 76    operadorComparacion -> SMALLEROREQUALTHAN
Rule 77    tipoDato -> INTTYPE
Rule 78    tipoDato -> FLOATTYPE
Rule 79    tipoDato -> BOOLEANTYPE
Rule 80    operadorLogico -> AND
Rule 81    operadorLogico -> OR
Rule 82    operadorLogico -> NOT
Rule 83    expresionMatematica -> expresionSuma
Rule 84    expresionMatematica -> expresionResta
Rule 85    expresionMatematica -> expresionMultiplicacion
Rule 86    expresionMatematica -> expresionDivision
Rule 87    expresionMatematica -> expresionModulo
Rule 88    expresionMatematica -> factor operadorMatematico factor
Rule 89    expresionSuma -> INTEGER PLUS INTEGER
Rule 90    expresionResta -> INTEGER MINUS INTEGER
Rule 91    expresionMultiplicacion -> INTEGER TIMES INTEGER
Rule 92    expresionDivision -> INTEGER DIVIDE INTEGER
Rule 93    expresionModulo -> INTEGER MODULE INTEGER
Rule 94    operadorMatematico -> PLUS
Rule 95    operadorMatematico -> MINUS
Rule 96    operadorMatematico -> TIMES
Rule 97    operadorMatematico -> DIVIDE
Rule 98    operadorMatematico -> MODULE
Rule 99    valores -> valor
Rule 100   valores -> valor COMA valores
Rule 101   valor -> STRING
Rule 102   valor -> factor
Rule 103   factor -> VARIABLE
Rule 104   factor -> numero
Rule 105   numero -> FLOAT
Rule 106   numero -> INTEGER
Rule 107   iterador -> VARIABLE INCREMENT
Rule 108   iterador -> VARIABLE DECREMENT

Terminals, with rules where they appear

AMPERSON             : 49
AND                  : 80
APPEND               : 
ASSIGN               : 18 19 20
BOOLEANTYPE          : 79
BRACEL               : 
BRACER               : 
BRACKETL             : 25 40 43 44 45 46 50 55 56
BRACKETR             : 25 40 43 44 45 46 50 55 56
BREAK                : 
BUFIO                : 55 56
CAP                  : 
CASE                 : 36 39
CHAN                 : 
COLON                : 36 39
COMA                 : 31 43 44 47 48 52 100
CONST                : 
DECREMENT            : 108
DEFAULT              : 
DEFER                : 
DIVIDE               : 92 97
DOT                  : 41 42 43 44 45 46 50 55 55 56 56
ELSE                 : 
EQUAL                : 65 71
ERROR                : 
FALLTHROUGH          : 
FALSE                : 
FLOAT                : 105
FLOATTYPE            : 78
FMT                  : 41 42 43 44 46 50
FOR                  : 29 30 31 32
FPRINT               : 43
FRONT                : 
FUNC                 : 25
GO                   : 
GOTO                 : 
GREATEROREQUALTHAN   : 69 75
GREATERTHAN          : 67 73
IF                   : 
IMPORT               : 
INCREMENT            : 107
INTEGER              : 59 65 65 66 66 67 67 68 68 69 69 70 70 89 89 90 90 91 91 92 92 93 93 106
INTERFACE            : 
INTTYPE              : 77
LEN                  : 
LIST                 : 
LOCKL                : 25 28 29 30 31 32 33
LOCKR                : 25 28 29 30 31 32 33
MAP                  : 
MINUS                : 36 90 95
MODULE               : 93 98
NEW                  : 
NEWREADER            : 55
NEWWRITER            : 56
NOT                  : 82
OR                   : 81
OS                   : 55 56
PACKAGE              : 
PLUS                 : 89 94
PRINT                : 41
PRINTF               : 44
PRINTLN              : 42
PUSHBACK             : 
RANGE                : 31 32
READSTRING           : 45
RETURN               : 27
SCANF                : 46
SELECT               : 33
SEMICOLON            : 30 30
SHORTASSIGN          : 57
SMALLEROREQUALTHAN   : 70 76
SMALLERTHAN          : 36 68 74
SSCANF               : 50
STDIN                : 55
STDOUT               : 56
STRING               : 43 44 45 46 53 101
STRINGTYPE           : 
STRUCT               : 
SWITCH               : 28
TIMES                : 91 96
TRUE                 : 
TYPE                 : 
UNEQUAL              : 66 72
VAR                  : 58
VARIABLE             : 19 25 25 27 28 31 31 32 43 45 49 57 58 60 103 107 108
error                : 

Nonterminals, with rules where they appear

ampersand            : 54
asignable            : 17 18 19 20
asignacion           : 7 30
case                 : 37 38
caseSelect           : 34 35
cases                : 28 38
casesSelect          : 33 35
comparaciones        : 64
condicion            : 10 24 29 30 61
condicionCase        : 39
cuerpo               : 25
declaracion          : 6
ejecutable           : 1 2 26
estructuraControl    : 4
expresionDivision    : 86
expresionMatematica  : 9 23
expresionModulo      : 87
expresionMultiplicacion : 85
expresionResta       : 84
expresionSuma        : 83
factor               : 88 88 102
funcion              : 3
impresion            : 5
impresionBufio       : 12
impresionFormato     : 13
impresionSencilla    : 11
iterador             : 30
lectura              : 8
lecturaReader        : 14
lecturaScanf         : 15
lecturaSscanf        : 16
main                 : 2 29 30 31 32 36 39 0
numero               : 104
opcionLectura        : 46 48
opciones             : 47 48 51 52
opcionesLectura      : 50 52
operadorComparacion  : 62
operadorLogico       : 63
operadorMatematico   : 88
tipoDato             : 20 21 25 25
tipoImpresion        : 40
valor                : 22 62 62 63 63 99 100
valores              : 40 44 100
varAssign            : 18 20 21
varShortAssign       : 17 31 32 36 45 55 56

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    main                           shift and go to state 1
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 1

    (0) S' -> main .



state 2

    (1) main -> ejecutable .
    (2) main -> ejecutable . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    $end            reduce using rule 1 (main -> ejecutable .)
    LOCKR           reduce using rule 1 (main -> ejecutable .)
    CASE            reduce using rule 1 (main -> ejecutable .)
    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    ejecutable                     shift and go to state 2
    main                           shift and go to state 39
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 3

    (3) main -> funcion .

    $end            reduce using rule 3 (main -> funcion .)
    LOCKR           reduce using rule 3 (main -> funcion .)
    CASE            reduce using rule 3 (main -> funcion .)


state 4

    (4) ejecutable -> estructuraControl .

    FUNC            reduce using rule 4 (ejecutable -> estructuraControl .)
    SWITCH          reduce using rule 4 (ejecutable -> estructuraControl .)
    FOR             reduce using rule 4 (ejecutable -> estructuraControl .)
    SELECT          reduce using rule 4 (ejecutable -> estructuraControl .)
    VARIABLE        reduce using rule 4 (ejecutable -> estructuraControl .)
    FMT             reduce using rule 4 (ejecutable -> estructuraControl .)
    VAR             reduce using rule 4 (ejecutable -> estructuraControl .)
    INTEGER         reduce using rule 4 (ejecutable -> estructuraControl .)
    STRING          reduce using rule 4 (ejecutable -> estructuraControl .)
    FLOAT           reduce using rule 4 (ejecutable -> estructuraControl .)
    $end            reduce using rule 4 (ejecutable -> estructuraControl .)
    LOCKR           reduce using rule 4 (ejecutable -> estructuraControl .)
    CASE            reduce using rule 4 (ejecutable -> estructuraControl .)


state 5

    (5) ejecutable -> impresion .

    FUNC            reduce using rule 5 (ejecutable -> impresion .)
    SWITCH          reduce using rule 5 (ejecutable -> impresion .)
    FOR             reduce using rule 5 (ejecutable -> impresion .)
    SELECT          reduce using rule 5 (ejecutable -> impresion .)
    VARIABLE        reduce using rule 5 (ejecutable -> impresion .)
    FMT             reduce using rule 5 (ejecutable -> impresion .)
    VAR             reduce using rule 5 (ejecutable -> impresion .)
    INTEGER         reduce using rule 5 (ejecutable -> impresion .)
    STRING          reduce using rule 5 (ejecutable -> impresion .)
    FLOAT           reduce using rule 5 (ejecutable -> impresion .)
    $end            reduce using rule 5 (ejecutable -> impresion .)
    LOCKR           reduce using rule 5 (ejecutable -> impresion .)
    CASE            reduce using rule 5 (ejecutable -> impresion .)


state 6

    (6) ejecutable -> declaracion .

    FUNC            reduce using rule 6 (ejecutable -> declaracion .)
    SWITCH          reduce using rule 6 (ejecutable -> declaracion .)
    FOR             reduce using rule 6 (ejecutable -> declaracion .)
    SELECT          reduce using rule 6 (ejecutable -> declaracion .)
    VARIABLE        reduce using rule 6 (ejecutable -> declaracion .)
    FMT             reduce using rule 6 (ejecutable -> declaracion .)
    VAR             reduce using rule 6 (ejecutable -> declaracion .)
    INTEGER         reduce using rule 6 (ejecutable -> declaracion .)
    STRING          reduce using rule 6 (ejecutable -> declaracion .)
    FLOAT           reduce using rule 6 (ejecutable -> declaracion .)
    $end            reduce using rule 6 (ejecutable -> declaracion .)
    LOCKR           reduce using rule 6 (ejecutable -> declaracion .)
    CASE            reduce using rule 6 (ejecutable -> declaracion .)


state 7

    (7) ejecutable -> asignacion .

    FUNC            reduce using rule 7 (ejecutable -> asignacion .)
    SWITCH          reduce using rule 7 (ejecutable -> asignacion .)
    FOR             reduce using rule 7 (ejecutable -> asignacion .)
    SELECT          reduce using rule 7 (ejecutable -> asignacion .)
    VARIABLE        reduce using rule 7 (ejecutable -> asignacion .)
    FMT             reduce using rule 7 (ejecutable -> asignacion .)
    VAR             reduce using rule 7 (ejecutable -> asignacion .)
    INTEGER         reduce using rule 7 (ejecutable -> asignacion .)
    STRING          reduce using rule 7 (ejecutable -> asignacion .)
    FLOAT           reduce using rule 7 (ejecutable -> asignacion .)
    $end            reduce using rule 7 (ejecutable -> asignacion .)
    LOCKR           reduce using rule 7 (ejecutable -> asignacion .)
    CASE            reduce using rule 7 (ejecutable -> asignacion .)


state 8

    (8) ejecutable -> lectura .

    FUNC            reduce using rule 8 (ejecutable -> lectura .)
    SWITCH          reduce using rule 8 (ejecutable -> lectura .)
    FOR             reduce using rule 8 (ejecutable -> lectura .)
    SELECT          reduce using rule 8 (ejecutable -> lectura .)
    VARIABLE        reduce using rule 8 (ejecutable -> lectura .)
    FMT             reduce using rule 8 (ejecutable -> lectura .)
    VAR             reduce using rule 8 (ejecutable -> lectura .)
    INTEGER         reduce using rule 8 (ejecutable -> lectura .)
    STRING          reduce using rule 8 (ejecutable -> lectura .)
    FLOAT           reduce using rule 8 (ejecutable -> lectura .)
    $end            reduce using rule 8 (ejecutable -> lectura .)
    LOCKR           reduce using rule 8 (ejecutable -> lectura .)
    CASE            reduce using rule 8 (ejecutable -> lectura .)


state 9

    (9) ejecutable -> expresionMatematica .

    FUNC            reduce using rule 9 (ejecutable -> expresionMatematica .)
    SWITCH          reduce using rule 9 (ejecutable -> expresionMatematica .)
    FOR             reduce using rule 9 (ejecutable -> expresionMatematica .)
    SELECT          reduce using rule 9 (ejecutable -> expresionMatematica .)
    VARIABLE        reduce using rule 9 (ejecutable -> expresionMatematica .)
    FMT             reduce using rule 9 (ejecutable -> expresionMatematica .)
    VAR             reduce using rule 9 (ejecutable -> expresionMatematica .)
    INTEGER         reduce using rule 9 (ejecutable -> expresionMatematica .)
    STRING          reduce using rule 9 (ejecutable -> expresionMatematica .)
    FLOAT           reduce using rule 9 (ejecutable -> expresionMatematica .)
    $end            reduce using rule 9 (ejecutable -> expresionMatematica .)
    LOCKR           reduce using rule 9 (ejecutable -> expresionMatematica .)
    CASE            reduce using rule 9 (ejecutable -> expresionMatematica .)


state 10

    (10) ejecutable -> condicion .

    FUNC            reduce using rule 10 (ejecutable -> condicion .)
    SWITCH          reduce using rule 10 (ejecutable -> condicion .)
    FOR             reduce using rule 10 (ejecutable -> condicion .)
    SELECT          reduce using rule 10 (ejecutable -> condicion .)
    VARIABLE        reduce using rule 10 (ejecutable -> condicion .)
    FMT             reduce using rule 10 (ejecutable -> condicion .)
    VAR             reduce using rule 10 (ejecutable -> condicion .)
    INTEGER         reduce using rule 10 (ejecutable -> condicion .)
    STRING          reduce using rule 10 (ejecutable -> condicion .)
    FLOAT           reduce using rule 10 (ejecutable -> condicion .)
    $end            reduce using rule 10 (ejecutable -> condicion .)
    LOCKR           reduce using rule 10 (ejecutable -> condicion .)
    CASE            reduce using rule 10 (ejecutable -> condicion .)


state 11

    (25) funcion -> FUNC . VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR

    VARIABLE        shift and go to state 40


state 12

    (19) asignacion -> VARIABLE . ASSIGN asignable
    (57) varShortAssign -> VARIABLE . SHORTASSIGN
    (103) factor -> VARIABLE .

    ASSIGN          shift and go to state 41
    SHORTASSIGN     shift and go to state 42
    PLUS            reduce using rule 103 (factor -> VARIABLE .)
    MINUS           reduce using rule 103 (factor -> VARIABLE .)
    TIMES           reduce using rule 103 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 103 (factor -> VARIABLE .)
    MODULE          reduce using rule 103 (factor -> VARIABLE .)
    EQUAL           reduce using rule 103 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 103 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    AND             reduce using rule 103 (factor -> VARIABLE .)
    OR              reduce using rule 103 (factor -> VARIABLE .)
    NOT             reduce using rule 103 (factor -> VARIABLE .)


state 13

    (28) estructuraControl -> SWITCH . VARIABLE LOCKL cases LOCKR

    VARIABLE        shift and go to state 43


state 14

    (29) estructuraControl -> FOR . condicion LOCKL main LOCKR
    (30) estructuraControl -> FOR . asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> FOR . VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> FOR . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (58) varAssign -> . VAR VARIABLE
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    VARIABLE        shift and go to state 46
    STRING          shift and go to state 34
    INTEGER         shift and go to state 50
    VAR             shift and go to state 35
    FLOAT           shift and go to state 38

    condicion                      shift and go to state 44
    asignacion                     shift and go to state 45
    varShortAssign                 shift and go to state 47
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    varAssign                      shift and go to state 48
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 15

    (55) declaracion -> varShortAssign . BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> varShortAssign . BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> varShortAssign . asignable
    (45) lecturaReader -> varShortAssign . VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (22) asignable -> . valor
    (23) asignable -> . expresionMatematica
    (24) asignable -> . condicion
    (101) valor -> . STRING
    (102) valor -> . factor
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    BUFIO           shift and go to state 51
    VARIABLE        shift and go to state 53
    STRING          shift and go to state 34
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 38

    asignable                      shift and go to state 52
    valor                          shift and go to state 54
    expresionMatematica            shift and go to state 55
    condicion                      shift and go to state 56
    factor                         shift and go to state 57
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    comparaciones                  shift and go to state 31
    numero                         shift and go to state 37

state 16

    (33) estructuraControl -> SELECT . LOCKL casesSelect LOCKR

    LOCKL           shift and go to state 58


state 17

    (11) impresion -> impresionSencilla .

    FUNC            reduce using rule 11 (impresion -> impresionSencilla .)
    SWITCH          reduce using rule 11 (impresion -> impresionSencilla .)
    FOR             reduce using rule 11 (impresion -> impresionSencilla .)
    SELECT          reduce using rule 11 (impresion -> impresionSencilla .)
    VARIABLE        reduce using rule 11 (impresion -> impresionSencilla .)
    FMT             reduce using rule 11 (impresion -> impresionSencilla .)
    VAR             reduce using rule 11 (impresion -> impresionSencilla .)
    INTEGER         reduce using rule 11 (impresion -> impresionSencilla .)
    STRING          reduce using rule 11 (impresion -> impresionSencilla .)
    FLOAT           reduce using rule 11 (impresion -> impresionSencilla .)
    $end            reduce using rule 11 (impresion -> impresionSencilla .)
    LOCKR           reduce using rule 11 (impresion -> impresionSencilla .)
    CASE            reduce using rule 11 (impresion -> impresionSencilla .)


state 18

    (12) impresion -> impresionBufio .

    FUNC            reduce using rule 12 (impresion -> impresionBufio .)
    SWITCH          reduce using rule 12 (impresion -> impresionBufio .)
    FOR             reduce using rule 12 (impresion -> impresionBufio .)
    SELECT          reduce using rule 12 (impresion -> impresionBufio .)
    VARIABLE        reduce using rule 12 (impresion -> impresionBufio .)
    FMT             reduce using rule 12 (impresion -> impresionBufio .)
    VAR             reduce using rule 12 (impresion -> impresionBufio .)
    INTEGER         reduce using rule 12 (impresion -> impresionBufio .)
    STRING          reduce using rule 12 (impresion -> impresionBufio .)
    FLOAT           reduce using rule 12 (impresion -> impresionBufio .)
    $end            reduce using rule 12 (impresion -> impresionBufio .)
    LOCKR           reduce using rule 12 (impresion -> impresionBufio .)
    CASE            reduce using rule 12 (impresion -> impresionBufio .)


state 19

    (13) impresion -> impresionFormato .

    FUNC            reduce using rule 13 (impresion -> impresionFormato .)
    SWITCH          reduce using rule 13 (impresion -> impresionFormato .)
    FOR             reduce using rule 13 (impresion -> impresionFormato .)
    SELECT          reduce using rule 13 (impresion -> impresionFormato .)
    VARIABLE        reduce using rule 13 (impresion -> impresionFormato .)
    FMT             reduce using rule 13 (impresion -> impresionFormato .)
    VAR             reduce using rule 13 (impresion -> impresionFormato .)
    INTEGER         reduce using rule 13 (impresion -> impresionFormato .)
    STRING          reduce using rule 13 (impresion -> impresionFormato .)
    FLOAT           reduce using rule 13 (impresion -> impresionFormato .)
    $end            reduce using rule 13 (impresion -> impresionFormato .)
    LOCKR           reduce using rule 13 (impresion -> impresionFormato .)
    CASE            reduce using rule 13 (impresion -> impresionFormato .)


state 20

    (21) declaracion -> varAssign . tipoDato
    (18) asignacion -> varAssign . ASSIGN asignable
    (20) asignacion -> varAssign . tipoDato ASSIGN asignable
    (77) tipoDato -> . INTTYPE
    (78) tipoDato -> . FLOATTYPE
    (79) tipoDato -> . BOOLEANTYPE

    ASSIGN          shift and go to state 60
    INTTYPE         shift and go to state 61
    FLOATTYPE       shift and go to state 62
    BOOLEANTYPE     shift and go to state 63

    tipoDato                       shift and go to state 59

state 21

    (14) lectura -> lecturaReader .

    FUNC            reduce using rule 14 (lectura -> lecturaReader .)
    SWITCH          reduce using rule 14 (lectura -> lecturaReader .)
    FOR             reduce using rule 14 (lectura -> lecturaReader .)
    SELECT          reduce using rule 14 (lectura -> lecturaReader .)
    VARIABLE        reduce using rule 14 (lectura -> lecturaReader .)
    FMT             reduce using rule 14 (lectura -> lecturaReader .)
    VAR             reduce using rule 14 (lectura -> lecturaReader .)
    INTEGER         reduce using rule 14 (lectura -> lecturaReader .)
    STRING          reduce using rule 14 (lectura -> lecturaReader .)
    FLOAT           reduce using rule 14 (lectura -> lecturaReader .)
    $end            reduce using rule 14 (lectura -> lecturaReader .)
    LOCKR           reduce using rule 14 (lectura -> lecturaReader .)
    CASE            reduce using rule 14 (lectura -> lecturaReader .)


state 22

    (15) lectura -> lecturaScanf .

    FUNC            reduce using rule 15 (lectura -> lecturaScanf .)
    SWITCH          reduce using rule 15 (lectura -> lecturaScanf .)
    FOR             reduce using rule 15 (lectura -> lecturaScanf .)
    SELECT          reduce using rule 15 (lectura -> lecturaScanf .)
    VARIABLE        reduce using rule 15 (lectura -> lecturaScanf .)
    FMT             reduce using rule 15 (lectura -> lecturaScanf .)
    VAR             reduce using rule 15 (lectura -> lecturaScanf .)
    INTEGER         reduce using rule 15 (lectura -> lecturaScanf .)
    STRING          reduce using rule 15 (lectura -> lecturaScanf .)
    FLOAT           reduce using rule 15 (lectura -> lecturaScanf .)
    $end            reduce using rule 15 (lectura -> lecturaScanf .)
    LOCKR           reduce using rule 15 (lectura -> lecturaScanf .)
    CASE            reduce using rule 15 (lectura -> lecturaScanf .)


state 23

    (16) lectura -> lecturaSscanf .

    FUNC            reduce using rule 16 (lectura -> lecturaSscanf .)
    SWITCH          reduce using rule 16 (lectura -> lecturaSscanf .)
    FOR             reduce using rule 16 (lectura -> lecturaSscanf .)
    SELECT          reduce using rule 16 (lectura -> lecturaSscanf .)
    VARIABLE        reduce using rule 16 (lectura -> lecturaSscanf .)
    FMT             reduce using rule 16 (lectura -> lecturaSscanf .)
    VAR             reduce using rule 16 (lectura -> lecturaSscanf .)
    INTEGER         reduce using rule 16 (lectura -> lecturaSscanf .)
    STRING          reduce using rule 16 (lectura -> lecturaSscanf .)
    FLOAT           reduce using rule 16 (lectura -> lecturaSscanf .)
    $end            reduce using rule 16 (lectura -> lecturaSscanf .)
    LOCKR           reduce using rule 16 (lectura -> lecturaSscanf .)
    CASE            reduce using rule 16 (lectura -> lecturaSscanf .)


state 24

    (83) expresionMatematica -> expresionSuma .

    FUNC            reduce using rule 83 (expresionMatematica -> expresionSuma .)
    SWITCH          reduce using rule 83 (expresionMatematica -> expresionSuma .)
    FOR             reduce using rule 83 (expresionMatematica -> expresionSuma .)
    SELECT          reduce using rule 83 (expresionMatematica -> expresionSuma .)
    VARIABLE        reduce using rule 83 (expresionMatematica -> expresionSuma .)
    FMT             reduce using rule 83 (expresionMatematica -> expresionSuma .)
    VAR             reduce using rule 83 (expresionMatematica -> expresionSuma .)
    INTEGER         reduce using rule 83 (expresionMatematica -> expresionSuma .)
    STRING          reduce using rule 83 (expresionMatematica -> expresionSuma .)
    FLOAT           reduce using rule 83 (expresionMatematica -> expresionSuma .)
    $end            reduce using rule 83 (expresionMatematica -> expresionSuma .)
    LOCKR           reduce using rule 83 (expresionMatematica -> expresionSuma .)
    CASE            reduce using rule 83 (expresionMatematica -> expresionSuma .)
    SEMICOLON       reduce using rule 83 (expresionMatematica -> expresionSuma .)


state 25

    (84) expresionMatematica -> expresionResta .

    FUNC            reduce using rule 84 (expresionMatematica -> expresionResta .)
    SWITCH          reduce using rule 84 (expresionMatematica -> expresionResta .)
    FOR             reduce using rule 84 (expresionMatematica -> expresionResta .)
    SELECT          reduce using rule 84 (expresionMatematica -> expresionResta .)
    VARIABLE        reduce using rule 84 (expresionMatematica -> expresionResta .)
    FMT             reduce using rule 84 (expresionMatematica -> expresionResta .)
    VAR             reduce using rule 84 (expresionMatematica -> expresionResta .)
    INTEGER         reduce using rule 84 (expresionMatematica -> expresionResta .)
    STRING          reduce using rule 84 (expresionMatematica -> expresionResta .)
    FLOAT           reduce using rule 84 (expresionMatematica -> expresionResta .)
    $end            reduce using rule 84 (expresionMatematica -> expresionResta .)
    LOCKR           reduce using rule 84 (expresionMatematica -> expresionResta .)
    CASE            reduce using rule 84 (expresionMatematica -> expresionResta .)
    SEMICOLON       reduce using rule 84 (expresionMatematica -> expresionResta .)


state 26

    (85) expresionMatematica -> expresionMultiplicacion .

    FUNC            reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    SWITCH          reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    FOR             reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    SELECT          reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    VARIABLE        reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    FMT             reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    VAR             reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    INTEGER         reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    STRING          reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    FLOAT           reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    $end            reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    LOCKR           reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    CASE            reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)
    SEMICOLON       reduce using rule 85 (expresionMatematica -> expresionMultiplicacion .)


state 27

    (86) expresionMatematica -> expresionDivision .

    FUNC            reduce using rule 86 (expresionMatematica -> expresionDivision .)
    SWITCH          reduce using rule 86 (expresionMatematica -> expresionDivision .)
    FOR             reduce using rule 86 (expresionMatematica -> expresionDivision .)
    SELECT          reduce using rule 86 (expresionMatematica -> expresionDivision .)
    VARIABLE        reduce using rule 86 (expresionMatematica -> expresionDivision .)
    FMT             reduce using rule 86 (expresionMatematica -> expresionDivision .)
    VAR             reduce using rule 86 (expresionMatematica -> expresionDivision .)
    INTEGER         reduce using rule 86 (expresionMatematica -> expresionDivision .)
    STRING          reduce using rule 86 (expresionMatematica -> expresionDivision .)
    FLOAT           reduce using rule 86 (expresionMatematica -> expresionDivision .)
    $end            reduce using rule 86 (expresionMatematica -> expresionDivision .)
    LOCKR           reduce using rule 86 (expresionMatematica -> expresionDivision .)
    CASE            reduce using rule 86 (expresionMatematica -> expresionDivision .)
    SEMICOLON       reduce using rule 86 (expresionMatematica -> expresionDivision .)


state 28

    (87) expresionMatematica -> expresionModulo .

    FUNC            reduce using rule 87 (expresionMatematica -> expresionModulo .)
    SWITCH          reduce using rule 87 (expresionMatematica -> expresionModulo .)
    FOR             reduce using rule 87 (expresionMatematica -> expresionModulo .)
    SELECT          reduce using rule 87 (expresionMatematica -> expresionModulo .)
    VARIABLE        reduce using rule 87 (expresionMatematica -> expresionModulo .)
    FMT             reduce using rule 87 (expresionMatematica -> expresionModulo .)
    VAR             reduce using rule 87 (expresionMatematica -> expresionModulo .)
    INTEGER         reduce using rule 87 (expresionMatematica -> expresionModulo .)
    STRING          reduce using rule 87 (expresionMatematica -> expresionModulo .)
    FLOAT           reduce using rule 87 (expresionMatematica -> expresionModulo .)
    $end            reduce using rule 87 (expresionMatematica -> expresionModulo .)
    LOCKR           reduce using rule 87 (expresionMatematica -> expresionModulo .)
    CASE            reduce using rule 87 (expresionMatematica -> expresionModulo .)
    SEMICOLON       reduce using rule 87 (expresionMatematica -> expresionModulo .)


state 29

    (88) expresionMatematica -> factor . operadorMatematico factor
    (102) valor -> factor .
    (94) operadorMatematico -> . PLUS
    (95) operadorMatematico -> . MINUS
    (96) operadorMatematico -> . TIMES
    (97) operadorMatematico -> . DIVIDE
    (98) operadorMatematico -> . MODULE

    EQUAL           reduce using rule 102 (valor -> factor .)
    UNEQUAL         reduce using rule 102 (valor -> factor .)
    GREATERTHAN     reduce using rule 102 (valor -> factor .)
    SMALLERTHAN     reduce using rule 102 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 102 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 102 (valor -> factor .)
    AND             reduce using rule 102 (valor -> factor .)
    OR              reduce using rule 102 (valor -> factor .)
    NOT             reduce using rule 102 (valor -> factor .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    MODULE          shift and go to state 69

    operadorMatematico             shift and go to state 64

state 30

    (62) condicion -> valor . operadorComparacion valor
    (63) condicion -> valor . operadorLogico valor
    (71) operadorComparacion -> . EQUAL
    (72) operadorComparacion -> . UNEQUAL
    (73) operadorComparacion -> . GREATERTHAN
    (74) operadorComparacion -> . SMALLERTHAN
    (75) operadorComparacion -> . GREATEROREQUALTHAN
    (76) operadorComparacion -> . SMALLEROREQUALTHAN
    (80) operadorLogico -> . AND
    (81) operadorLogico -> . OR
    (82) operadorLogico -> . NOT

    EQUAL           shift and go to state 72
    UNEQUAL         shift and go to state 73
    GREATERTHAN     shift and go to state 74
    SMALLERTHAN     shift and go to state 75
    GREATEROREQUALTHAN shift and go to state 76
    SMALLEROREQUALTHAN shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    NOT             shift and go to state 80

    operadorComparacion            shift and go to state 70
    operadorLogico                 shift and go to state 71

state 31

    (64) condicion -> comparaciones .

    FUNC            reduce using rule 64 (condicion -> comparaciones .)
    SWITCH          reduce using rule 64 (condicion -> comparaciones .)
    FOR             reduce using rule 64 (condicion -> comparaciones .)
    SELECT          reduce using rule 64 (condicion -> comparaciones .)
    VARIABLE        reduce using rule 64 (condicion -> comparaciones .)
    FMT             reduce using rule 64 (condicion -> comparaciones .)
    VAR             reduce using rule 64 (condicion -> comparaciones .)
    INTEGER         reduce using rule 64 (condicion -> comparaciones .)
    STRING          reduce using rule 64 (condicion -> comparaciones .)
    FLOAT           reduce using rule 64 (condicion -> comparaciones .)
    $end            reduce using rule 64 (condicion -> comparaciones .)
    LOCKR           reduce using rule 64 (condicion -> comparaciones .)
    CASE            reduce using rule 64 (condicion -> comparaciones .)
    LOCKL           reduce using rule 64 (condicion -> comparaciones .)
    SEMICOLON       reduce using rule 64 (condicion -> comparaciones .)
    COLON           reduce using rule 64 (condicion -> comparaciones .)


state 32

    (40) impresionSencilla -> tipoImpresion . BRACKETL valores BRACKETR

    BRACKETL        shift and go to state 81


state 33

    (43) impresionBufio -> FMT . DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> FMT . DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (46) lecturaScanf -> FMT . DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> FMT . DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (41) tipoImpresion -> FMT . DOT PRINT
    (42) tipoImpresion -> FMT . DOT PRINTLN

    DOT             shift and go to state 82


state 34

    (101) valor -> STRING .

    EQUAL           reduce using rule 101 (valor -> STRING .)
    UNEQUAL         reduce using rule 101 (valor -> STRING .)
    GREATERTHAN     reduce using rule 101 (valor -> STRING .)
    SMALLERTHAN     reduce using rule 101 (valor -> STRING .)
    GREATEROREQUALTHAN reduce using rule 101 (valor -> STRING .)
    SMALLEROREQUALTHAN reduce using rule 101 (valor -> STRING .)
    AND             reduce using rule 101 (valor -> STRING .)
    OR              reduce using rule 101 (valor -> STRING .)
    NOT             reduce using rule 101 (valor -> STRING .)
    FUNC            reduce using rule 101 (valor -> STRING .)
    SWITCH          reduce using rule 101 (valor -> STRING .)
    FOR             reduce using rule 101 (valor -> STRING .)
    SELECT          reduce using rule 101 (valor -> STRING .)
    VARIABLE        reduce using rule 101 (valor -> STRING .)
    FMT             reduce using rule 101 (valor -> STRING .)
    VAR             reduce using rule 101 (valor -> STRING .)
    INTEGER         reduce using rule 101 (valor -> STRING .)
    STRING          reduce using rule 101 (valor -> STRING .)
    FLOAT           reduce using rule 101 (valor -> STRING .)
    $end            reduce using rule 101 (valor -> STRING .)
    LOCKR           reduce using rule 101 (valor -> STRING .)
    CASE            reduce using rule 101 (valor -> STRING .)
    SEMICOLON       reduce using rule 101 (valor -> STRING .)
    LOCKL           reduce using rule 101 (valor -> STRING .)
    COLON           reduce using rule 101 (valor -> STRING .)
    COMA            reduce using rule 101 (valor -> STRING .)
    BRACKETR        reduce using rule 101 (valor -> STRING .)


state 35

    (58) varAssign -> VAR . VARIABLE

    VARIABLE        shift and go to state 83


state 36

    (89) expresionSuma -> INTEGER . PLUS INTEGER
    (90) expresionResta -> INTEGER . MINUS INTEGER
    (91) expresionMultiplicacion -> INTEGER . TIMES INTEGER
    (92) expresionDivision -> INTEGER . DIVIDE INTEGER
    (93) expresionModulo -> INTEGER . MODULE INTEGER
    (65) comparaciones -> INTEGER . EQUAL INTEGER
    (66) comparaciones -> INTEGER . UNEQUAL INTEGER
    (67) comparaciones -> INTEGER . GREATERTHAN INTEGER
    (68) comparaciones -> INTEGER . SMALLERTHAN INTEGER
    (69) comparaciones -> INTEGER . GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> INTEGER . SMALLEROREQUALTHAN INTEGER
    (106) numero -> INTEGER .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for UNEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for SMALLERTHAN resolved as shift
  ! shift/reduce conflict for GREATEROREQUALTHAN resolved as shift
  ! shift/reduce conflict for SMALLEROREQUALTHAN resolved as shift
    PLUS            shift and go to state 84
    MINUS           shift and go to state 85
    TIMES           shift and go to state 86
    DIVIDE          shift and go to state 87
    MODULE          shift and go to state 88
    EQUAL           shift and go to state 89
    UNEQUAL         shift and go to state 90
    GREATERTHAN     shift and go to state 91
    SMALLERTHAN     shift and go to state 92
    GREATEROREQUALTHAN shift and go to state 93
    SMALLEROREQUALTHAN shift and go to state 94
    AND             reduce using rule 106 (numero -> INTEGER .)
    OR              reduce using rule 106 (numero -> INTEGER .)
    NOT             reduce using rule 106 (numero -> INTEGER .)
    FUNC            reduce using rule 106 (numero -> INTEGER .)
    SWITCH          reduce using rule 106 (numero -> INTEGER .)
    FOR             reduce using rule 106 (numero -> INTEGER .)
    SELECT          reduce using rule 106 (numero -> INTEGER .)
    VARIABLE        reduce using rule 106 (numero -> INTEGER .)
    FMT             reduce using rule 106 (numero -> INTEGER .)
    VAR             reduce using rule 106 (numero -> INTEGER .)
    INTEGER         reduce using rule 106 (numero -> INTEGER .)
    STRING          reduce using rule 106 (numero -> INTEGER .)
    FLOAT           reduce using rule 106 (numero -> INTEGER .)
    $end            reduce using rule 106 (numero -> INTEGER .)
    LOCKR           reduce using rule 106 (numero -> INTEGER .)
    CASE            reduce using rule 106 (numero -> INTEGER .)
    SEMICOLON       reduce using rule 106 (numero -> INTEGER .)

  ! PLUS            [ reduce using rule 106 (numero -> INTEGER .) ]
  ! MINUS           [ reduce using rule 106 (numero -> INTEGER .) ]
  ! TIMES           [ reduce using rule 106 (numero -> INTEGER .) ]
  ! DIVIDE          [ reduce using rule 106 (numero -> INTEGER .) ]
  ! MODULE          [ reduce using rule 106 (numero -> INTEGER .) ]
  ! EQUAL           [ reduce using rule 106 (numero -> INTEGER .) ]
  ! UNEQUAL         [ reduce using rule 106 (numero -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 106 (numero -> INTEGER .) ]
  ! SMALLERTHAN     [ reduce using rule 106 (numero -> INTEGER .) ]
  ! GREATEROREQUALTHAN [ reduce using rule 106 (numero -> INTEGER .) ]
  ! SMALLEROREQUALTHAN [ reduce using rule 106 (numero -> INTEGER .) ]


state 37

    (104) factor -> numero .

    PLUS            reduce using rule 104 (factor -> numero .)
    MINUS           reduce using rule 104 (factor -> numero .)
    TIMES           reduce using rule 104 (factor -> numero .)
    DIVIDE          reduce using rule 104 (factor -> numero .)
    MODULE          reduce using rule 104 (factor -> numero .)
    EQUAL           reduce using rule 104 (factor -> numero .)
    UNEQUAL         reduce using rule 104 (factor -> numero .)
    GREATERTHAN     reduce using rule 104 (factor -> numero .)
    SMALLERTHAN     reduce using rule 104 (factor -> numero .)
    GREATEROREQUALTHAN reduce using rule 104 (factor -> numero .)
    SMALLEROREQUALTHAN reduce using rule 104 (factor -> numero .)
    AND             reduce using rule 104 (factor -> numero .)
    OR              reduce using rule 104 (factor -> numero .)
    NOT             reduce using rule 104 (factor -> numero .)
    FUNC            reduce using rule 104 (factor -> numero .)
    SWITCH          reduce using rule 104 (factor -> numero .)
    FOR             reduce using rule 104 (factor -> numero .)
    SELECT          reduce using rule 104 (factor -> numero .)
    VARIABLE        reduce using rule 104 (factor -> numero .)
    FMT             reduce using rule 104 (factor -> numero .)
    VAR             reduce using rule 104 (factor -> numero .)
    INTEGER         reduce using rule 104 (factor -> numero .)
    STRING          reduce using rule 104 (factor -> numero .)
    FLOAT           reduce using rule 104 (factor -> numero .)
    $end            reduce using rule 104 (factor -> numero .)
    LOCKR           reduce using rule 104 (factor -> numero .)
    CASE            reduce using rule 104 (factor -> numero .)
    SEMICOLON       reduce using rule 104 (factor -> numero .)
    LOCKL           reduce using rule 104 (factor -> numero .)
    COLON           reduce using rule 104 (factor -> numero .)
    COMA            reduce using rule 104 (factor -> numero .)
    BRACKETR        reduce using rule 104 (factor -> numero .)


state 38

    (105) numero -> FLOAT .

    PLUS            reduce using rule 105 (numero -> FLOAT .)
    MINUS           reduce using rule 105 (numero -> FLOAT .)
    TIMES           reduce using rule 105 (numero -> FLOAT .)
    DIVIDE          reduce using rule 105 (numero -> FLOAT .)
    MODULE          reduce using rule 105 (numero -> FLOAT .)
    EQUAL           reduce using rule 105 (numero -> FLOAT .)
    UNEQUAL         reduce using rule 105 (numero -> FLOAT .)
    GREATERTHAN     reduce using rule 105 (numero -> FLOAT .)
    SMALLERTHAN     reduce using rule 105 (numero -> FLOAT .)
    GREATEROREQUALTHAN reduce using rule 105 (numero -> FLOAT .)
    SMALLEROREQUALTHAN reduce using rule 105 (numero -> FLOAT .)
    AND             reduce using rule 105 (numero -> FLOAT .)
    OR              reduce using rule 105 (numero -> FLOAT .)
    NOT             reduce using rule 105 (numero -> FLOAT .)
    FUNC            reduce using rule 105 (numero -> FLOAT .)
    SWITCH          reduce using rule 105 (numero -> FLOAT .)
    FOR             reduce using rule 105 (numero -> FLOAT .)
    SELECT          reduce using rule 105 (numero -> FLOAT .)
    VARIABLE        reduce using rule 105 (numero -> FLOAT .)
    FMT             reduce using rule 105 (numero -> FLOAT .)
    VAR             reduce using rule 105 (numero -> FLOAT .)
    INTEGER         reduce using rule 105 (numero -> FLOAT .)
    STRING          reduce using rule 105 (numero -> FLOAT .)
    FLOAT           reduce using rule 105 (numero -> FLOAT .)
    $end            reduce using rule 105 (numero -> FLOAT .)
    LOCKR           reduce using rule 105 (numero -> FLOAT .)
    CASE            reduce using rule 105 (numero -> FLOAT .)
    SEMICOLON       reduce using rule 105 (numero -> FLOAT .)
    LOCKL           reduce using rule 105 (numero -> FLOAT .)
    COLON           reduce using rule 105 (numero -> FLOAT .)
    COMA            reduce using rule 105 (numero -> FLOAT .)
    BRACKETR        reduce using rule 105 (numero -> FLOAT .)


state 39

    (2) main -> ejecutable main .

    $end            reduce using rule 2 (main -> ejecutable main .)
    LOCKR           reduce using rule 2 (main -> ejecutable main .)
    CASE            reduce using rule 2 (main -> ejecutable main .)


state 40

    (25) funcion -> FUNC VARIABLE . BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR

    BRACKETL        shift and go to state 95


state 41

    (19) asignacion -> VARIABLE ASSIGN . asignable
    (22) asignable -> . valor
    (23) asignable -> . expresionMatematica
    (24) asignable -> . condicion
    (101) valor -> . STRING
    (102) valor -> . factor
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 38

    asignable                      shift and go to state 97
    valor                          shift and go to state 54
    expresionMatematica            shift and go to state 55
    condicion                      shift and go to state 56
    factor                         shift and go to state 57
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    comparaciones                  shift and go to state 31
    numero                         shift and go to state 37

state 42

    (57) varShortAssign -> VARIABLE SHORTASSIGN .

    BUFIO           reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)
    VARIABLE        reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)
    STRING          reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)
    INTEGER         reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)
    FLOAT           reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)
    RANGE           reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)
    SMALLERTHAN     reduce using rule 57 (varShortAssign -> VARIABLE SHORTASSIGN .)


state 43

    (28) estructuraControl -> SWITCH VARIABLE . LOCKL cases LOCKR

    LOCKL           shift and go to state 98


state 44

    (29) estructuraControl -> FOR condicion . LOCKL main LOCKR

    LOCKL           shift and go to state 99


state 45

    (30) estructuraControl -> FOR asignacion . SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 100


state 46

    (31) estructuraControl -> FOR VARIABLE . COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (19) asignacion -> VARIABLE . ASSIGN asignable
    (57) varShortAssign -> VARIABLE . SHORTASSIGN
    (103) factor -> VARIABLE .

    COMA            shift and go to state 101
    ASSIGN          shift and go to state 41
    SHORTASSIGN     shift and go to state 42
    EQUAL           reduce using rule 103 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 103 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    AND             reduce using rule 103 (factor -> VARIABLE .)
    OR              reduce using rule 103 (factor -> VARIABLE .)
    NOT             reduce using rule 103 (factor -> VARIABLE .)


state 47

    (32) estructuraControl -> FOR varShortAssign . RANGE VARIABLE LOCKL main LOCKR
    (17) asignacion -> varShortAssign . asignable
    (22) asignable -> . valor
    (23) asignable -> . expresionMatematica
    (24) asignable -> . condicion
    (101) valor -> . STRING
    (102) valor -> . factor
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    RANGE           shift and go to state 102
    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 38

    asignable                      shift and go to state 52
    valor                          shift and go to state 54
    expresionMatematica            shift and go to state 55
    condicion                      shift and go to state 56
    factor                         shift and go to state 57
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    comparaciones                  shift and go to state 31
    numero                         shift and go to state 37

state 48

    (18) asignacion -> varAssign . ASSIGN asignable
    (20) asignacion -> varAssign . tipoDato ASSIGN asignable
    (77) tipoDato -> . INTTYPE
    (78) tipoDato -> . FLOATTYPE
    (79) tipoDato -> . BOOLEANTYPE

    ASSIGN          shift and go to state 60
    INTTYPE         shift and go to state 61
    FLOATTYPE       shift and go to state 62
    BOOLEANTYPE     shift and go to state 63

    tipoDato                       shift and go to state 103

state 49

    (102) valor -> factor .

    EQUAL           reduce using rule 102 (valor -> factor .)
    UNEQUAL         reduce using rule 102 (valor -> factor .)
    GREATERTHAN     reduce using rule 102 (valor -> factor .)
    SMALLERTHAN     reduce using rule 102 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 102 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 102 (valor -> factor .)
    AND             reduce using rule 102 (valor -> factor .)
    OR              reduce using rule 102 (valor -> factor .)
    NOT             reduce using rule 102 (valor -> factor .)
    FUNC            reduce using rule 102 (valor -> factor .)
    SWITCH          reduce using rule 102 (valor -> factor .)
    FOR             reduce using rule 102 (valor -> factor .)
    SELECT          reduce using rule 102 (valor -> factor .)
    VARIABLE        reduce using rule 102 (valor -> factor .)
    FMT             reduce using rule 102 (valor -> factor .)
    VAR             reduce using rule 102 (valor -> factor .)
    INTEGER         reduce using rule 102 (valor -> factor .)
    STRING          reduce using rule 102 (valor -> factor .)
    FLOAT           reduce using rule 102 (valor -> factor .)
    $end            reduce using rule 102 (valor -> factor .)
    LOCKR           reduce using rule 102 (valor -> factor .)
    CASE            reduce using rule 102 (valor -> factor .)
    LOCKL           reduce using rule 102 (valor -> factor .)
    SEMICOLON       reduce using rule 102 (valor -> factor .)
    COLON           reduce using rule 102 (valor -> factor .)
    COMA            reduce using rule 102 (valor -> factor .)
    BRACKETR        reduce using rule 102 (valor -> factor .)


state 50

    (65) comparaciones -> INTEGER . EQUAL INTEGER
    (66) comparaciones -> INTEGER . UNEQUAL INTEGER
    (67) comparaciones -> INTEGER . GREATERTHAN INTEGER
    (68) comparaciones -> INTEGER . SMALLERTHAN INTEGER
    (69) comparaciones -> INTEGER . GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> INTEGER . SMALLEROREQUALTHAN INTEGER
    (106) numero -> INTEGER .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for UNEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for SMALLERTHAN resolved as shift
  ! shift/reduce conflict for GREATEROREQUALTHAN resolved as shift
  ! shift/reduce conflict for SMALLEROREQUALTHAN resolved as shift
    EQUAL           shift and go to state 89
    UNEQUAL         shift and go to state 90
    GREATERTHAN     shift and go to state 91
    SMALLERTHAN     shift and go to state 92
    GREATEROREQUALTHAN shift and go to state 93
    SMALLEROREQUALTHAN shift and go to state 94
    AND             reduce using rule 106 (numero -> INTEGER .)
    OR              reduce using rule 106 (numero -> INTEGER .)
    NOT             reduce using rule 106 (numero -> INTEGER .)

  ! EQUAL           [ reduce using rule 106 (numero -> INTEGER .) ]
  ! UNEQUAL         [ reduce using rule 106 (numero -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 106 (numero -> INTEGER .) ]
  ! SMALLERTHAN     [ reduce using rule 106 (numero -> INTEGER .) ]
  ! GREATEROREQUALTHAN [ reduce using rule 106 (numero -> INTEGER .) ]
  ! SMALLEROREQUALTHAN [ reduce using rule 106 (numero -> INTEGER .) ]


state 51

    (55) declaracion -> varShortAssign BUFIO . DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> varShortAssign BUFIO . DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    DOT             shift and go to state 104


state 52

    (17) asignacion -> varShortAssign asignable .

    FUNC            reduce using rule 17 (asignacion -> varShortAssign asignable .)
    SWITCH          reduce using rule 17 (asignacion -> varShortAssign asignable .)
    FOR             reduce using rule 17 (asignacion -> varShortAssign asignable .)
    SELECT          reduce using rule 17 (asignacion -> varShortAssign asignable .)
    VARIABLE        reduce using rule 17 (asignacion -> varShortAssign asignable .)
    FMT             reduce using rule 17 (asignacion -> varShortAssign asignable .)
    VAR             reduce using rule 17 (asignacion -> varShortAssign asignable .)
    INTEGER         reduce using rule 17 (asignacion -> varShortAssign asignable .)
    STRING          reduce using rule 17 (asignacion -> varShortAssign asignable .)
    FLOAT           reduce using rule 17 (asignacion -> varShortAssign asignable .)
    $end            reduce using rule 17 (asignacion -> varShortAssign asignable .)
    LOCKR           reduce using rule 17 (asignacion -> varShortAssign asignable .)
    CASE            reduce using rule 17 (asignacion -> varShortAssign asignable .)
    SEMICOLON       reduce using rule 17 (asignacion -> varShortAssign asignable .)


state 53

    (45) lecturaReader -> varShortAssign VARIABLE . DOT READSTRING BRACKETL STRING BRACKETR
    (103) factor -> VARIABLE .

    DOT             shift and go to state 105
    PLUS            reduce using rule 103 (factor -> VARIABLE .)
    MINUS           reduce using rule 103 (factor -> VARIABLE .)
    TIMES           reduce using rule 103 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 103 (factor -> VARIABLE .)
    MODULE          reduce using rule 103 (factor -> VARIABLE .)
    EQUAL           reduce using rule 103 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 103 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    AND             reduce using rule 103 (factor -> VARIABLE .)
    OR              reduce using rule 103 (factor -> VARIABLE .)
    NOT             reduce using rule 103 (factor -> VARIABLE .)
    FUNC            reduce using rule 103 (factor -> VARIABLE .)
    SWITCH          reduce using rule 103 (factor -> VARIABLE .)
    FOR             reduce using rule 103 (factor -> VARIABLE .)
    SELECT          reduce using rule 103 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 103 (factor -> VARIABLE .)
    FMT             reduce using rule 103 (factor -> VARIABLE .)
    VAR             reduce using rule 103 (factor -> VARIABLE .)
    INTEGER         reduce using rule 103 (factor -> VARIABLE .)
    STRING          reduce using rule 103 (factor -> VARIABLE .)
    FLOAT           reduce using rule 103 (factor -> VARIABLE .)
    $end            reduce using rule 103 (factor -> VARIABLE .)
    LOCKR           reduce using rule 103 (factor -> VARIABLE .)
    CASE            reduce using rule 103 (factor -> VARIABLE .)


state 54

    (22) asignable -> valor .
    (62) condicion -> valor . operadorComparacion valor
    (63) condicion -> valor . operadorLogico valor
    (71) operadorComparacion -> . EQUAL
    (72) operadorComparacion -> . UNEQUAL
    (73) operadorComparacion -> . GREATERTHAN
    (74) operadorComparacion -> . SMALLERTHAN
    (75) operadorComparacion -> . GREATEROREQUALTHAN
    (76) operadorComparacion -> . SMALLEROREQUALTHAN
    (80) operadorLogico -> . AND
    (81) operadorLogico -> . OR
    (82) operadorLogico -> . NOT

    FUNC            reduce using rule 22 (asignable -> valor .)
    SWITCH          reduce using rule 22 (asignable -> valor .)
    FOR             reduce using rule 22 (asignable -> valor .)
    SELECT          reduce using rule 22 (asignable -> valor .)
    VARIABLE        reduce using rule 22 (asignable -> valor .)
    FMT             reduce using rule 22 (asignable -> valor .)
    VAR             reduce using rule 22 (asignable -> valor .)
    INTEGER         reduce using rule 22 (asignable -> valor .)
    STRING          reduce using rule 22 (asignable -> valor .)
    FLOAT           reduce using rule 22 (asignable -> valor .)
    $end            reduce using rule 22 (asignable -> valor .)
    LOCKR           reduce using rule 22 (asignable -> valor .)
    CASE            reduce using rule 22 (asignable -> valor .)
    SEMICOLON       reduce using rule 22 (asignable -> valor .)
    EQUAL           shift and go to state 72
    UNEQUAL         shift and go to state 73
    GREATERTHAN     shift and go to state 74
    SMALLERTHAN     shift and go to state 75
    GREATEROREQUALTHAN shift and go to state 76
    SMALLEROREQUALTHAN shift and go to state 77
    AND             shift and go to state 78
    OR              shift and go to state 79
    NOT             shift and go to state 80

    operadorComparacion            shift and go to state 70
    operadorLogico                 shift and go to state 71

state 55

    (23) asignable -> expresionMatematica .

    FUNC            reduce using rule 23 (asignable -> expresionMatematica .)
    SWITCH          reduce using rule 23 (asignable -> expresionMatematica .)
    FOR             reduce using rule 23 (asignable -> expresionMatematica .)
    SELECT          reduce using rule 23 (asignable -> expresionMatematica .)
    VARIABLE        reduce using rule 23 (asignable -> expresionMatematica .)
    FMT             reduce using rule 23 (asignable -> expresionMatematica .)
    VAR             reduce using rule 23 (asignable -> expresionMatematica .)
    INTEGER         reduce using rule 23 (asignable -> expresionMatematica .)
    STRING          reduce using rule 23 (asignable -> expresionMatematica .)
    FLOAT           reduce using rule 23 (asignable -> expresionMatematica .)
    $end            reduce using rule 23 (asignable -> expresionMatematica .)
    LOCKR           reduce using rule 23 (asignable -> expresionMatematica .)
    CASE            reduce using rule 23 (asignable -> expresionMatematica .)
    SEMICOLON       reduce using rule 23 (asignable -> expresionMatematica .)


state 56

    (24) asignable -> condicion .

    FUNC            reduce using rule 24 (asignable -> condicion .)
    SWITCH          reduce using rule 24 (asignable -> condicion .)
    FOR             reduce using rule 24 (asignable -> condicion .)
    SELECT          reduce using rule 24 (asignable -> condicion .)
    VARIABLE        reduce using rule 24 (asignable -> condicion .)
    FMT             reduce using rule 24 (asignable -> condicion .)
    VAR             reduce using rule 24 (asignable -> condicion .)
    INTEGER         reduce using rule 24 (asignable -> condicion .)
    STRING          reduce using rule 24 (asignable -> condicion .)
    FLOAT           reduce using rule 24 (asignable -> condicion .)
    $end            reduce using rule 24 (asignable -> condicion .)
    LOCKR           reduce using rule 24 (asignable -> condicion .)
    CASE            reduce using rule 24 (asignable -> condicion .)
    SEMICOLON       reduce using rule 24 (asignable -> condicion .)


state 57

    (102) valor -> factor .
    (88) expresionMatematica -> factor . operadorMatematico factor
    (94) operadorMatematico -> . PLUS
    (95) operadorMatematico -> . MINUS
    (96) operadorMatematico -> . TIMES
    (97) operadorMatematico -> . DIVIDE
    (98) operadorMatematico -> . MODULE

    EQUAL           reduce using rule 102 (valor -> factor .)
    UNEQUAL         reduce using rule 102 (valor -> factor .)
    GREATERTHAN     reduce using rule 102 (valor -> factor .)
    SMALLERTHAN     reduce using rule 102 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 102 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 102 (valor -> factor .)
    AND             reduce using rule 102 (valor -> factor .)
    OR              reduce using rule 102 (valor -> factor .)
    NOT             reduce using rule 102 (valor -> factor .)
    FUNC            reduce using rule 102 (valor -> factor .)
    SWITCH          reduce using rule 102 (valor -> factor .)
    FOR             reduce using rule 102 (valor -> factor .)
    SELECT          reduce using rule 102 (valor -> factor .)
    VARIABLE        reduce using rule 102 (valor -> factor .)
    FMT             reduce using rule 102 (valor -> factor .)
    VAR             reduce using rule 102 (valor -> factor .)
    INTEGER         reduce using rule 102 (valor -> factor .)
    STRING          reduce using rule 102 (valor -> factor .)
    FLOAT           reduce using rule 102 (valor -> factor .)
    $end            reduce using rule 102 (valor -> factor .)
    LOCKR           reduce using rule 102 (valor -> factor .)
    CASE            reduce using rule 102 (valor -> factor .)
    SEMICOLON       reduce using rule 102 (valor -> factor .)
    PLUS            shift and go to state 65
    MINUS           shift and go to state 66
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 68
    MODULE          shift and go to state 69

    operadorMatematico             shift and go to state 64

state 58

    (33) estructuraControl -> SELECT LOCKL . casesSelect LOCKR
    (34) casesSelect -> . caseSelect
    (35) casesSelect -> . caseSelect casesSelect
    (36) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    CASE            shift and go to state 108

    casesSelect                    shift and go to state 106
    caseSelect                     shift and go to state 107

state 59

    (21) declaracion -> varAssign tipoDato .
    (20) asignacion -> varAssign tipoDato . ASSIGN asignable

    FUNC            reduce using rule 21 (declaracion -> varAssign tipoDato .)
    SWITCH          reduce using rule 21 (declaracion -> varAssign tipoDato .)
    FOR             reduce using rule 21 (declaracion -> varAssign tipoDato .)
    SELECT          reduce using rule 21 (declaracion -> varAssign tipoDato .)
    VARIABLE        reduce using rule 21 (declaracion -> varAssign tipoDato .)
    FMT             reduce using rule 21 (declaracion -> varAssign tipoDato .)
    VAR             reduce using rule 21 (declaracion -> varAssign tipoDato .)
    INTEGER         reduce using rule 21 (declaracion -> varAssign tipoDato .)
    STRING          reduce using rule 21 (declaracion -> varAssign tipoDato .)
    FLOAT           reduce using rule 21 (declaracion -> varAssign tipoDato .)
    $end            reduce using rule 21 (declaracion -> varAssign tipoDato .)
    LOCKR           reduce using rule 21 (declaracion -> varAssign tipoDato .)
    CASE            reduce using rule 21 (declaracion -> varAssign tipoDato .)
    ASSIGN          shift and go to state 109


state 60

    (18) asignacion -> varAssign ASSIGN . asignable
    (22) asignable -> . valor
    (23) asignable -> . expresionMatematica
    (24) asignable -> . condicion
    (101) valor -> . STRING
    (102) valor -> . factor
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 38

    asignable                      shift and go to state 110
    valor                          shift and go to state 54
    expresionMatematica            shift and go to state 55
    condicion                      shift and go to state 56
    factor                         shift and go to state 57
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    comparaciones                  shift and go to state 31
    numero                         shift and go to state 37

state 61

    (77) tipoDato -> INTTYPE .

    ASSIGN          reduce using rule 77 (tipoDato -> INTTYPE .)
    FUNC            reduce using rule 77 (tipoDato -> INTTYPE .)
    SWITCH          reduce using rule 77 (tipoDato -> INTTYPE .)
    FOR             reduce using rule 77 (tipoDato -> INTTYPE .)
    SELECT          reduce using rule 77 (tipoDato -> INTTYPE .)
    VARIABLE        reduce using rule 77 (tipoDato -> INTTYPE .)
    FMT             reduce using rule 77 (tipoDato -> INTTYPE .)
    VAR             reduce using rule 77 (tipoDato -> INTTYPE .)
    INTEGER         reduce using rule 77 (tipoDato -> INTTYPE .)
    STRING          reduce using rule 77 (tipoDato -> INTTYPE .)
    FLOAT           reduce using rule 77 (tipoDato -> INTTYPE .)
    $end            reduce using rule 77 (tipoDato -> INTTYPE .)
    LOCKR           reduce using rule 77 (tipoDato -> INTTYPE .)
    CASE            reduce using rule 77 (tipoDato -> INTTYPE .)
    BRACKETR        reduce using rule 77 (tipoDato -> INTTYPE .)
    LOCKL           reduce using rule 77 (tipoDato -> INTTYPE .)


state 62

    (78) tipoDato -> FLOATTYPE .

    ASSIGN          reduce using rule 78 (tipoDato -> FLOATTYPE .)
    FUNC            reduce using rule 78 (tipoDato -> FLOATTYPE .)
    SWITCH          reduce using rule 78 (tipoDato -> FLOATTYPE .)
    FOR             reduce using rule 78 (tipoDato -> FLOATTYPE .)
    SELECT          reduce using rule 78 (tipoDato -> FLOATTYPE .)
    VARIABLE        reduce using rule 78 (tipoDato -> FLOATTYPE .)
    FMT             reduce using rule 78 (tipoDato -> FLOATTYPE .)
    VAR             reduce using rule 78 (tipoDato -> FLOATTYPE .)
    INTEGER         reduce using rule 78 (tipoDato -> FLOATTYPE .)
    STRING          reduce using rule 78 (tipoDato -> FLOATTYPE .)
    FLOAT           reduce using rule 78 (tipoDato -> FLOATTYPE .)
    $end            reduce using rule 78 (tipoDato -> FLOATTYPE .)
    LOCKR           reduce using rule 78 (tipoDato -> FLOATTYPE .)
    CASE            reduce using rule 78 (tipoDato -> FLOATTYPE .)
    BRACKETR        reduce using rule 78 (tipoDato -> FLOATTYPE .)
    LOCKL           reduce using rule 78 (tipoDato -> FLOATTYPE .)


state 63

    (79) tipoDato -> BOOLEANTYPE .

    ASSIGN          reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    FUNC            reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    SWITCH          reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    FOR             reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    SELECT          reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    VARIABLE        reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    FMT             reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    VAR             reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    INTEGER         reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    STRING          reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    FLOAT           reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    $end            reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    LOCKR           reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    CASE            reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    BRACKETR        reduce using rule 79 (tipoDato -> BOOLEANTYPE .)
    LOCKL           reduce using rule 79 (tipoDato -> BOOLEANTYPE .)


state 64

    (88) expresionMatematica -> factor operadorMatematico . factor
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38
    INTEGER         shift and go to state 112

    factor                         shift and go to state 111
    numero                         shift and go to state 37

state 65

    (94) operadorMatematico -> PLUS .

    VARIABLE        reduce using rule 94 (operadorMatematico -> PLUS .)
    FLOAT           reduce using rule 94 (operadorMatematico -> PLUS .)
    INTEGER         reduce using rule 94 (operadorMatematico -> PLUS .)


state 66

    (95) operadorMatematico -> MINUS .

    VARIABLE        reduce using rule 95 (operadorMatematico -> MINUS .)
    FLOAT           reduce using rule 95 (operadorMatematico -> MINUS .)
    INTEGER         reduce using rule 95 (operadorMatematico -> MINUS .)


state 67

    (96) operadorMatematico -> TIMES .

    VARIABLE        reduce using rule 96 (operadorMatematico -> TIMES .)
    FLOAT           reduce using rule 96 (operadorMatematico -> TIMES .)
    INTEGER         reduce using rule 96 (operadorMatematico -> TIMES .)


state 68

    (97) operadorMatematico -> DIVIDE .

    VARIABLE        reduce using rule 97 (operadorMatematico -> DIVIDE .)
    FLOAT           reduce using rule 97 (operadorMatematico -> DIVIDE .)
    INTEGER         reduce using rule 97 (operadorMatematico -> DIVIDE .)


state 69

    (98) operadorMatematico -> MODULE .

    VARIABLE        reduce using rule 98 (operadorMatematico -> MODULE .)
    FLOAT           reduce using rule 98 (operadorMatematico -> MODULE .)
    INTEGER         reduce using rule 98 (operadorMatematico -> MODULE .)


state 70

    (62) condicion -> valor operadorComparacion . valor
    (101) valor -> . STRING
    (102) valor -> . factor
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38
    INTEGER         shift and go to state 112

    valor                          shift and go to state 113
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 71

    (63) condicion -> valor operadorLogico . valor
    (101) valor -> . STRING
    (102) valor -> . factor
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38
    INTEGER         shift and go to state 112

    valor                          shift and go to state 114
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 72

    (71) operadorComparacion -> EQUAL .

    STRING          reduce using rule 71 (operadorComparacion -> EQUAL .)
    VARIABLE        reduce using rule 71 (operadorComparacion -> EQUAL .)
    FLOAT           reduce using rule 71 (operadorComparacion -> EQUAL .)
    INTEGER         reduce using rule 71 (operadorComparacion -> EQUAL .)


state 73

    (72) operadorComparacion -> UNEQUAL .

    STRING          reduce using rule 72 (operadorComparacion -> UNEQUAL .)
    VARIABLE        reduce using rule 72 (operadorComparacion -> UNEQUAL .)
    FLOAT           reduce using rule 72 (operadorComparacion -> UNEQUAL .)
    INTEGER         reduce using rule 72 (operadorComparacion -> UNEQUAL .)


state 74

    (73) operadorComparacion -> GREATERTHAN .

    STRING          reduce using rule 73 (operadorComparacion -> GREATERTHAN .)
    VARIABLE        reduce using rule 73 (operadorComparacion -> GREATERTHAN .)
    FLOAT           reduce using rule 73 (operadorComparacion -> GREATERTHAN .)
    INTEGER         reduce using rule 73 (operadorComparacion -> GREATERTHAN .)


state 75

    (74) operadorComparacion -> SMALLERTHAN .

    STRING          reduce using rule 74 (operadorComparacion -> SMALLERTHAN .)
    VARIABLE        reduce using rule 74 (operadorComparacion -> SMALLERTHAN .)
    FLOAT           reduce using rule 74 (operadorComparacion -> SMALLERTHAN .)
    INTEGER         reduce using rule 74 (operadorComparacion -> SMALLERTHAN .)


state 76

    (75) operadorComparacion -> GREATEROREQUALTHAN .

    STRING          reduce using rule 75 (operadorComparacion -> GREATEROREQUALTHAN .)
    VARIABLE        reduce using rule 75 (operadorComparacion -> GREATEROREQUALTHAN .)
    FLOAT           reduce using rule 75 (operadorComparacion -> GREATEROREQUALTHAN .)
    INTEGER         reduce using rule 75 (operadorComparacion -> GREATEROREQUALTHAN .)


state 77

    (76) operadorComparacion -> SMALLEROREQUALTHAN .

    STRING          reduce using rule 76 (operadorComparacion -> SMALLEROREQUALTHAN .)
    VARIABLE        reduce using rule 76 (operadorComparacion -> SMALLEROREQUALTHAN .)
    FLOAT           reduce using rule 76 (operadorComparacion -> SMALLEROREQUALTHAN .)
    INTEGER         reduce using rule 76 (operadorComparacion -> SMALLEROREQUALTHAN .)


state 78

    (80) operadorLogico -> AND .

    STRING          reduce using rule 80 (operadorLogico -> AND .)
    VARIABLE        reduce using rule 80 (operadorLogico -> AND .)
    FLOAT           reduce using rule 80 (operadorLogico -> AND .)
    INTEGER         reduce using rule 80 (operadorLogico -> AND .)


state 79

    (81) operadorLogico -> OR .

    STRING          reduce using rule 81 (operadorLogico -> OR .)
    VARIABLE        reduce using rule 81 (operadorLogico -> OR .)
    FLOAT           reduce using rule 81 (operadorLogico -> OR .)
    INTEGER         reduce using rule 81 (operadorLogico -> OR .)


state 80

    (82) operadorLogico -> NOT .

    STRING          reduce using rule 82 (operadorLogico -> NOT .)
    VARIABLE        reduce using rule 82 (operadorLogico -> NOT .)
    FLOAT           reduce using rule 82 (operadorLogico -> NOT .)
    INTEGER         reduce using rule 82 (operadorLogico -> NOT .)


state 81

    (40) impresionSencilla -> tipoImpresion BRACKETL . valores BRACKETR
    (99) valores -> . valor
    (100) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . factor
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38
    INTEGER         shift and go to state 112

    valores                        shift and go to state 115
    valor                          shift and go to state 116
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 82

    (43) impresionBufio -> FMT DOT . FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> FMT DOT . PRINTF BRACKETL STRING COMA valores BRACKETR
    (46) lecturaScanf -> FMT DOT . SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> FMT DOT . SSCANF BRACKETL opcionesLectura BRACKETR
    (41) tipoImpresion -> FMT DOT . PRINT
    (42) tipoImpresion -> FMT DOT . PRINTLN

    FPRINT          shift and go to state 117
    PRINTF          shift and go to state 118
    SCANF           shift and go to state 119
    SSCANF          shift and go to state 120
    PRINT           shift and go to state 121
    PRINTLN         shift and go to state 122


state 83

    (58) varAssign -> VAR VARIABLE .

    ASSIGN          reduce using rule 58 (varAssign -> VAR VARIABLE .)
    INTTYPE         reduce using rule 58 (varAssign -> VAR VARIABLE .)
    FLOATTYPE       reduce using rule 58 (varAssign -> VAR VARIABLE .)
    BOOLEANTYPE     reduce using rule 58 (varAssign -> VAR VARIABLE .)


state 84

    (89) expresionSuma -> INTEGER PLUS . INTEGER

    INTEGER         shift and go to state 123


state 85

    (90) expresionResta -> INTEGER MINUS . INTEGER

    INTEGER         shift and go to state 124


state 86

    (91) expresionMultiplicacion -> INTEGER TIMES . INTEGER

    INTEGER         shift and go to state 125


state 87

    (92) expresionDivision -> INTEGER DIVIDE . INTEGER

    INTEGER         shift and go to state 126


state 88

    (93) expresionModulo -> INTEGER MODULE . INTEGER

    INTEGER         shift and go to state 127


state 89

    (65) comparaciones -> INTEGER EQUAL . INTEGER

    INTEGER         shift and go to state 128


state 90

    (66) comparaciones -> INTEGER UNEQUAL . INTEGER

    INTEGER         shift and go to state 129


state 91

    (67) comparaciones -> INTEGER GREATERTHAN . INTEGER

    INTEGER         shift and go to state 130


state 92

    (68) comparaciones -> INTEGER SMALLERTHAN . INTEGER

    INTEGER         shift and go to state 131


state 93

    (69) comparaciones -> INTEGER GREATEROREQUALTHAN . INTEGER

    INTEGER         shift and go to state 132


state 94

    (70) comparaciones -> INTEGER SMALLEROREQUALTHAN . INTEGER

    INTEGER         shift and go to state 133


state 95

    (25) funcion -> FUNC VARIABLE BRACKETL . VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR

    VARIABLE        shift and go to state 134


state 96

    (103) factor -> VARIABLE .

    PLUS            reduce using rule 103 (factor -> VARIABLE .)
    MINUS           reduce using rule 103 (factor -> VARIABLE .)
    TIMES           reduce using rule 103 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 103 (factor -> VARIABLE .)
    MODULE          reduce using rule 103 (factor -> VARIABLE .)
    EQUAL           reduce using rule 103 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 103 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    AND             reduce using rule 103 (factor -> VARIABLE .)
    OR              reduce using rule 103 (factor -> VARIABLE .)
    NOT             reduce using rule 103 (factor -> VARIABLE .)
    FUNC            reduce using rule 103 (factor -> VARIABLE .)
    SWITCH          reduce using rule 103 (factor -> VARIABLE .)
    FOR             reduce using rule 103 (factor -> VARIABLE .)
    SELECT          reduce using rule 103 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 103 (factor -> VARIABLE .)
    FMT             reduce using rule 103 (factor -> VARIABLE .)
    VAR             reduce using rule 103 (factor -> VARIABLE .)
    INTEGER         reduce using rule 103 (factor -> VARIABLE .)
    STRING          reduce using rule 103 (factor -> VARIABLE .)
    FLOAT           reduce using rule 103 (factor -> VARIABLE .)
    $end            reduce using rule 103 (factor -> VARIABLE .)
    LOCKR           reduce using rule 103 (factor -> VARIABLE .)
    CASE            reduce using rule 103 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 103 (factor -> VARIABLE .)
    LOCKL           reduce using rule 103 (factor -> VARIABLE .)
    COLON           reduce using rule 103 (factor -> VARIABLE .)
    COMA            reduce using rule 103 (factor -> VARIABLE .)
    BRACKETR        reduce using rule 103 (factor -> VARIABLE .)


state 97

    (19) asignacion -> VARIABLE ASSIGN asignable .

    FUNC            reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    SWITCH          reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    FOR             reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    SELECT          reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    VARIABLE        reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    FMT             reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    VAR             reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    INTEGER         reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    STRING          reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    FLOAT           reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    $end            reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    LOCKR           reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    CASE            reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)
    SEMICOLON       reduce using rule 19 (asignacion -> VARIABLE ASSIGN asignable .)


state 98

    (28) estructuraControl -> SWITCH VARIABLE LOCKL . cases LOCKR
    (37) cases -> . case
    (38) cases -> . case cases
    (39) case -> . CASE condicionCase COLON main

    CASE            shift and go to state 137

    cases                          shift and go to state 135
    case                           shift and go to state 136

state 99

    (29) estructuraControl -> FOR condicion LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    condicion                      shift and go to state 10
    main                           shift and go to state 138
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 100

    (30) estructuraControl -> FOR asignacion SEMICOLON . condicion SEMICOLON iterador LOCKL main LOCKR
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    INTEGER         shift and go to state 50
    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38

    condicion                      shift and go to state 139
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 101

    (31) estructuraControl -> FOR VARIABLE COMA . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (57) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 140

    varShortAssign                 shift and go to state 141

state 102

    (32) estructuraControl -> FOR varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 142


state 103

    (20) asignacion -> varAssign tipoDato . ASSIGN asignable

    ASSIGN          shift and go to state 109


state 104

    (55) declaracion -> varShortAssign BUFIO DOT . NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> varShortAssign BUFIO DOT . NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    NEWREADER       shift and go to state 143
    NEWWRITER       shift and go to state 144


state 105

    (45) lecturaReader -> varShortAssign VARIABLE DOT . READSTRING BRACKETL STRING BRACKETR

    READSTRING      shift and go to state 145


state 106

    (33) estructuraControl -> SELECT LOCKL casesSelect . LOCKR

    LOCKR           shift and go to state 146


state 107

    (34) casesSelect -> caseSelect .
    (35) casesSelect -> caseSelect . casesSelect
    (34) casesSelect -> . caseSelect
    (35) casesSelect -> . caseSelect casesSelect
    (36) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    LOCKR           reduce using rule 34 (casesSelect -> caseSelect .)
    CASE            shift and go to state 108

    caseSelect                     shift and go to state 107
    casesSelect                    shift and go to state 147

state 108

    (36) caseSelect -> CASE . varShortAssign SMALLERTHAN MINUS COLON main
    (57) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 140

    varShortAssign                 shift and go to state 148

state 109

    (20) asignacion -> varAssign tipoDato ASSIGN . asignable
    (22) asignable -> . valor
    (23) asignable -> . expresionMatematica
    (24) asignable -> . condicion
    (101) valor -> . STRING
    (102) valor -> . factor
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    INTEGER         shift and go to state 36
    FLOAT           shift and go to state 38

    asignable                      shift and go to state 149
    valor                          shift and go to state 54
    expresionMatematica            shift and go to state 55
    condicion                      shift and go to state 56
    factor                         shift and go to state 57
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    comparaciones                  shift and go to state 31
    numero                         shift and go to state 37

state 110

    (18) asignacion -> varAssign ASSIGN asignable .

    FUNC            reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    SWITCH          reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    FOR             reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    SELECT          reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    VARIABLE        reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    FMT             reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    VAR             reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    INTEGER         reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    STRING          reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    FLOAT           reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    $end            reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    LOCKR           reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    CASE            reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)
    SEMICOLON       reduce using rule 18 (asignacion -> varAssign ASSIGN asignable .)


state 111

    (88) expresionMatematica -> factor operadorMatematico factor .

    FUNC            reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    SWITCH          reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    FOR             reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    SELECT          reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    VARIABLE        reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    FMT             reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    VAR             reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    INTEGER         reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    STRING          reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    FLOAT           reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    $end            reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    LOCKR           reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    CASE            reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)
    SEMICOLON       reduce using rule 88 (expresionMatematica -> factor operadorMatematico factor .)


state 112

    (106) numero -> INTEGER .

    FUNC            reduce using rule 106 (numero -> INTEGER .)
    SWITCH          reduce using rule 106 (numero -> INTEGER .)
    FOR             reduce using rule 106 (numero -> INTEGER .)
    SELECT          reduce using rule 106 (numero -> INTEGER .)
    VARIABLE        reduce using rule 106 (numero -> INTEGER .)
    FMT             reduce using rule 106 (numero -> INTEGER .)
    VAR             reduce using rule 106 (numero -> INTEGER .)
    INTEGER         reduce using rule 106 (numero -> INTEGER .)
    STRING          reduce using rule 106 (numero -> INTEGER .)
    FLOAT           reduce using rule 106 (numero -> INTEGER .)
    $end            reduce using rule 106 (numero -> INTEGER .)
    LOCKR           reduce using rule 106 (numero -> INTEGER .)
    CASE            reduce using rule 106 (numero -> INTEGER .)
    SEMICOLON       reduce using rule 106 (numero -> INTEGER .)
    LOCKL           reduce using rule 106 (numero -> INTEGER .)
    COLON           reduce using rule 106 (numero -> INTEGER .)
    COMA            reduce using rule 106 (numero -> INTEGER .)
    BRACKETR        reduce using rule 106 (numero -> INTEGER .)


state 113

    (62) condicion -> valor operadorComparacion valor .

    FUNC            reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    SWITCH          reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    FOR             reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    SELECT          reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    VARIABLE        reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    FMT             reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    VAR             reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    INTEGER         reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    STRING          reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    FLOAT           reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    $end            reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    LOCKR           reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    CASE            reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    LOCKL           reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    SEMICOLON       reduce using rule 62 (condicion -> valor operadorComparacion valor .)
    COLON           reduce using rule 62 (condicion -> valor operadorComparacion valor .)


state 114

    (63) condicion -> valor operadorLogico valor .

    FUNC            reduce using rule 63 (condicion -> valor operadorLogico valor .)
    SWITCH          reduce using rule 63 (condicion -> valor operadorLogico valor .)
    FOR             reduce using rule 63 (condicion -> valor operadorLogico valor .)
    SELECT          reduce using rule 63 (condicion -> valor operadorLogico valor .)
    VARIABLE        reduce using rule 63 (condicion -> valor operadorLogico valor .)
    FMT             reduce using rule 63 (condicion -> valor operadorLogico valor .)
    VAR             reduce using rule 63 (condicion -> valor operadorLogico valor .)
    INTEGER         reduce using rule 63 (condicion -> valor operadorLogico valor .)
    STRING          reduce using rule 63 (condicion -> valor operadorLogico valor .)
    FLOAT           reduce using rule 63 (condicion -> valor operadorLogico valor .)
    $end            reduce using rule 63 (condicion -> valor operadorLogico valor .)
    LOCKR           reduce using rule 63 (condicion -> valor operadorLogico valor .)
    CASE            reduce using rule 63 (condicion -> valor operadorLogico valor .)
    LOCKL           reduce using rule 63 (condicion -> valor operadorLogico valor .)
    SEMICOLON       reduce using rule 63 (condicion -> valor operadorLogico valor .)
    COLON           reduce using rule 63 (condicion -> valor operadorLogico valor .)


state 115

    (40) impresionSencilla -> tipoImpresion BRACKETL valores . BRACKETR

    BRACKETR        shift and go to state 150


state 116

    (99) valores -> valor .
    (100) valores -> valor . COMA valores

    BRACKETR        reduce using rule 99 (valores -> valor .)
    COMA            shift and go to state 151


state 117

    (43) impresionBufio -> FMT DOT FPRINT . BRACKETL VARIABLE COMA STRING BRACKETR

    BRACKETL        shift and go to state 152


state 118

    (44) impresionFormato -> FMT DOT PRINTF . BRACKETL STRING COMA valores BRACKETR

    BRACKETL        shift and go to state 153


state 119

    (46) lecturaScanf -> FMT DOT SCANF . BRACKETL STRING opcionLectura BRACKETR

    BRACKETL        shift and go to state 154


state 120

    (50) lecturaSscanf -> FMT DOT SSCANF . BRACKETL opcionesLectura BRACKETR

    BRACKETL        shift and go to state 155


state 121

    (41) tipoImpresion -> FMT DOT PRINT .

    BRACKETL        reduce using rule 41 (tipoImpresion -> FMT DOT PRINT .)


state 122

    (42) tipoImpresion -> FMT DOT PRINTLN .

    BRACKETL        reduce using rule 42 (tipoImpresion -> FMT DOT PRINTLN .)


state 123

    (89) expresionSuma -> INTEGER PLUS INTEGER .

    FUNC            reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    SWITCH          reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    FOR             reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    SELECT          reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    VARIABLE        reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    FMT             reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    VAR             reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    INTEGER         reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    STRING          reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    FLOAT           reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    $end            reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    LOCKR           reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    CASE            reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)
    SEMICOLON       reduce using rule 89 (expresionSuma -> INTEGER PLUS INTEGER .)


state 124

    (90) expresionResta -> INTEGER MINUS INTEGER .

    FUNC            reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    SWITCH          reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    FOR             reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    SELECT          reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    VARIABLE        reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    FMT             reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    VAR             reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    INTEGER         reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    STRING          reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    FLOAT           reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    $end            reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    LOCKR           reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    CASE            reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)
    SEMICOLON       reduce using rule 90 (expresionResta -> INTEGER MINUS INTEGER .)


state 125

    (91) expresionMultiplicacion -> INTEGER TIMES INTEGER .

    FUNC            reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SWITCH          reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FOR             reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SELECT          reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    VARIABLE        reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FMT             reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    VAR             reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    INTEGER         reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    STRING          reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FLOAT           reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    $end            reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    LOCKR           reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    CASE            reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SEMICOLON       reduce using rule 91 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)


state 126

    (92) expresionDivision -> INTEGER DIVIDE INTEGER .

    FUNC            reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SWITCH          reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FOR             reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SELECT          reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    VARIABLE        reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FMT             reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    VAR             reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    INTEGER         reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    STRING          reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FLOAT           reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    $end            reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    LOCKR           reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    CASE            reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SEMICOLON       reduce using rule 92 (expresionDivision -> INTEGER DIVIDE INTEGER .)


state 127

    (93) expresionModulo -> INTEGER MODULE INTEGER .

    FUNC            reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    SWITCH          reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    FOR             reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    SELECT          reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    VARIABLE        reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    FMT             reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    VAR             reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    INTEGER         reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    STRING          reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    FLOAT           reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    $end            reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    LOCKR           reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    CASE            reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)
    SEMICOLON       reduce using rule 93 (expresionModulo -> INTEGER MODULE INTEGER .)


state 128

    (65) comparaciones -> INTEGER EQUAL INTEGER .

    FUNC            reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    SWITCH          reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    FOR             reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    SELECT          reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    VARIABLE        reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    FMT             reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    VAR             reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    INTEGER         reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    STRING          reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    FLOAT           reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    $end            reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    LOCKR           reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    CASE            reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    LOCKL           reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    SEMICOLON       reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)
    COLON           reduce using rule 65 (comparaciones -> INTEGER EQUAL INTEGER .)


state 129

    (66) comparaciones -> INTEGER UNEQUAL INTEGER .

    FUNC            reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    SWITCH          reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    FOR             reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    SELECT          reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    VARIABLE        reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    FMT             reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    VAR             reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    INTEGER         reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    STRING          reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    FLOAT           reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    $end            reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    LOCKR           reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    CASE            reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    LOCKL           reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    SEMICOLON       reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    COLON           reduce using rule 66 (comparaciones -> INTEGER UNEQUAL INTEGER .)


state 130

    (67) comparaciones -> INTEGER GREATERTHAN INTEGER .

    FUNC            reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    SWITCH          reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    FOR             reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    SELECT          reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    VARIABLE        reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    FMT             reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    VAR             reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    INTEGER         reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    STRING          reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    FLOAT           reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    $end            reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    LOCKR           reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    CASE            reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    LOCKL           reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    SEMICOLON       reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    COLON           reduce using rule 67 (comparaciones -> INTEGER GREATERTHAN INTEGER .)


state 131

    (68) comparaciones -> INTEGER SMALLERTHAN INTEGER .

    FUNC            reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    SWITCH          reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    FOR             reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    SELECT          reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    VARIABLE        reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    FMT             reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    VAR             reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    INTEGER         reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    STRING          reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    FLOAT           reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    $end            reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    LOCKR           reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    CASE            reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    LOCKL           reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    SEMICOLON       reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    COLON           reduce using rule 68 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)


state 132

    (69) comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .

    FUNC            reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    SWITCH          reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    FOR             reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    SELECT          reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    VARIABLE        reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    FMT             reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    VAR             reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    INTEGER         reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    STRING          reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    FLOAT           reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    $end            reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    LOCKR           reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    CASE            reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    LOCKL           reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    SEMICOLON       reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    COLON           reduce using rule 69 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)


state 133

    (70) comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .

    FUNC            reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    SWITCH          reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    FOR             reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    SELECT          reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    VARIABLE        reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    FMT             reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    VAR             reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    INTEGER         reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    STRING          reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    FLOAT           reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    $end            reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    LOCKR           reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    CASE            reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    LOCKL           reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    SEMICOLON       reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    COLON           reduce using rule 70 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)


state 134

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE . tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (77) tipoDato -> . INTTYPE
    (78) tipoDato -> . FLOATTYPE
    (79) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 61
    FLOATTYPE       shift and go to state 62
    BOOLEANTYPE     shift and go to state 63

    tipoDato                       shift and go to state 156

state 135

    (28) estructuraControl -> SWITCH VARIABLE LOCKL cases . LOCKR

    LOCKR           shift and go to state 157


state 136

    (37) cases -> case .
    (38) cases -> case . cases
    (37) cases -> . case
    (38) cases -> . case cases
    (39) case -> . CASE condicionCase COLON main

    LOCKR           reduce using rule 37 (cases -> case .)
    CASE            shift and go to state 137

    case                           shift and go to state 136
    cases                          shift and go to state 158

state 137

    (39) case -> CASE . condicionCase COLON main
    (59) condicionCase -> . INTEGER
    (60) condicionCase -> . VARIABLE
    (61) condicionCase -> . condicion
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    INTEGER         shift and go to state 160
    VARIABLE        shift and go to state 161
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    condicionCase                  shift and go to state 159
    condicion                      shift and go to state 162
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 138

    (29) estructuraControl -> FOR condicion LOCKL main . LOCKR

    LOCKR           shift and go to state 163


state 139

    (30) estructuraControl -> FOR asignacion SEMICOLON condicion . SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 164


state 140

    (57) varShortAssign -> VARIABLE . SHORTASSIGN

    SHORTASSIGN     shift and go to state 42


state 141

    (31) estructuraControl -> FOR VARIABLE COMA varShortAssign . RANGE VARIABLE LOCKL main LOCKR

    RANGE           shift and go to state 165


state 142

    (32) estructuraControl -> FOR varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 166


state 143

    (55) declaracion -> varShortAssign BUFIO DOT NEWREADER . BRACKETL OS DOT STDIN BRACKETR

    BRACKETL        shift and go to state 167


state 144

    (56) declaracion -> varShortAssign BUFIO DOT NEWWRITER . BRACKETL OS DOT STDOUT BRACKETR

    BRACKETL        shift and go to state 168


state 145

    (45) lecturaReader -> varShortAssign VARIABLE DOT READSTRING . BRACKETL STRING BRACKETR

    BRACKETL        shift and go to state 169


state 146

    (33) estructuraControl -> SELECT LOCKL casesSelect LOCKR .

    FUNC            reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SWITCH          reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FOR             reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SELECT          reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VARIABLE        reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FMT             reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VAR             reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    INTEGER         reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    STRING          reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FLOAT           reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    $end            reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    LOCKR           reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    CASE            reduce using rule 33 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)


state 147

    (35) casesSelect -> caseSelect casesSelect .

    LOCKR           reduce using rule 35 (casesSelect -> caseSelect casesSelect .)


state 148

    (36) caseSelect -> CASE varShortAssign . SMALLERTHAN MINUS COLON main

    SMALLERTHAN     shift and go to state 170


state 149

    (20) asignacion -> varAssign tipoDato ASSIGN asignable .

    FUNC            reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SWITCH          reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FOR             reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SELECT          reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VARIABLE        reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FMT             reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VAR             reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    INTEGER         reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    STRING          reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FLOAT           reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    $end            reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    LOCKR           reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    CASE            reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SEMICOLON       reduce using rule 20 (asignacion -> varAssign tipoDato ASSIGN asignable .)


state 150

    (40) impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .

    FUNC            reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SWITCH          reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FOR             reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SELECT          reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VARIABLE        reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FMT             reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VAR             reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    INTEGER         reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    STRING          reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FLOAT           reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    $end            reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    LOCKR           reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    CASE            reduce using rule 40 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)


state 151

    (100) valores -> valor COMA . valores
    (99) valores -> . valor
    (100) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . factor
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38
    INTEGER         shift and go to state 112

    valor                          shift and go to state 116
    valores                        shift and go to state 171
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 152

    (43) impresionBufio -> FMT DOT FPRINT BRACKETL . VARIABLE COMA STRING BRACKETR

    VARIABLE        shift and go to state 172


state 153

    (44) impresionFormato -> FMT DOT PRINTF BRACKETL . STRING COMA valores BRACKETR

    STRING          shift and go to state 173


state 154

    (46) lecturaScanf -> FMT DOT SCANF BRACKETL . STRING opcionLectura BRACKETR

    STRING          shift and go to state 174


state 155

    (50) lecturaSscanf -> FMT DOT SSCANF BRACKETL . opcionesLectura BRACKETR
    (51) opcionesLectura -> . opciones
    (52) opcionesLectura -> . opciones COMA opcionesLectura
    (53) opciones -> . STRING
    (54) opciones -> . ampersand
    (49) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 177
    AMPERSON        shift and go to state 179

    opcionesLectura                shift and go to state 175
    opciones                       shift and go to state 176
    ampersand                      shift and go to state 178

state 156

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato . BRACKETR tipoDato LOCKL cuerpo LOCKR

    BRACKETR        shift and go to state 180


state 157

    (28) estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .

    FUNC            reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SWITCH          reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FOR             reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SELECT          reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VARIABLE        reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FMT             reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VAR             reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    INTEGER         reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    STRING          reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FLOAT           reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    $end            reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    LOCKR           reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    CASE            reduce using rule 28 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)


state 158

    (38) cases -> case cases .

    LOCKR           reduce using rule 38 (cases -> case cases .)


state 159

    (39) case -> CASE condicionCase . COLON main

    COLON           shift and go to state 181


state 160

    (59) condicionCase -> INTEGER .
    (65) comparaciones -> INTEGER . EQUAL INTEGER
    (66) comparaciones -> INTEGER . UNEQUAL INTEGER
    (67) comparaciones -> INTEGER . GREATERTHAN INTEGER
    (68) comparaciones -> INTEGER . SMALLERTHAN INTEGER
    (69) comparaciones -> INTEGER . GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> INTEGER . SMALLEROREQUALTHAN INTEGER
    (106) numero -> INTEGER .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for UNEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for SMALLERTHAN resolved as shift
  ! shift/reduce conflict for GREATEROREQUALTHAN resolved as shift
  ! shift/reduce conflict for SMALLEROREQUALTHAN resolved as shift
    COLON           reduce using rule 59 (condicionCase -> INTEGER .)
    EQUAL           shift and go to state 89
    UNEQUAL         shift and go to state 90
    GREATERTHAN     shift and go to state 91
    SMALLERTHAN     shift and go to state 92
    GREATEROREQUALTHAN shift and go to state 93
    SMALLEROREQUALTHAN shift and go to state 94
    AND             reduce using rule 106 (numero -> INTEGER .)
    OR              reduce using rule 106 (numero -> INTEGER .)
    NOT             reduce using rule 106 (numero -> INTEGER .)

  ! EQUAL           [ reduce using rule 106 (numero -> INTEGER .) ]
  ! UNEQUAL         [ reduce using rule 106 (numero -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 106 (numero -> INTEGER .) ]
  ! SMALLERTHAN     [ reduce using rule 106 (numero -> INTEGER .) ]
  ! GREATEROREQUALTHAN [ reduce using rule 106 (numero -> INTEGER .) ]
  ! SMALLEROREQUALTHAN [ reduce using rule 106 (numero -> INTEGER .) ]


state 161

    (60) condicionCase -> VARIABLE .
    (103) factor -> VARIABLE .

    COLON           reduce using rule 60 (condicionCase -> VARIABLE .)
    EQUAL           reduce using rule 103 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 103 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 103 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 103 (factor -> VARIABLE .)
    AND             reduce using rule 103 (factor -> VARIABLE .)
    OR              reduce using rule 103 (factor -> VARIABLE .)
    NOT             reduce using rule 103 (factor -> VARIABLE .)


state 162

    (61) condicionCase -> condicion .

    COLON           reduce using rule 61 (condicionCase -> condicion .)


state 163

    (29) estructuraControl -> FOR condicion LOCKL main LOCKR .

    FUNC            reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SWITCH          reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FOR             reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SELECT          reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VARIABLE        reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FMT             reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VAR             reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    INTEGER         reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    STRING          reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FLOAT           reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    $end            reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    LOCKR           reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    CASE            reduce using rule 29 (estructuraControl -> FOR condicion LOCKL main LOCKR .)


state 164

    (30) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON . iterador LOCKL main LOCKR
    (107) iterador -> . VARIABLE INCREMENT
    (108) iterador -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 183

    iterador                       shift and go to state 182

state 165

    (31) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 184


state 166

    (32) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    varShortAssign                 shift and go to state 15
    main                           shift and go to state 185
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 167

    (55) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL . OS DOT STDIN BRACKETR

    OS              shift and go to state 186


state 168

    (56) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL . OS DOT STDOUT BRACKETR

    OS              shift and go to state 187


state 169

    (45) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL . STRING BRACKETR

    STRING          shift and go to state 188


state 170

    (36) caseSelect -> CASE varShortAssign SMALLERTHAN . MINUS COLON main

    MINUS           shift and go to state 189


state 171

    (100) valores -> valor COMA valores .

    BRACKETR        reduce using rule 100 (valores -> valor COMA valores .)


state 172

    (43) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE . COMA STRING BRACKETR

    COMA            shift and go to state 190


state 173

    (44) impresionFormato -> FMT DOT PRINTF BRACKETL STRING . COMA valores BRACKETR

    COMA            shift and go to state 191


state 174

    (46) lecturaScanf -> FMT DOT SCANF BRACKETL STRING . opcionLectura BRACKETR
    (47) opcionLectura -> . COMA opciones
    (48) opcionLectura -> . COMA opciones opcionLectura

    COMA            shift and go to state 193

    opcionLectura                  shift and go to state 192

state 175

    (50) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura . BRACKETR

    BRACKETR        shift and go to state 194


state 176

    (51) opcionesLectura -> opciones .
    (52) opcionesLectura -> opciones . COMA opcionesLectura

    BRACKETR        reduce using rule 51 (opcionesLectura -> opciones .)
    COMA            shift and go to state 195


state 177

    (53) opciones -> STRING .

    COMA            reduce using rule 53 (opciones -> STRING .)
    BRACKETR        reduce using rule 53 (opciones -> STRING .)


state 178

    (54) opciones -> ampersand .

    COMA            reduce using rule 54 (opciones -> ampersand .)
    BRACKETR        reduce using rule 54 (opciones -> ampersand .)


state 179

    (49) ampersand -> AMPERSON . VARIABLE

    VARIABLE        shift and go to state 196


state 180

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR . tipoDato LOCKL cuerpo LOCKR
    (77) tipoDato -> . INTTYPE
    (78) tipoDato -> . FLOATTYPE
    (79) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 61
    FLOATTYPE       shift and go to state 62
    BOOLEANTYPE     shift and go to state 63

    tipoDato                       shift and go to state 197

state 181

    (39) case -> CASE condicionCase COLON . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    main                           shift and go to state 198
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 182

    (30) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador . LOCKL main LOCKR

    LOCKL           shift and go to state 199


state 183

    (107) iterador -> VARIABLE . INCREMENT
    (108) iterador -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 200
    DECREMENT       shift and go to state 201


state 184

    (31) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 202


state 185

    (32) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 203


state 186

    (55) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS . DOT STDIN BRACKETR

    DOT             shift and go to state 204


state 187

    (56) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS . DOT STDOUT BRACKETR

    DOT             shift and go to state 205


state 188

    (45) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING . BRACKETR

    BRACKETR        shift and go to state 206


state 189

    (36) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS . COLON main

    COLON           shift and go to state 207


state 190

    (43) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA . STRING BRACKETR

    STRING          shift and go to state 208


state 191

    (44) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA . valores BRACKETR
    (99) valores -> . valor
    (100) valores -> . valor COMA valores
    (101) valor -> . STRING
    (102) valor -> . factor
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    STRING          shift and go to state 34
    VARIABLE        shift and go to state 96
    FLOAT           shift and go to state 38
    INTEGER         shift and go to state 112

    valores                        shift and go to state 209
    valor                          shift and go to state 116
    factor                         shift and go to state 49
    numero                         shift and go to state 37

state 192

    (46) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura . BRACKETR

    BRACKETR        shift and go to state 210


state 193

    (47) opcionLectura -> COMA . opciones
    (48) opcionLectura -> COMA . opciones opcionLectura
    (53) opciones -> . STRING
    (54) opciones -> . ampersand
    (49) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 177
    AMPERSON        shift and go to state 179

    opciones                       shift and go to state 211
    ampersand                      shift and go to state 178

state 194

    (50) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .

    FUNC            reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SWITCH          reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FOR             reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SELECT          reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VARIABLE        reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FMT             reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VAR             reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    INTEGER         reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    STRING          reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FLOAT           reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    $end            reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    LOCKR           reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    CASE            reduce using rule 50 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)


state 195

    (52) opcionesLectura -> opciones COMA . opcionesLectura
    (51) opcionesLectura -> . opciones
    (52) opcionesLectura -> . opciones COMA opcionesLectura
    (53) opciones -> . STRING
    (54) opciones -> . ampersand
    (49) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 177
    AMPERSON        shift and go to state 179

    opciones                       shift and go to state 176
    opcionesLectura                shift and go to state 212
    ampersand                      shift and go to state 178

state 196

    (49) ampersand -> AMPERSON VARIABLE .

    COMA            reduce using rule 49 (ampersand -> AMPERSON VARIABLE .)
    BRACKETR        reduce using rule 49 (ampersand -> AMPERSON VARIABLE .)


state 197

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato . LOCKL cuerpo LOCKR

    LOCKL           shift and go to state 213


state 198

    (39) case -> CASE condicionCase COLON main .

    CASE            reduce using rule 39 (case -> CASE condicionCase COLON main .)
    LOCKR           reduce using rule 39 (case -> CASE condicionCase COLON main .)


state 199

    (30) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    asignacion                     shift and go to state 7
    condicion                      shift and go to state 10
    main                           shift and go to state 214
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 200

    (107) iterador -> VARIABLE INCREMENT .

    LOCKL           reduce using rule 107 (iterador -> VARIABLE INCREMENT .)


state 201

    (108) iterador -> VARIABLE DECREMENT .

    LOCKL           reduce using rule 108 (iterador -> VARIABLE DECREMENT .)


state 202

    (31) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    varShortAssign                 shift and go to state 15
    main                           shift and go to state 215
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 203

    (32) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    INTEGER         reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    STRING          reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FLOAT           reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 32 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 204

    (55) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT . STDIN BRACKETR

    STDIN           shift and go to state 216


state 205

    (56) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT . STDOUT BRACKETR

    STDOUT          shift and go to state 217


state 206

    (45) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .

    FUNC            reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SWITCH          reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FOR             reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SELECT          reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VARIABLE        reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FMT             reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VAR             reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    INTEGER         reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    STRING          reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FLOAT           reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    $end            reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    LOCKR           reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    CASE            reduce using rule 45 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)


state 207

    (36) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (25) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    varShortAssign                 shift and go to state 15
    main                           shift and go to state 218
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 208

    (43) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING . BRACKETR

    BRACKETR        shift and go to state 219


state 209

    (44) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores . BRACKETR

    BRACKETR        shift and go to state 220


state 210

    (46) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .

    FUNC            reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SWITCH          reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FOR             reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SELECT          reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VARIABLE        reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FMT             reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VAR             reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    INTEGER         reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    STRING          reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FLOAT           reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    $end            reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    LOCKR           reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    CASE            reduce using rule 46 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)


state 211

    (47) opcionLectura -> COMA opciones .
    (48) opcionLectura -> COMA opciones . opcionLectura
    (47) opcionLectura -> . COMA opciones
    (48) opcionLectura -> . COMA opciones opcionLectura

    BRACKETR        reduce using rule 47 (opcionLectura -> COMA opciones .)
    COMA            shift and go to state 193

    opcionLectura                  shift and go to state 221

state 212

    (52) opcionesLectura -> opciones COMA opcionesLectura .

    BRACKETR        reduce using rule 52 (opcionesLectura -> opciones COMA opcionesLectura .)


state 213

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL . cuerpo LOCKR
    (26) cuerpo -> . ejecutable
    (27) cuerpo -> . RETURN VARIABLE
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (10) ejecutable -> . condicion
    (28) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (29) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (30) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (31) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (33) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (21) declaracion -> . varAssign tipoDato
    (55) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (56) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (17) asignacion -> . varShortAssign asignable
    (18) asignacion -> . varAssign ASSIGN asignable
    (19) asignacion -> . VARIABLE ASSIGN asignable
    (20) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (83) expresionMatematica -> . expresionSuma
    (84) expresionMatematica -> . expresionResta
    (85) expresionMatematica -> . expresionMultiplicacion
    (86) expresionMatematica -> . expresionDivision
    (87) expresionMatematica -> . expresionModulo
    (88) expresionMatematica -> . factor operadorMatematico factor
    (62) condicion -> . valor operadorComparacion valor
    (63) condicion -> . valor operadorLogico valor
    (64) condicion -> . comparaciones
    (40) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (43) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (44) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (58) varAssign -> . VAR VARIABLE
    (57) varShortAssign -> . VARIABLE SHORTASSIGN
    (45) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (46) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (50) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (89) expresionSuma -> . INTEGER PLUS INTEGER
    (90) expresionResta -> . INTEGER MINUS INTEGER
    (91) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (92) expresionDivision -> . INTEGER DIVIDE INTEGER
    (93) expresionModulo -> . INTEGER MODULE INTEGER
    (103) factor -> . VARIABLE
    (104) factor -> . numero
    (101) valor -> . STRING
    (102) valor -> . factor
    (65) comparaciones -> . INTEGER EQUAL INTEGER
    (66) comparaciones -> . INTEGER UNEQUAL INTEGER
    (67) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (68) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (69) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (70) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (41) tipoImpresion -> . FMT DOT PRINT
    (42) tipoImpresion -> . FMT DOT PRINTLN
    (105) numero -> . FLOAT
    (106) numero -> . INTEGER

    RETURN          shift and go to state 224
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 33
    VAR             shift and go to state 35
    INTEGER         shift and go to state 36
    STRING          shift and go to state 34
    FLOAT           shift and go to state 38

    cuerpo                         shift and go to state 222
    ejecutable                     shift and go to state 223
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    condicion                      shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    expresionSuma                  shift and go to state 24
    expresionResta                 shift and go to state 25
    expresionMultiplicacion        shift and go to state 26
    expresionDivision              shift and go to state 27
    expresionModulo                shift and go to state 28
    factor                         shift and go to state 29
    valor                          shift and go to state 30
    comparaciones                  shift and go to state 31
    tipoImpresion                  shift and go to state 32
    numero                         shift and go to state 37

state 214

    (30) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main . LOCKR

    LOCKR           shift and go to state 225


state 215

    (31) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 226


state 216

    (55) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN . BRACKETR

    BRACKETR        shift and go to state 227


state 217

    (56) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT . BRACKETR

    BRACKETR        shift and go to state 228


state 218

    (36) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .

    CASE            reduce using rule 36 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)
    LOCKR           reduce using rule 36 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)


state 219

    (43) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .

    FUNC            reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SWITCH          reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FOR             reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SELECT          reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VARIABLE        reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FMT             reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VAR             reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    INTEGER         reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    STRING          reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FLOAT           reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    $end            reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    LOCKR           reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    CASE            reduce using rule 43 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)


state 220

    (44) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .

    FUNC            reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SWITCH          reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FOR             reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SELECT          reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VARIABLE        reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FMT             reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VAR             reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    INTEGER         reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    STRING          reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FLOAT           reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    $end            reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    LOCKR           reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    CASE            reduce using rule 44 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)


state 221

    (48) opcionLectura -> COMA opciones opcionLectura .

    BRACKETR        reduce using rule 48 (opcionLectura -> COMA opciones opcionLectura .)


state 222

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo . LOCKR

    LOCKR           shift and go to state 229


state 223

    (26) cuerpo -> ejecutable .

    LOCKR           reduce using rule 26 (cuerpo -> ejecutable .)


state 224

    (27) cuerpo -> RETURN . VARIABLE

    VARIABLE        shift and go to state 230


state 225

    (30) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .

    FUNC            reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SWITCH          reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FOR             reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SELECT          reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VARIABLE        reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FMT             reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VAR             reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    INTEGER         reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    STRING          reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FLOAT           reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    $end            reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    LOCKR           reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    CASE            reduce using rule 30 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)


state 226

    (31) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    INTEGER         reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    STRING          reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FLOAT           reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 31 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 227

    (55) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .

    FUNC            reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SWITCH          reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FOR             reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SELECT          reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VARIABLE        reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FMT             reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VAR             reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    INTEGER         reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    STRING          reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FLOAT           reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    $end            reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    LOCKR           reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    CASE            reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)


state 228

    (56) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .

    FUNC            reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SWITCH          reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FOR             reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SELECT          reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VARIABLE        reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FMT             reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VAR             reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    INTEGER         reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    STRING          reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FLOAT           reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    $end            reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    LOCKR           reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    CASE            reduce using rule 56 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)


state 229

    (25) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .

    $end            reduce using rule 25 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .)
    LOCKR           reduce using rule 25 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .)
    CASE            reduce using rule 25 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .)


state 230

    (27) cuerpo -> RETURN VARIABLE .

    LOCKR           reduce using rule 27 (cuerpo -> RETURN VARIABLE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 36 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 36 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 36 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 36 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 36 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 36 resolved as shift
WARNING: shift/reduce conflict for UNEQUAL in state 36 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for SMALLERTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for GREATEROREQUALTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for SMALLEROREQUALTHAN in state 36 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for UNEQUAL in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for SMALLERTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for GREATEROREQUALTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for SMALLEROREQUALTHAN in state 50 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for UNEQUAL in state 160 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 160 resolved as shift
WARNING: shift/reduce conflict for SMALLERTHAN in state 160 resolved as shift
WARNING: shift/reduce conflict for GREATEROREQUALTHAN in state 160 resolved as shift
WARNING: shift/reduce conflict for SMALLEROREQUALTHAN in state 160 resolved as shift
