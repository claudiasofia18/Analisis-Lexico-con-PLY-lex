Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSON
    AND
    APPEND
    ASSIGN
    BRACEL
    BRACER
    BREAK
    BUFIO
    CAP
    CASE
    CHAN
    COLON
    COMA
    CONST
    DECREMENT
    DEFAULT
    DEFER
    DIVIDE
    ELSE
    ERROR
    FALLTHROUGH
    FMT
    FOR
    FPRINT
    FRONT
    FUNCION
    GO
    GOTO
    IF
    IMPORT
    INCREMENT
    INTERFACE
    LEN
    LOCKL
    LOCKR
    MAP
    MINUS
    MODULE
    NEWWRITER
    NOT
    OR
    OS
    PACKAGE
    PLUS
    PRINT
    PRINTLN
    PUSHBACK
    RANGE
    RETURN
    SCANF
    SELECT
    SEMICOLON
    SSCANF
    STDOUT
    STRINGTYPE
    STRUCT
    SWITCH
    TIMES
    TYPE

Grammar

Rule 0     S' -> declaracion
Rule 1     declaracion -> VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR
Rule 2     declaracion -> VARIABLE SHORTASSIGN
Rule 3     declaracion -> VAR VARIABLE FLOATTYPE
Rule 4     declaracion -> VAR VARIABLE INTTYPE
Rule 5     declaracion -> VAR VARIABLE BOOLEANTYPE
Rule 6     declaracion -> factor
Rule 7     factor -> TRUE
Rule 8     factor -> FALSE
Rule 9     factor -> STRING
Rule 10    factor -> INTEGER
Rule 11    factor -> FLOAT
Rule 12    factor -> VARIABLE
Rule 13    factor -> reservada
Rule 14    reservada -> VAR
Rule 15    reservada -> simbolo
Rule 16    simbolo -> EQUAL
Rule 17    simbolo -> UNEQUAL
Rule 18    simbolo -> GREATERTHAN
Rule 19    simbolo -> SMALLERTHAN
Rule 20    simbolo -> GREATEROREQUALTHAN
Rule 21    simbolo -> SMALLEROREQUALTHAN
Rule 22    simbolo -> BRACKETR
Rule 23    simbolo -> BRACKETL
Rule 24    simbolo -> DOT

Terminals, with rules where they appear

AMPERSON             : 
AND                  : 
APPEND               : 
ASSIGN               : 
BOOLEANTYPE          : 5
BRACEL               : 
BRACER               : 
BRACKETL             : 1 23
BRACKETR             : 1 22
BREAK                : 
BUFIO                : 
CAP                  : 
CASE                 : 
CHAN                 : 
COLON                : 
COMA                 : 
CONST                : 
DECREMENT            : 
DEFAULT              : 
DEFER                : 
DIVIDE               : 
DOT                  : 1 24
ELSE                 : 
EQUAL                : 16
ERROR                : 
FALLTHROUGH          : 
FALSE                : 8
FLOAT                : 11
FLOATTYPE            : 3
FMT                  : 
FOR                  : 
FPRINT               : 
FRONT                : 
FUNCION              : 
GO                   : 
GOTO                 : 
GREATEROREQUALTHAN   : 20
GREATERTHAN          : 18
IF                   : 
IMPORT               : 
INCREMENT            : 
INTEGER              : 10
INTERFACE            : 
INTTYPE              : 4
LEN                  : 
LIST                 : 1
LOCKL                : 
LOCKR                : 
MAP                  : 
MINUS                : 
MODULE               : 
NEW                  : 1
NEWWRITER            : 
NOT                  : 
OR                   : 
OS                   : 
PACKAGE              : 
PLUS                 : 
PRINT                : 
PRINTLN              : 
PUSHBACK             : 
RANGE                : 
RETURN               : 
SCANF                : 
SELECT               : 
SEMICOLON            : 
SHORTASSIGN          : 1 2
SMALLEROREQUALTHAN   : 21
SMALLERTHAN          : 19
SSCANF               : 
STDOUT               : 
STRING               : 9
STRINGTYPE           : 
STRUCT               : 
SWITCH               : 
TIMES                : 
TRUE                 : 7
TYPE                 : 
UNEQUAL              : 17
VAR                  : 3 4 5 14
VARIABLE             : 1 2 3 4 5 12
error                : 

Nonterminals, with rules where they appear

declaracion          : 0
factor               : 6
reservada            : 13
simbolo              : 15

Parsing method: LALR

state 0

    (0) S' -> . declaracion
    (1) declaracion -> . VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR
    (2) declaracion -> . VARIABLE SHORTASSIGN
    (3) declaracion -> . VAR VARIABLE FLOATTYPE
    (4) declaracion -> . VAR VARIABLE INTTYPE
    (5) declaracion -> . VAR VARIABLE BOOLEANTYPE
    (6) declaracion -> . factor
    (7) factor -> . TRUE
    (8) factor -> . FALSE
    (9) factor -> . STRING
    (10) factor -> . INTEGER
    (11) factor -> . FLOAT
    (12) factor -> . VARIABLE
    (13) factor -> . reservada
    (14) reservada -> . VAR
    (15) reservada -> . simbolo
    (16) simbolo -> . EQUAL
    (17) simbolo -> . UNEQUAL
    (18) simbolo -> . GREATERTHAN
    (19) simbolo -> . SMALLERTHAN
    (20) simbolo -> . GREATEROREQUALTHAN
    (21) simbolo -> . SMALLEROREQUALTHAN
    (22) simbolo -> . BRACKETR
    (23) simbolo -> . BRACKETL
    (24) simbolo -> . DOT

    VARIABLE        shift and go to state 2
    VAR             shift and go to state 6
    TRUE            shift and go to state 8
    FALSE           shift and go to state 9
    STRING          shift and go to state 10
    INTEGER         shift and go to state 11
    FLOAT           shift and go to state 12
    EQUAL           shift and go to state 15
    UNEQUAL         shift and go to state 16
    GREATERTHAN     shift and go to state 17
    SMALLERTHAN     shift and go to state 18
    GREATEROREQUALTHAN shift and go to state 19
    SMALLEROREQUALTHAN shift and go to state 20
    BRACKETR        shift and go to state 5
    BRACKETL        shift and go to state 4
    DOT             shift and go to state 3

    declaracion                    shift and go to state 1
    factor                         shift and go to state 7
    reservada                      shift and go to state 13
    simbolo                        shift and go to state 14

state 1

    (0) S' -> declaracion .



state 2

    (1) declaracion -> VARIABLE . SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR
    (2) declaracion -> VARIABLE . SHORTASSIGN
    (12) factor -> VARIABLE .

    SHORTASSIGN     shift and go to state 21
    $end            reduce using rule 12 (factor -> VARIABLE .)


state 3

    (24) simbolo -> DOT .

    $end            reduce using rule 24 (simbolo -> DOT .)


state 4

    (23) simbolo -> BRACKETL .

    $end            reduce using rule 23 (simbolo -> BRACKETL .)


state 5

    (22) simbolo -> BRACKETR .

    $end            reduce using rule 22 (simbolo -> BRACKETR .)


state 6

    (3) declaracion -> VAR . VARIABLE FLOATTYPE
    (4) declaracion -> VAR . VARIABLE INTTYPE
    (5) declaracion -> VAR . VARIABLE BOOLEANTYPE
    (14) reservada -> VAR .

    VARIABLE        shift and go to state 22
    $end            reduce using rule 14 (reservada -> VAR .)


state 7

    (6) declaracion -> factor .

    $end            reduce using rule 6 (declaracion -> factor .)


state 8

    (7) factor -> TRUE .

    $end            reduce using rule 7 (factor -> TRUE .)


state 9

    (8) factor -> FALSE .

    $end            reduce using rule 8 (factor -> FALSE .)


state 10

    (9) factor -> STRING .

    $end            reduce using rule 9 (factor -> STRING .)


state 11

    (10) factor -> INTEGER .

    $end            reduce using rule 10 (factor -> INTEGER .)


state 12

    (11) factor -> FLOAT .

    $end            reduce using rule 11 (factor -> FLOAT .)


state 13

    (13) factor -> reservada .

    $end            reduce using rule 13 (factor -> reservada .)


state 14

    (15) reservada -> simbolo .

    $end            reduce using rule 15 (reservada -> simbolo .)


state 15

    (16) simbolo -> EQUAL .

    $end            reduce using rule 16 (simbolo -> EQUAL .)


state 16

    (17) simbolo -> UNEQUAL .

    $end            reduce using rule 17 (simbolo -> UNEQUAL .)


state 17

    (18) simbolo -> GREATERTHAN .

    $end            reduce using rule 18 (simbolo -> GREATERTHAN .)


state 18

    (19) simbolo -> SMALLERTHAN .

    $end            reduce using rule 19 (simbolo -> SMALLERTHAN .)


state 19

    (20) simbolo -> GREATEROREQUALTHAN .

    $end            reduce using rule 20 (simbolo -> GREATEROREQUALTHAN .)


state 20

    (21) simbolo -> SMALLEROREQUALTHAN .

    $end            reduce using rule 21 (simbolo -> SMALLEROREQUALTHAN .)


state 21

    (1) declaracion -> VARIABLE SHORTASSIGN . LIST DOT NEW BRACKETL BRACKETR
    (2) declaracion -> VARIABLE SHORTASSIGN .

    LIST            shift and go to state 23
    $end            reduce using rule 2 (declaracion -> VARIABLE SHORTASSIGN .)


state 22

    (3) declaracion -> VAR VARIABLE . FLOATTYPE
    (4) declaracion -> VAR VARIABLE . INTTYPE
    (5) declaracion -> VAR VARIABLE . BOOLEANTYPE

    FLOATTYPE       shift and go to state 24
    INTTYPE         shift and go to state 25
    BOOLEANTYPE     shift and go to state 26


state 23

    (1) declaracion -> VARIABLE SHORTASSIGN LIST . DOT NEW BRACKETL BRACKETR

    DOT             shift and go to state 27


state 24

    (3) declaracion -> VAR VARIABLE FLOATTYPE .

    $end            reduce using rule 3 (declaracion -> VAR VARIABLE FLOATTYPE .)


state 25

    (4) declaracion -> VAR VARIABLE INTTYPE .

    $end            reduce using rule 4 (declaracion -> VAR VARIABLE INTTYPE .)


state 26

    (5) declaracion -> VAR VARIABLE BOOLEANTYPE .

    $end            reduce using rule 5 (declaracion -> VAR VARIABLE BOOLEANTYPE .)


state 27

    (1) declaracion -> VARIABLE SHORTASSIGN LIST DOT . NEW BRACKETL BRACKETR

    NEW             shift and go to state 28


state 28

    (1) declaracion -> VARIABLE SHORTASSIGN LIST DOT NEW . BRACKETL BRACKETR

    BRACKETL        shift and go to state 29


state 29

    (1) declaracion -> VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL . BRACKETR

    BRACKETR        shift and go to state 30


state 30

    (1) declaracion -> VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR .

    $end            reduce using rule 1 (declaracion -> VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR .)

