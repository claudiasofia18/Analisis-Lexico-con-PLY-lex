Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    APPEND
    BRACEL
    BRACER
    BREAK
    CAP
    CHAN
    CONST
    DEFAULT
    DEFER
    ELSE
    ERROR
    FALLTHROUGH
    FALSE
    FRONT
    GO
    GOTO
    IF
    IMPORT
    INTERFACE
    LEN
    LIST
    MAP
    NEW
    PACKAGE
    PUSHBACK
    STRINGTYPE
    STRUCT
    TRUE
    TYPE

Grammar

Rule 0     S' -> main
Rule 1     main -> ejecutable
Rule 2     main -> ejecutable main
Rule 3     main -> funcion
Rule 4     ejecutable -> estructuraControl
Rule 5     ejecutable -> impresion
Rule 6     ejecutable -> declaracion
Rule 7     ejecutable -> asignacion
Rule 8     ejecutable -> lectura
Rule 9     ejecutable -> expresionMatematica
Rule 10    impresion -> impresionSencilla
Rule 11    impresion -> impresionBufio
Rule 12    impresion -> impresionFormato
Rule 13    lectura -> lecturaReader
Rule 14    lectura -> lecturaScanf
Rule 15    lectura -> lecturaSscanf
Rule 16    asignacion -> varShortAssign asignable
Rule 17    asignacion -> varAssign ASSIGN asignable
Rule 18    asignacion -> VARIABLE ASSIGN asignable
Rule 19    asignacion -> varAssign tipoDato ASSIGN asignable
Rule 20    declaracion -> varAssign tipoDato
Rule 21    asignable -> valor
Rule 22    asignable -> expresionMatematica
Rule 23    asignable -> condicion
Rule 24    funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
Rule 25    cuerpo -> ejecutable
Rule 26    cuerpo -> RETURN VARIABLE
Rule 27    estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR
Rule 28    estructuraControl -> FOR condicion LOCKL main LOCKR
Rule 29    estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
Rule 30    estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 31    estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 32    estructuraControl -> SELECT LOCKL casesSelect LOCKR
Rule 33    casesSelect -> caseSelect
Rule 34    casesSelect -> caseSelect casesSelect
Rule 35    caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main
Rule 36    cases -> case
Rule 37    cases -> case cases
Rule 38    case -> CASE condicionCase COLON main
Rule 39    impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR
Rule 40    tipoImpresion -> FMT DOT PRINT
Rule 41    tipoImpresion -> FMT DOT PRINTLN
Rule 42    impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
Rule 43    impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
Rule 44    lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
Rule 45    lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
Rule 46    opcionLectura -> COMA opciones
Rule 47    opcionLectura -> COMA opciones opcionLectura
Rule 48    ampersand -> AMPERSON VARIABLE
Rule 49    lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
Rule 50    opcionesLectura -> opciones
Rule 51    opcionesLectura -> opciones COMA opcionesLectura
Rule 52    opciones -> STRING
Rule 53    opciones -> ampersand
Rule 54    declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
Rule 55    declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
Rule 56    varShortAssign -> VARIABLE SHORTASSIGN
Rule 57    varAssign -> VAR VARIABLE
Rule 58    condicionCase -> INTEGER
Rule 59    condicionCase -> VARIABLE
Rule 60    condicionCase -> condicion
Rule 61    condicion -> valor operadorComparacion valor
Rule 62    condicion -> valor operadorLogico valor
Rule 63    operadorComparacion -> EQUAL
Rule 64    operadorComparacion -> UNEQUAL
Rule 65    operadorComparacion -> GREATERTHAN
Rule 66    operadorComparacion -> SMALLERTHAN
Rule 67    operadorComparacion -> GREATEROREQUALTHAN
Rule 68    operadorComparacion -> SMALLEROREQUALTHAN
Rule 69    tipoDato -> INTTYPE
Rule 70    tipoDato -> FLOATTYPE
Rule 71    tipoDato -> BOOLEANTYPE
Rule 72    operadorLogico -> AND
Rule 73    operadorLogico -> OR
Rule 74    operadorLogico -> NOT
Rule 75    expresionMatematica -> expresionSuma
Rule 76    expresionMatematica -> expresionResta
Rule 77    expresionMatematica -> expresionMultiplicacion
Rule 78    expresionMatematica -> expresionDivision
Rule 79    expresionMatematica -> expresionModulo
Rule 80    expresionMatematica -> factor operadorMatematico factor
Rule 81    expresionSuma -> INTEGER PLUS INTEGER
Rule 82    expresionResta -> INTEGER MINUS INTEGER
Rule 83    expresionMultiplicacion -> INTEGER TIMES INTEGER
Rule 84    expresionDivision -> INTEGER DIVIDE INTEGER
Rule 85    expresionModulo -> INTEGER MODULE INTEGER
Rule 86    operadorMatematico -> PLUS
Rule 87    operadorMatematico -> MINUS
Rule 88    operadorMatematico -> TIMES
Rule 89    operadorMatematico -> DIVIDE
Rule 90    operadorMatematico -> MODULE
Rule 91    valores -> valor
Rule 92    valores -> valor COMA valores
Rule 93    valor -> STRING
Rule 94    valor -> factor
Rule 95    factor -> VARIABLE
Rule 96    factor -> numero
Rule 97    numero -> FLOAT
Rule 98    numero -> INTEGER
Rule 99    iterador -> VARIABLE INCREMENT
Rule 100   iterador -> VARIABLE DECREMENT

Terminals, with rules where they appear

AMPERSON             : 48
AND                  : 72
APPEND               : 
ASSIGN               : 17 18 19
BOOLEANTYPE          : 71
BRACEL               : 
BRACER               : 
BRACKETL             : 24 39 42 43 44 45 49 54 55
BRACKETR             : 24 39 42 43 44 45 49 54 55
BREAK                : 
BUFIO                : 54 55
CAP                  : 
CASE                 : 35 38
CHAN                 : 
COLON                : 35 38
COMA                 : 30 42 43 46 47 51 92
CONST                : 
DECREMENT            : 100
DEFAULT              : 
DEFER                : 
DIVIDE               : 84 89
DOT                  : 40 41 42 43 44 45 49 54 54 55 55
ELSE                 : 
EQUAL                : 63
ERROR                : 
FALLTHROUGH          : 
FALSE                : 
FLOAT                : 97
FLOATTYPE            : 70
FMT                  : 40 41 42 43 45 49
FOR                  : 28 29 30 31
FPRINT               : 42
FRONT                : 
FUNC                 : 24
GO                   : 
GOTO                 : 
GREATEROREQUALTHAN   : 67
GREATERTHAN          : 65
IF                   : 
IMPORT               : 
INCREMENT            : 99
INTEGER              : 58 81 81 82 82 83 83 84 84 85 85 98
INTERFACE            : 
INTTYPE              : 69
LEN                  : 
LIST                 : 
LOCKL                : 24 27 28 29 30 31 32
LOCKR                : 24 27 28 29 30 31 32
MAP                  : 
MINUS                : 35 82 87
MODULE               : 85 90
NEW                  : 
NEWREADER            : 54
NEWWRITER            : 55
NOT                  : 74
OR                   : 73
OS                   : 54 55
PACKAGE              : 
PLUS                 : 81 86
PRINT                : 40
PRINTF               : 43
PRINTLN              : 41
PUSHBACK             : 
RANGE                : 30 31
READSTRING           : 44
RETURN               : 26
SCANF                : 45
SELECT               : 32
SEMICOLON            : 29 29
SHORTASSIGN          : 56
SMALLEROREQUALTHAN   : 68
SMALLERTHAN          : 35 66
SSCANF               : 49
STDIN                : 54
STDOUT               : 55
STRING               : 42 43 44 45 52 93
STRINGTYPE           : 
STRUCT               : 
SWITCH               : 27
TIMES                : 83 88
TRUE                 : 
TYPE                 : 
UNEQUAL              : 64
VAR                  : 57
VARIABLE             : 18 24 24 26 27 30 30 31 42 44 48 56 57 59 95 99 100
error                : 

Nonterminals, with rules where they appear

ampersand            : 53
asignable            : 16 17 18 19
asignacion           : 7 29
case                 : 36 37
caseSelect           : 33 34
cases                : 27 37
casesSelect          : 32 34
condicion            : 23 28 29 60
condicionCase        : 38
cuerpo               : 24
declaracion          : 6
ejecutable           : 1 2 25
estructuraControl    : 4
expresionDivision    : 78
expresionMatematica  : 9 22
expresionModulo      : 79
expresionMultiplicacion : 77
expresionResta       : 76
expresionSuma        : 75
factor               : 80 80 94
funcion              : 3
impresion            : 5
impresionBufio       : 11
impresionFormato     : 12
impresionSencilla    : 10
iterador             : 29
lectura              : 8
lecturaReader        : 13
lecturaScanf         : 14
lecturaSscanf        : 15
main                 : 2 28 29 30 31 35 38 0
numero               : 96
opcionLectura        : 45 47
opciones             : 46 47 50 51
opcionesLectura      : 49 51
operadorComparacion  : 61
operadorLogico       : 62
operadorMatematico   : 80
tipoDato             : 19 20 24 24
tipoImpresion        : 39
valor                : 21 61 61 62 62 91 92
valores              : 39 43 92
varAssign            : 17 19 20
varShortAssign       : 16 30 31 35 44 54 55

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    main                           shift and go to state 1
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 14
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 1

    (0) S' -> main .



state 2

    (1) main -> ejecutable .
    (2) main -> ejecutable . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    $end            reduce using rule 1 (main -> ejecutable .)
    LOCKR           reduce using rule 1 (main -> ejecutable .)
    CASE            reduce using rule 1 (main -> ejecutable .)
    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    ejecutable                     shift and go to state 2
    main                           shift and go to state 35
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 14
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 3

    (3) main -> funcion .

    $end            reduce using rule 3 (main -> funcion .)
    LOCKR           reduce using rule 3 (main -> funcion .)
    CASE            reduce using rule 3 (main -> funcion .)


state 4

    (4) ejecutable -> estructuraControl .

    FUNC            reduce using rule 4 (ejecutable -> estructuraControl .)
    SWITCH          reduce using rule 4 (ejecutable -> estructuraControl .)
    FOR             reduce using rule 4 (ejecutable -> estructuraControl .)
    SELECT          reduce using rule 4 (ejecutable -> estructuraControl .)
    VARIABLE        reduce using rule 4 (ejecutable -> estructuraControl .)
    FMT             reduce using rule 4 (ejecutable -> estructuraControl .)
    VAR             reduce using rule 4 (ejecutable -> estructuraControl .)
    INTEGER         reduce using rule 4 (ejecutable -> estructuraControl .)
    FLOAT           reduce using rule 4 (ejecutable -> estructuraControl .)
    $end            reduce using rule 4 (ejecutable -> estructuraControl .)
    LOCKR           reduce using rule 4 (ejecutable -> estructuraControl .)
    CASE            reduce using rule 4 (ejecutable -> estructuraControl .)


state 5

    (5) ejecutable -> impresion .

    FUNC            reduce using rule 5 (ejecutable -> impresion .)
    SWITCH          reduce using rule 5 (ejecutable -> impresion .)
    FOR             reduce using rule 5 (ejecutable -> impresion .)
    SELECT          reduce using rule 5 (ejecutable -> impresion .)
    VARIABLE        reduce using rule 5 (ejecutable -> impresion .)
    FMT             reduce using rule 5 (ejecutable -> impresion .)
    VAR             reduce using rule 5 (ejecutable -> impresion .)
    INTEGER         reduce using rule 5 (ejecutable -> impresion .)
    FLOAT           reduce using rule 5 (ejecutable -> impresion .)
    $end            reduce using rule 5 (ejecutable -> impresion .)
    LOCKR           reduce using rule 5 (ejecutable -> impresion .)
    CASE            reduce using rule 5 (ejecutable -> impresion .)


state 6

    (6) ejecutable -> declaracion .

    FUNC            reduce using rule 6 (ejecutable -> declaracion .)
    SWITCH          reduce using rule 6 (ejecutable -> declaracion .)
    FOR             reduce using rule 6 (ejecutable -> declaracion .)
    SELECT          reduce using rule 6 (ejecutable -> declaracion .)
    VARIABLE        reduce using rule 6 (ejecutable -> declaracion .)
    FMT             reduce using rule 6 (ejecutable -> declaracion .)
    VAR             reduce using rule 6 (ejecutable -> declaracion .)
    INTEGER         reduce using rule 6 (ejecutable -> declaracion .)
    FLOAT           reduce using rule 6 (ejecutable -> declaracion .)
    $end            reduce using rule 6 (ejecutable -> declaracion .)
    LOCKR           reduce using rule 6 (ejecutable -> declaracion .)
    CASE            reduce using rule 6 (ejecutable -> declaracion .)


state 7

    (7) ejecutable -> asignacion .

    FUNC            reduce using rule 7 (ejecutable -> asignacion .)
    SWITCH          reduce using rule 7 (ejecutable -> asignacion .)
    FOR             reduce using rule 7 (ejecutable -> asignacion .)
    SELECT          reduce using rule 7 (ejecutable -> asignacion .)
    VARIABLE        reduce using rule 7 (ejecutable -> asignacion .)
    FMT             reduce using rule 7 (ejecutable -> asignacion .)
    VAR             reduce using rule 7 (ejecutable -> asignacion .)
    INTEGER         reduce using rule 7 (ejecutable -> asignacion .)
    FLOAT           reduce using rule 7 (ejecutable -> asignacion .)
    $end            reduce using rule 7 (ejecutable -> asignacion .)
    LOCKR           reduce using rule 7 (ejecutable -> asignacion .)
    CASE            reduce using rule 7 (ejecutable -> asignacion .)


state 8

    (8) ejecutable -> lectura .

    FUNC            reduce using rule 8 (ejecutable -> lectura .)
    SWITCH          reduce using rule 8 (ejecutable -> lectura .)
    FOR             reduce using rule 8 (ejecutable -> lectura .)
    SELECT          reduce using rule 8 (ejecutable -> lectura .)
    VARIABLE        reduce using rule 8 (ejecutable -> lectura .)
    FMT             reduce using rule 8 (ejecutable -> lectura .)
    VAR             reduce using rule 8 (ejecutable -> lectura .)
    INTEGER         reduce using rule 8 (ejecutable -> lectura .)
    FLOAT           reduce using rule 8 (ejecutable -> lectura .)
    $end            reduce using rule 8 (ejecutable -> lectura .)
    LOCKR           reduce using rule 8 (ejecutable -> lectura .)
    CASE            reduce using rule 8 (ejecutable -> lectura .)


state 9

    (9) ejecutable -> expresionMatematica .

    FUNC            reduce using rule 9 (ejecutable -> expresionMatematica .)
    SWITCH          reduce using rule 9 (ejecutable -> expresionMatematica .)
    FOR             reduce using rule 9 (ejecutable -> expresionMatematica .)
    SELECT          reduce using rule 9 (ejecutable -> expresionMatematica .)
    VARIABLE        reduce using rule 9 (ejecutable -> expresionMatematica .)
    FMT             reduce using rule 9 (ejecutable -> expresionMatematica .)
    VAR             reduce using rule 9 (ejecutable -> expresionMatematica .)
    INTEGER         reduce using rule 9 (ejecutable -> expresionMatematica .)
    FLOAT           reduce using rule 9 (ejecutable -> expresionMatematica .)
    $end            reduce using rule 9 (ejecutable -> expresionMatematica .)
    LOCKR           reduce using rule 9 (ejecutable -> expresionMatematica .)
    CASE            reduce using rule 9 (ejecutable -> expresionMatematica .)


state 10

    (24) funcion -> FUNC . VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR

    VARIABLE        shift and go to state 36


state 11

    (18) asignacion -> VARIABLE . ASSIGN asignable
    (56) varShortAssign -> VARIABLE . SHORTASSIGN
    (95) factor -> VARIABLE .

    ASSIGN          shift and go to state 37
    SHORTASSIGN     shift and go to state 38
    PLUS            reduce using rule 95 (factor -> VARIABLE .)
    MINUS           reduce using rule 95 (factor -> VARIABLE .)
    TIMES           reduce using rule 95 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 95 (factor -> VARIABLE .)
    MODULE          reduce using rule 95 (factor -> VARIABLE .)


state 12

    (27) estructuraControl -> SWITCH . VARIABLE LOCKL cases LOCKR

    VARIABLE        shift and go to state 39


state 13

    (28) estructuraControl -> FOR . condicion LOCKL main LOCKR
    (29) estructuraControl -> FOR . asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> FOR . VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> FOR . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (93) valor -> . STRING
    (94) valor -> . factor
    (57) varAssign -> . VAR VARIABLE
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    VARIABLE        shift and go to state 42
    STRING          shift and go to state 46
    VAR             shift and go to state 31
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    condicion                      shift and go to state 40
    asignacion                     shift and go to state 41
    varShortAssign                 shift and go to state 43
    valor                          shift and go to state 44
    varAssign                      shift and go to state 45
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 14

    (54) declaracion -> varShortAssign . BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> varShortAssign . BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> varShortAssign . asignable
    (44) lecturaReader -> varShortAssign . VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (21) asignable -> . valor
    (22) asignable -> . expresionMatematica
    (23) asignable -> . condicion
    (93) valor -> . STRING
    (94) valor -> . factor
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    BUFIO           shift and go to state 49
    VARIABLE        shift and go to state 51
    STRING          shift and go to state 46
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    asignable                      shift and go to state 50
    valor                          shift and go to state 52
    expresionMatematica            shift and go to state 53
    condicion                      shift and go to state 54
    factor                         shift and go to state 55
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    numero                         shift and go to state 33

state 15

    (32) estructuraControl -> SELECT . LOCKL casesSelect LOCKR

    LOCKL           shift and go to state 56


state 16

    (10) impresion -> impresionSencilla .

    FUNC            reduce using rule 10 (impresion -> impresionSencilla .)
    SWITCH          reduce using rule 10 (impresion -> impresionSencilla .)
    FOR             reduce using rule 10 (impresion -> impresionSencilla .)
    SELECT          reduce using rule 10 (impresion -> impresionSencilla .)
    VARIABLE        reduce using rule 10 (impresion -> impresionSencilla .)
    FMT             reduce using rule 10 (impresion -> impresionSencilla .)
    VAR             reduce using rule 10 (impresion -> impresionSencilla .)
    INTEGER         reduce using rule 10 (impresion -> impresionSencilla .)
    FLOAT           reduce using rule 10 (impresion -> impresionSencilla .)
    $end            reduce using rule 10 (impresion -> impresionSencilla .)
    LOCKR           reduce using rule 10 (impresion -> impresionSencilla .)
    CASE            reduce using rule 10 (impresion -> impresionSencilla .)


state 17

    (11) impresion -> impresionBufio .

    FUNC            reduce using rule 11 (impresion -> impresionBufio .)
    SWITCH          reduce using rule 11 (impresion -> impresionBufio .)
    FOR             reduce using rule 11 (impresion -> impresionBufio .)
    SELECT          reduce using rule 11 (impresion -> impresionBufio .)
    VARIABLE        reduce using rule 11 (impresion -> impresionBufio .)
    FMT             reduce using rule 11 (impresion -> impresionBufio .)
    VAR             reduce using rule 11 (impresion -> impresionBufio .)
    INTEGER         reduce using rule 11 (impresion -> impresionBufio .)
    FLOAT           reduce using rule 11 (impresion -> impresionBufio .)
    $end            reduce using rule 11 (impresion -> impresionBufio .)
    LOCKR           reduce using rule 11 (impresion -> impresionBufio .)
    CASE            reduce using rule 11 (impresion -> impresionBufio .)


state 18

    (12) impresion -> impresionFormato .

    FUNC            reduce using rule 12 (impresion -> impresionFormato .)
    SWITCH          reduce using rule 12 (impresion -> impresionFormato .)
    FOR             reduce using rule 12 (impresion -> impresionFormato .)
    SELECT          reduce using rule 12 (impresion -> impresionFormato .)
    VARIABLE        reduce using rule 12 (impresion -> impresionFormato .)
    FMT             reduce using rule 12 (impresion -> impresionFormato .)
    VAR             reduce using rule 12 (impresion -> impresionFormato .)
    INTEGER         reduce using rule 12 (impresion -> impresionFormato .)
    FLOAT           reduce using rule 12 (impresion -> impresionFormato .)
    $end            reduce using rule 12 (impresion -> impresionFormato .)
    LOCKR           reduce using rule 12 (impresion -> impresionFormato .)
    CASE            reduce using rule 12 (impresion -> impresionFormato .)


state 19

    (20) declaracion -> varAssign . tipoDato
    (17) asignacion -> varAssign . ASSIGN asignable
    (19) asignacion -> varAssign . tipoDato ASSIGN asignable
    (69) tipoDato -> . INTTYPE
    (70) tipoDato -> . FLOATTYPE
    (71) tipoDato -> . BOOLEANTYPE

    ASSIGN          shift and go to state 58
    INTTYPE         shift and go to state 59
    FLOATTYPE       shift and go to state 60
    BOOLEANTYPE     shift and go to state 61

    tipoDato                       shift and go to state 57

state 20

    (13) lectura -> lecturaReader .

    FUNC            reduce using rule 13 (lectura -> lecturaReader .)
    SWITCH          reduce using rule 13 (lectura -> lecturaReader .)
    FOR             reduce using rule 13 (lectura -> lecturaReader .)
    SELECT          reduce using rule 13 (lectura -> lecturaReader .)
    VARIABLE        reduce using rule 13 (lectura -> lecturaReader .)
    FMT             reduce using rule 13 (lectura -> lecturaReader .)
    VAR             reduce using rule 13 (lectura -> lecturaReader .)
    INTEGER         reduce using rule 13 (lectura -> lecturaReader .)
    FLOAT           reduce using rule 13 (lectura -> lecturaReader .)
    $end            reduce using rule 13 (lectura -> lecturaReader .)
    LOCKR           reduce using rule 13 (lectura -> lecturaReader .)
    CASE            reduce using rule 13 (lectura -> lecturaReader .)


state 21

    (14) lectura -> lecturaScanf .

    FUNC            reduce using rule 14 (lectura -> lecturaScanf .)
    SWITCH          reduce using rule 14 (lectura -> lecturaScanf .)
    FOR             reduce using rule 14 (lectura -> lecturaScanf .)
    SELECT          reduce using rule 14 (lectura -> lecturaScanf .)
    VARIABLE        reduce using rule 14 (lectura -> lecturaScanf .)
    FMT             reduce using rule 14 (lectura -> lecturaScanf .)
    VAR             reduce using rule 14 (lectura -> lecturaScanf .)
    INTEGER         reduce using rule 14 (lectura -> lecturaScanf .)
    FLOAT           reduce using rule 14 (lectura -> lecturaScanf .)
    $end            reduce using rule 14 (lectura -> lecturaScanf .)
    LOCKR           reduce using rule 14 (lectura -> lecturaScanf .)
    CASE            reduce using rule 14 (lectura -> lecturaScanf .)


state 22

    (15) lectura -> lecturaSscanf .

    FUNC            reduce using rule 15 (lectura -> lecturaSscanf .)
    SWITCH          reduce using rule 15 (lectura -> lecturaSscanf .)
    FOR             reduce using rule 15 (lectura -> lecturaSscanf .)
    SELECT          reduce using rule 15 (lectura -> lecturaSscanf .)
    VARIABLE        reduce using rule 15 (lectura -> lecturaSscanf .)
    FMT             reduce using rule 15 (lectura -> lecturaSscanf .)
    VAR             reduce using rule 15 (lectura -> lecturaSscanf .)
    INTEGER         reduce using rule 15 (lectura -> lecturaSscanf .)
    FLOAT           reduce using rule 15 (lectura -> lecturaSscanf .)
    $end            reduce using rule 15 (lectura -> lecturaSscanf .)
    LOCKR           reduce using rule 15 (lectura -> lecturaSscanf .)
    CASE            reduce using rule 15 (lectura -> lecturaSscanf .)


state 23

    (75) expresionMatematica -> expresionSuma .

    FUNC            reduce using rule 75 (expresionMatematica -> expresionSuma .)
    SWITCH          reduce using rule 75 (expresionMatematica -> expresionSuma .)
    FOR             reduce using rule 75 (expresionMatematica -> expresionSuma .)
    SELECT          reduce using rule 75 (expresionMatematica -> expresionSuma .)
    VARIABLE        reduce using rule 75 (expresionMatematica -> expresionSuma .)
    FMT             reduce using rule 75 (expresionMatematica -> expresionSuma .)
    VAR             reduce using rule 75 (expresionMatematica -> expresionSuma .)
    INTEGER         reduce using rule 75 (expresionMatematica -> expresionSuma .)
    FLOAT           reduce using rule 75 (expresionMatematica -> expresionSuma .)
    $end            reduce using rule 75 (expresionMatematica -> expresionSuma .)
    LOCKR           reduce using rule 75 (expresionMatematica -> expresionSuma .)
    CASE            reduce using rule 75 (expresionMatematica -> expresionSuma .)
    SEMICOLON       reduce using rule 75 (expresionMatematica -> expresionSuma .)


state 24

    (76) expresionMatematica -> expresionResta .

    FUNC            reduce using rule 76 (expresionMatematica -> expresionResta .)
    SWITCH          reduce using rule 76 (expresionMatematica -> expresionResta .)
    FOR             reduce using rule 76 (expresionMatematica -> expresionResta .)
    SELECT          reduce using rule 76 (expresionMatematica -> expresionResta .)
    VARIABLE        reduce using rule 76 (expresionMatematica -> expresionResta .)
    FMT             reduce using rule 76 (expresionMatematica -> expresionResta .)
    VAR             reduce using rule 76 (expresionMatematica -> expresionResta .)
    INTEGER         reduce using rule 76 (expresionMatematica -> expresionResta .)
    FLOAT           reduce using rule 76 (expresionMatematica -> expresionResta .)
    $end            reduce using rule 76 (expresionMatematica -> expresionResta .)
    LOCKR           reduce using rule 76 (expresionMatematica -> expresionResta .)
    CASE            reduce using rule 76 (expresionMatematica -> expresionResta .)
    SEMICOLON       reduce using rule 76 (expresionMatematica -> expresionResta .)


state 25

    (77) expresionMatematica -> expresionMultiplicacion .

    FUNC            reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    SWITCH          reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    FOR             reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    SELECT          reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    VARIABLE        reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    FMT             reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    VAR             reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    INTEGER         reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    FLOAT           reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    $end            reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    LOCKR           reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    CASE            reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)
    SEMICOLON       reduce using rule 77 (expresionMatematica -> expresionMultiplicacion .)


state 26

    (78) expresionMatematica -> expresionDivision .

    FUNC            reduce using rule 78 (expresionMatematica -> expresionDivision .)
    SWITCH          reduce using rule 78 (expresionMatematica -> expresionDivision .)
    FOR             reduce using rule 78 (expresionMatematica -> expresionDivision .)
    SELECT          reduce using rule 78 (expresionMatematica -> expresionDivision .)
    VARIABLE        reduce using rule 78 (expresionMatematica -> expresionDivision .)
    FMT             reduce using rule 78 (expresionMatematica -> expresionDivision .)
    VAR             reduce using rule 78 (expresionMatematica -> expresionDivision .)
    INTEGER         reduce using rule 78 (expresionMatematica -> expresionDivision .)
    FLOAT           reduce using rule 78 (expresionMatematica -> expresionDivision .)
    $end            reduce using rule 78 (expresionMatematica -> expresionDivision .)
    LOCKR           reduce using rule 78 (expresionMatematica -> expresionDivision .)
    CASE            reduce using rule 78 (expresionMatematica -> expresionDivision .)
    SEMICOLON       reduce using rule 78 (expresionMatematica -> expresionDivision .)


state 27

    (79) expresionMatematica -> expresionModulo .

    FUNC            reduce using rule 79 (expresionMatematica -> expresionModulo .)
    SWITCH          reduce using rule 79 (expresionMatematica -> expresionModulo .)
    FOR             reduce using rule 79 (expresionMatematica -> expresionModulo .)
    SELECT          reduce using rule 79 (expresionMatematica -> expresionModulo .)
    VARIABLE        reduce using rule 79 (expresionMatematica -> expresionModulo .)
    FMT             reduce using rule 79 (expresionMatematica -> expresionModulo .)
    VAR             reduce using rule 79 (expresionMatematica -> expresionModulo .)
    INTEGER         reduce using rule 79 (expresionMatematica -> expresionModulo .)
    FLOAT           reduce using rule 79 (expresionMatematica -> expresionModulo .)
    $end            reduce using rule 79 (expresionMatematica -> expresionModulo .)
    LOCKR           reduce using rule 79 (expresionMatematica -> expresionModulo .)
    CASE            reduce using rule 79 (expresionMatematica -> expresionModulo .)
    SEMICOLON       reduce using rule 79 (expresionMatematica -> expresionModulo .)


state 28

    (80) expresionMatematica -> factor . operadorMatematico factor
    (86) operadorMatematico -> . PLUS
    (87) operadorMatematico -> . MINUS
    (88) operadorMatematico -> . TIMES
    (89) operadorMatematico -> . DIVIDE
    (90) operadorMatematico -> . MODULE

    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MODULE          shift and go to state 67

    operadorMatematico             shift and go to state 62

state 29

    (39) impresionSencilla -> tipoImpresion . BRACKETL valores BRACKETR

    BRACKETL        shift and go to state 68


state 30

    (42) impresionBufio -> FMT . DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> FMT . DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (45) lecturaScanf -> FMT . DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> FMT . DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (40) tipoImpresion -> FMT . DOT PRINT
    (41) tipoImpresion -> FMT . DOT PRINTLN

    DOT             shift and go to state 69


state 31

    (57) varAssign -> VAR . VARIABLE

    VARIABLE        shift and go to state 70


state 32

    (81) expresionSuma -> INTEGER . PLUS INTEGER
    (82) expresionResta -> INTEGER . MINUS INTEGER
    (83) expresionMultiplicacion -> INTEGER . TIMES INTEGER
    (84) expresionDivision -> INTEGER . DIVIDE INTEGER
    (85) expresionModulo -> INTEGER . MODULE INTEGER
    (98) numero -> INTEGER .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    TIMES           shift and go to state 73
    DIVIDE          shift and go to state 74
    MODULE          shift and go to state 75
    EQUAL           reduce using rule 98 (numero -> INTEGER .)
    UNEQUAL         reduce using rule 98 (numero -> INTEGER .)
    GREATERTHAN     reduce using rule 98 (numero -> INTEGER .)
    SMALLERTHAN     reduce using rule 98 (numero -> INTEGER .)
    GREATEROREQUALTHAN reduce using rule 98 (numero -> INTEGER .)
    SMALLEROREQUALTHAN reduce using rule 98 (numero -> INTEGER .)
    AND             reduce using rule 98 (numero -> INTEGER .)
    OR              reduce using rule 98 (numero -> INTEGER .)
    NOT             reduce using rule 98 (numero -> INTEGER .)
    FUNC            reduce using rule 98 (numero -> INTEGER .)
    SWITCH          reduce using rule 98 (numero -> INTEGER .)
    FOR             reduce using rule 98 (numero -> INTEGER .)
    SELECT          reduce using rule 98 (numero -> INTEGER .)
    VARIABLE        reduce using rule 98 (numero -> INTEGER .)
    FMT             reduce using rule 98 (numero -> INTEGER .)
    VAR             reduce using rule 98 (numero -> INTEGER .)
    INTEGER         reduce using rule 98 (numero -> INTEGER .)
    FLOAT           reduce using rule 98 (numero -> INTEGER .)
    $end            reduce using rule 98 (numero -> INTEGER .)
    LOCKR           reduce using rule 98 (numero -> INTEGER .)
    CASE            reduce using rule 98 (numero -> INTEGER .)
    SEMICOLON       reduce using rule 98 (numero -> INTEGER .)

  ! PLUS            [ reduce using rule 98 (numero -> INTEGER .) ]
  ! MINUS           [ reduce using rule 98 (numero -> INTEGER .) ]
  ! TIMES           [ reduce using rule 98 (numero -> INTEGER .) ]
  ! DIVIDE          [ reduce using rule 98 (numero -> INTEGER .) ]
  ! MODULE          [ reduce using rule 98 (numero -> INTEGER .) ]


state 33

    (96) factor -> numero .

    PLUS            reduce using rule 96 (factor -> numero .)
    MINUS           reduce using rule 96 (factor -> numero .)
    TIMES           reduce using rule 96 (factor -> numero .)
    DIVIDE          reduce using rule 96 (factor -> numero .)
    MODULE          reduce using rule 96 (factor -> numero .)
    EQUAL           reduce using rule 96 (factor -> numero .)
    UNEQUAL         reduce using rule 96 (factor -> numero .)
    GREATERTHAN     reduce using rule 96 (factor -> numero .)
    SMALLERTHAN     reduce using rule 96 (factor -> numero .)
    GREATEROREQUALTHAN reduce using rule 96 (factor -> numero .)
    SMALLEROREQUALTHAN reduce using rule 96 (factor -> numero .)
    AND             reduce using rule 96 (factor -> numero .)
    OR              reduce using rule 96 (factor -> numero .)
    NOT             reduce using rule 96 (factor -> numero .)
    FUNC            reduce using rule 96 (factor -> numero .)
    SWITCH          reduce using rule 96 (factor -> numero .)
    FOR             reduce using rule 96 (factor -> numero .)
    SELECT          reduce using rule 96 (factor -> numero .)
    VARIABLE        reduce using rule 96 (factor -> numero .)
    FMT             reduce using rule 96 (factor -> numero .)
    VAR             reduce using rule 96 (factor -> numero .)
    INTEGER         reduce using rule 96 (factor -> numero .)
    FLOAT           reduce using rule 96 (factor -> numero .)
    $end            reduce using rule 96 (factor -> numero .)
    LOCKR           reduce using rule 96 (factor -> numero .)
    CASE            reduce using rule 96 (factor -> numero .)
    SEMICOLON       reduce using rule 96 (factor -> numero .)
    COMA            reduce using rule 96 (factor -> numero .)
    BRACKETR        reduce using rule 96 (factor -> numero .)
    LOCKL           reduce using rule 96 (factor -> numero .)
    COLON           reduce using rule 96 (factor -> numero .)


state 34

    (97) numero -> FLOAT .

    PLUS            reduce using rule 97 (numero -> FLOAT .)
    MINUS           reduce using rule 97 (numero -> FLOAT .)
    TIMES           reduce using rule 97 (numero -> FLOAT .)
    DIVIDE          reduce using rule 97 (numero -> FLOAT .)
    MODULE          reduce using rule 97 (numero -> FLOAT .)
    EQUAL           reduce using rule 97 (numero -> FLOAT .)
    UNEQUAL         reduce using rule 97 (numero -> FLOAT .)
    GREATERTHAN     reduce using rule 97 (numero -> FLOAT .)
    SMALLERTHAN     reduce using rule 97 (numero -> FLOAT .)
    GREATEROREQUALTHAN reduce using rule 97 (numero -> FLOAT .)
    SMALLEROREQUALTHAN reduce using rule 97 (numero -> FLOAT .)
    AND             reduce using rule 97 (numero -> FLOAT .)
    OR              reduce using rule 97 (numero -> FLOAT .)
    NOT             reduce using rule 97 (numero -> FLOAT .)
    FUNC            reduce using rule 97 (numero -> FLOAT .)
    SWITCH          reduce using rule 97 (numero -> FLOAT .)
    FOR             reduce using rule 97 (numero -> FLOAT .)
    SELECT          reduce using rule 97 (numero -> FLOAT .)
    VARIABLE        reduce using rule 97 (numero -> FLOAT .)
    FMT             reduce using rule 97 (numero -> FLOAT .)
    VAR             reduce using rule 97 (numero -> FLOAT .)
    INTEGER         reduce using rule 97 (numero -> FLOAT .)
    FLOAT           reduce using rule 97 (numero -> FLOAT .)
    $end            reduce using rule 97 (numero -> FLOAT .)
    LOCKR           reduce using rule 97 (numero -> FLOAT .)
    CASE            reduce using rule 97 (numero -> FLOAT .)
    SEMICOLON       reduce using rule 97 (numero -> FLOAT .)
    COMA            reduce using rule 97 (numero -> FLOAT .)
    BRACKETR        reduce using rule 97 (numero -> FLOAT .)
    LOCKL           reduce using rule 97 (numero -> FLOAT .)
    COLON           reduce using rule 97 (numero -> FLOAT .)


state 35

    (2) main -> ejecutable main .

    $end            reduce using rule 2 (main -> ejecutable main .)
    LOCKR           reduce using rule 2 (main -> ejecutable main .)
    CASE            reduce using rule 2 (main -> ejecutable main .)


state 36

    (24) funcion -> FUNC VARIABLE . BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR

    BRACKETL        shift and go to state 76


state 37

    (18) asignacion -> VARIABLE ASSIGN . asignable
    (21) asignable -> . valor
    (22) asignable -> . expresionMatematica
    (23) asignable -> . condicion
    (93) valor -> . STRING
    (94) valor -> . factor
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    asignable                      shift and go to state 78
    valor                          shift and go to state 52
    expresionMatematica            shift and go to state 53
    condicion                      shift and go to state 54
    factor                         shift and go to state 55
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    numero                         shift and go to state 33

state 38

    (56) varShortAssign -> VARIABLE SHORTASSIGN .

    BUFIO           reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)
    VARIABLE        reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)
    STRING          reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)
    INTEGER         reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)
    FLOAT           reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)
    RANGE           reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)
    SMALLERTHAN     reduce using rule 56 (varShortAssign -> VARIABLE SHORTASSIGN .)


state 39

    (27) estructuraControl -> SWITCH VARIABLE . LOCKL cases LOCKR

    LOCKL           shift and go to state 79


state 40

    (28) estructuraControl -> FOR condicion . LOCKL main LOCKR

    LOCKL           shift and go to state 80


state 41

    (29) estructuraControl -> FOR asignacion . SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 81


state 42

    (30) estructuraControl -> FOR VARIABLE . COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (18) asignacion -> VARIABLE . ASSIGN asignable
    (56) varShortAssign -> VARIABLE . SHORTASSIGN
    (95) factor -> VARIABLE .

    COMA            shift and go to state 82
    ASSIGN          shift and go to state 37
    SHORTASSIGN     shift and go to state 38
    EQUAL           reduce using rule 95 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 95 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    AND             reduce using rule 95 (factor -> VARIABLE .)
    OR              reduce using rule 95 (factor -> VARIABLE .)
    NOT             reduce using rule 95 (factor -> VARIABLE .)


state 43

    (31) estructuraControl -> FOR varShortAssign . RANGE VARIABLE LOCKL main LOCKR
    (16) asignacion -> varShortAssign . asignable
    (21) asignable -> . valor
    (22) asignable -> . expresionMatematica
    (23) asignable -> . condicion
    (93) valor -> . STRING
    (94) valor -> . factor
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    RANGE           shift and go to state 83
    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    asignable                      shift and go to state 50
    valor                          shift and go to state 52
    expresionMatematica            shift and go to state 53
    condicion                      shift and go to state 54
    factor                         shift and go to state 55
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    numero                         shift and go to state 33

state 44

    (61) condicion -> valor . operadorComparacion valor
    (62) condicion -> valor . operadorLogico valor
    (63) operadorComparacion -> . EQUAL
    (64) operadorComparacion -> . UNEQUAL
    (65) operadorComparacion -> . GREATERTHAN
    (66) operadorComparacion -> . SMALLERTHAN
    (67) operadorComparacion -> . GREATEROREQUALTHAN
    (68) operadorComparacion -> . SMALLEROREQUALTHAN
    (72) operadorLogico -> . AND
    (73) operadorLogico -> . OR
    (74) operadorLogico -> . NOT

    EQUAL           shift and go to state 86
    UNEQUAL         shift and go to state 87
    GREATERTHAN     shift and go to state 88
    SMALLERTHAN     shift and go to state 89
    GREATEROREQUALTHAN shift and go to state 90
    SMALLEROREQUALTHAN shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    NOT             shift and go to state 94

    operadorComparacion            shift and go to state 84
    operadorLogico                 shift and go to state 85

state 45

    (17) asignacion -> varAssign . ASSIGN asignable
    (19) asignacion -> varAssign . tipoDato ASSIGN asignable
    (69) tipoDato -> . INTTYPE
    (70) tipoDato -> . FLOATTYPE
    (71) tipoDato -> . BOOLEANTYPE

    ASSIGN          shift and go to state 58
    INTTYPE         shift and go to state 59
    FLOATTYPE       shift and go to state 60
    BOOLEANTYPE     shift and go to state 61

    tipoDato                       shift and go to state 95

state 46

    (93) valor -> STRING .

    EQUAL           reduce using rule 93 (valor -> STRING .)
    UNEQUAL         reduce using rule 93 (valor -> STRING .)
    GREATERTHAN     reduce using rule 93 (valor -> STRING .)
    SMALLERTHAN     reduce using rule 93 (valor -> STRING .)
    GREATEROREQUALTHAN reduce using rule 93 (valor -> STRING .)
    SMALLEROREQUALTHAN reduce using rule 93 (valor -> STRING .)
    AND             reduce using rule 93 (valor -> STRING .)
    OR              reduce using rule 93 (valor -> STRING .)
    NOT             reduce using rule 93 (valor -> STRING .)
    FUNC            reduce using rule 93 (valor -> STRING .)
    SWITCH          reduce using rule 93 (valor -> STRING .)
    FOR             reduce using rule 93 (valor -> STRING .)
    SELECT          reduce using rule 93 (valor -> STRING .)
    VARIABLE        reduce using rule 93 (valor -> STRING .)
    FMT             reduce using rule 93 (valor -> STRING .)
    VAR             reduce using rule 93 (valor -> STRING .)
    INTEGER         reduce using rule 93 (valor -> STRING .)
    FLOAT           reduce using rule 93 (valor -> STRING .)
    $end            reduce using rule 93 (valor -> STRING .)
    LOCKR           reduce using rule 93 (valor -> STRING .)
    CASE            reduce using rule 93 (valor -> STRING .)
    SEMICOLON       reduce using rule 93 (valor -> STRING .)
    COMA            reduce using rule 93 (valor -> STRING .)
    BRACKETR        reduce using rule 93 (valor -> STRING .)
    LOCKL           reduce using rule 93 (valor -> STRING .)
    COLON           reduce using rule 93 (valor -> STRING .)


state 47

    (94) valor -> factor .

    EQUAL           reduce using rule 94 (valor -> factor .)
    UNEQUAL         reduce using rule 94 (valor -> factor .)
    GREATERTHAN     reduce using rule 94 (valor -> factor .)
    SMALLERTHAN     reduce using rule 94 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 94 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 94 (valor -> factor .)
    AND             reduce using rule 94 (valor -> factor .)
    OR              reduce using rule 94 (valor -> factor .)
    NOT             reduce using rule 94 (valor -> factor .)
    COMA            reduce using rule 94 (valor -> factor .)
    BRACKETR        reduce using rule 94 (valor -> factor .)
    LOCKL           reduce using rule 94 (valor -> factor .)
    FUNC            reduce using rule 94 (valor -> factor .)
    SWITCH          reduce using rule 94 (valor -> factor .)
    FOR             reduce using rule 94 (valor -> factor .)
    SELECT          reduce using rule 94 (valor -> factor .)
    VARIABLE        reduce using rule 94 (valor -> factor .)
    FMT             reduce using rule 94 (valor -> factor .)
    VAR             reduce using rule 94 (valor -> factor .)
    INTEGER         reduce using rule 94 (valor -> factor .)
    FLOAT           reduce using rule 94 (valor -> factor .)
    $end            reduce using rule 94 (valor -> factor .)
    LOCKR           reduce using rule 94 (valor -> factor .)
    CASE            reduce using rule 94 (valor -> factor .)
    SEMICOLON       reduce using rule 94 (valor -> factor .)
    COLON           reduce using rule 94 (valor -> factor .)


state 48

    (98) numero -> INTEGER .

    EQUAL           reduce using rule 98 (numero -> INTEGER .)
    UNEQUAL         reduce using rule 98 (numero -> INTEGER .)
    GREATERTHAN     reduce using rule 98 (numero -> INTEGER .)
    SMALLERTHAN     reduce using rule 98 (numero -> INTEGER .)
    GREATEROREQUALTHAN reduce using rule 98 (numero -> INTEGER .)
    SMALLEROREQUALTHAN reduce using rule 98 (numero -> INTEGER .)
    AND             reduce using rule 98 (numero -> INTEGER .)
    OR              reduce using rule 98 (numero -> INTEGER .)
    NOT             reduce using rule 98 (numero -> INTEGER .)
    FUNC            reduce using rule 98 (numero -> INTEGER .)
    SWITCH          reduce using rule 98 (numero -> INTEGER .)
    FOR             reduce using rule 98 (numero -> INTEGER .)
    SELECT          reduce using rule 98 (numero -> INTEGER .)
    VARIABLE        reduce using rule 98 (numero -> INTEGER .)
    FMT             reduce using rule 98 (numero -> INTEGER .)
    VAR             reduce using rule 98 (numero -> INTEGER .)
    INTEGER         reduce using rule 98 (numero -> INTEGER .)
    FLOAT           reduce using rule 98 (numero -> INTEGER .)
    $end            reduce using rule 98 (numero -> INTEGER .)
    LOCKR           reduce using rule 98 (numero -> INTEGER .)
    CASE            reduce using rule 98 (numero -> INTEGER .)
    SEMICOLON       reduce using rule 98 (numero -> INTEGER .)
    COMA            reduce using rule 98 (numero -> INTEGER .)
    BRACKETR        reduce using rule 98 (numero -> INTEGER .)
    LOCKL           reduce using rule 98 (numero -> INTEGER .)
    COLON           reduce using rule 98 (numero -> INTEGER .)


state 49

    (54) declaracion -> varShortAssign BUFIO . DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> varShortAssign BUFIO . DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    DOT             shift and go to state 96


state 50

    (16) asignacion -> varShortAssign asignable .

    FUNC            reduce using rule 16 (asignacion -> varShortAssign asignable .)
    SWITCH          reduce using rule 16 (asignacion -> varShortAssign asignable .)
    FOR             reduce using rule 16 (asignacion -> varShortAssign asignable .)
    SELECT          reduce using rule 16 (asignacion -> varShortAssign asignable .)
    VARIABLE        reduce using rule 16 (asignacion -> varShortAssign asignable .)
    FMT             reduce using rule 16 (asignacion -> varShortAssign asignable .)
    VAR             reduce using rule 16 (asignacion -> varShortAssign asignable .)
    INTEGER         reduce using rule 16 (asignacion -> varShortAssign asignable .)
    FLOAT           reduce using rule 16 (asignacion -> varShortAssign asignable .)
    $end            reduce using rule 16 (asignacion -> varShortAssign asignable .)
    LOCKR           reduce using rule 16 (asignacion -> varShortAssign asignable .)
    CASE            reduce using rule 16 (asignacion -> varShortAssign asignable .)
    SEMICOLON       reduce using rule 16 (asignacion -> varShortAssign asignable .)


state 51

    (44) lecturaReader -> varShortAssign VARIABLE . DOT READSTRING BRACKETL STRING BRACKETR
    (95) factor -> VARIABLE .

    DOT             shift and go to state 97
    PLUS            reduce using rule 95 (factor -> VARIABLE .)
    MINUS           reduce using rule 95 (factor -> VARIABLE .)
    TIMES           reduce using rule 95 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 95 (factor -> VARIABLE .)
    MODULE          reduce using rule 95 (factor -> VARIABLE .)
    EQUAL           reduce using rule 95 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 95 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    AND             reduce using rule 95 (factor -> VARIABLE .)
    OR              reduce using rule 95 (factor -> VARIABLE .)
    NOT             reduce using rule 95 (factor -> VARIABLE .)
    FUNC            reduce using rule 95 (factor -> VARIABLE .)
    SWITCH          reduce using rule 95 (factor -> VARIABLE .)
    FOR             reduce using rule 95 (factor -> VARIABLE .)
    SELECT          reduce using rule 95 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 95 (factor -> VARIABLE .)
    FMT             reduce using rule 95 (factor -> VARIABLE .)
    VAR             reduce using rule 95 (factor -> VARIABLE .)
    INTEGER         reduce using rule 95 (factor -> VARIABLE .)
    FLOAT           reduce using rule 95 (factor -> VARIABLE .)
    $end            reduce using rule 95 (factor -> VARIABLE .)
    LOCKR           reduce using rule 95 (factor -> VARIABLE .)
    CASE            reduce using rule 95 (factor -> VARIABLE .)


state 52

    (21) asignable -> valor .
    (61) condicion -> valor . operadorComparacion valor
    (62) condicion -> valor . operadorLogico valor
    (63) operadorComparacion -> . EQUAL
    (64) operadorComparacion -> . UNEQUAL
    (65) operadorComparacion -> . GREATERTHAN
    (66) operadorComparacion -> . SMALLERTHAN
    (67) operadorComparacion -> . GREATEROREQUALTHAN
    (68) operadorComparacion -> . SMALLEROREQUALTHAN
    (72) operadorLogico -> . AND
    (73) operadorLogico -> . OR
    (74) operadorLogico -> . NOT

    FUNC            reduce using rule 21 (asignable -> valor .)
    SWITCH          reduce using rule 21 (asignable -> valor .)
    FOR             reduce using rule 21 (asignable -> valor .)
    SELECT          reduce using rule 21 (asignable -> valor .)
    VARIABLE        reduce using rule 21 (asignable -> valor .)
    FMT             reduce using rule 21 (asignable -> valor .)
    VAR             reduce using rule 21 (asignable -> valor .)
    INTEGER         reduce using rule 21 (asignable -> valor .)
    FLOAT           reduce using rule 21 (asignable -> valor .)
    $end            reduce using rule 21 (asignable -> valor .)
    LOCKR           reduce using rule 21 (asignable -> valor .)
    CASE            reduce using rule 21 (asignable -> valor .)
    SEMICOLON       reduce using rule 21 (asignable -> valor .)
    EQUAL           shift and go to state 86
    UNEQUAL         shift and go to state 87
    GREATERTHAN     shift and go to state 88
    SMALLERTHAN     shift and go to state 89
    GREATEROREQUALTHAN shift and go to state 90
    SMALLEROREQUALTHAN shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    NOT             shift and go to state 94

    operadorComparacion            shift and go to state 84
    operadorLogico                 shift and go to state 85

state 53

    (22) asignable -> expresionMatematica .

    FUNC            reduce using rule 22 (asignable -> expresionMatematica .)
    SWITCH          reduce using rule 22 (asignable -> expresionMatematica .)
    FOR             reduce using rule 22 (asignable -> expresionMatematica .)
    SELECT          reduce using rule 22 (asignable -> expresionMatematica .)
    VARIABLE        reduce using rule 22 (asignable -> expresionMatematica .)
    FMT             reduce using rule 22 (asignable -> expresionMatematica .)
    VAR             reduce using rule 22 (asignable -> expresionMatematica .)
    INTEGER         reduce using rule 22 (asignable -> expresionMatematica .)
    FLOAT           reduce using rule 22 (asignable -> expresionMatematica .)
    $end            reduce using rule 22 (asignable -> expresionMatematica .)
    LOCKR           reduce using rule 22 (asignable -> expresionMatematica .)
    CASE            reduce using rule 22 (asignable -> expresionMatematica .)
    SEMICOLON       reduce using rule 22 (asignable -> expresionMatematica .)


state 54

    (23) asignable -> condicion .

    FUNC            reduce using rule 23 (asignable -> condicion .)
    SWITCH          reduce using rule 23 (asignable -> condicion .)
    FOR             reduce using rule 23 (asignable -> condicion .)
    SELECT          reduce using rule 23 (asignable -> condicion .)
    VARIABLE        reduce using rule 23 (asignable -> condicion .)
    FMT             reduce using rule 23 (asignable -> condicion .)
    VAR             reduce using rule 23 (asignable -> condicion .)
    INTEGER         reduce using rule 23 (asignable -> condicion .)
    FLOAT           reduce using rule 23 (asignable -> condicion .)
    $end            reduce using rule 23 (asignable -> condicion .)
    LOCKR           reduce using rule 23 (asignable -> condicion .)
    CASE            reduce using rule 23 (asignable -> condicion .)
    SEMICOLON       reduce using rule 23 (asignable -> condicion .)


state 55

    (94) valor -> factor .
    (80) expresionMatematica -> factor . operadorMatematico factor
    (86) operadorMatematico -> . PLUS
    (87) operadorMatematico -> . MINUS
    (88) operadorMatematico -> . TIMES
    (89) operadorMatematico -> . DIVIDE
    (90) operadorMatematico -> . MODULE

    EQUAL           reduce using rule 94 (valor -> factor .)
    UNEQUAL         reduce using rule 94 (valor -> factor .)
    GREATERTHAN     reduce using rule 94 (valor -> factor .)
    SMALLERTHAN     reduce using rule 94 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 94 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 94 (valor -> factor .)
    AND             reduce using rule 94 (valor -> factor .)
    OR              reduce using rule 94 (valor -> factor .)
    NOT             reduce using rule 94 (valor -> factor .)
    FUNC            reduce using rule 94 (valor -> factor .)
    SWITCH          reduce using rule 94 (valor -> factor .)
    FOR             reduce using rule 94 (valor -> factor .)
    SELECT          reduce using rule 94 (valor -> factor .)
    VARIABLE        reduce using rule 94 (valor -> factor .)
    FMT             reduce using rule 94 (valor -> factor .)
    VAR             reduce using rule 94 (valor -> factor .)
    INTEGER         reduce using rule 94 (valor -> factor .)
    FLOAT           reduce using rule 94 (valor -> factor .)
    $end            reduce using rule 94 (valor -> factor .)
    LOCKR           reduce using rule 94 (valor -> factor .)
    CASE            reduce using rule 94 (valor -> factor .)
    SEMICOLON       reduce using rule 94 (valor -> factor .)
    PLUS            shift and go to state 63
    MINUS           shift and go to state 64
    TIMES           shift and go to state 65
    DIVIDE          shift and go to state 66
    MODULE          shift and go to state 67

    operadorMatematico             shift and go to state 62

state 56

    (32) estructuraControl -> SELECT LOCKL . casesSelect LOCKR
    (33) casesSelect -> . caseSelect
    (34) casesSelect -> . caseSelect casesSelect
    (35) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    CASE            shift and go to state 100

    casesSelect                    shift and go to state 98
    caseSelect                     shift and go to state 99

state 57

    (20) declaracion -> varAssign tipoDato .
    (19) asignacion -> varAssign tipoDato . ASSIGN asignable

    FUNC            reduce using rule 20 (declaracion -> varAssign tipoDato .)
    SWITCH          reduce using rule 20 (declaracion -> varAssign tipoDato .)
    FOR             reduce using rule 20 (declaracion -> varAssign tipoDato .)
    SELECT          reduce using rule 20 (declaracion -> varAssign tipoDato .)
    VARIABLE        reduce using rule 20 (declaracion -> varAssign tipoDato .)
    FMT             reduce using rule 20 (declaracion -> varAssign tipoDato .)
    VAR             reduce using rule 20 (declaracion -> varAssign tipoDato .)
    INTEGER         reduce using rule 20 (declaracion -> varAssign tipoDato .)
    FLOAT           reduce using rule 20 (declaracion -> varAssign tipoDato .)
    $end            reduce using rule 20 (declaracion -> varAssign tipoDato .)
    LOCKR           reduce using rule 20 (declaracion -> varAssign tipoDato .)
    CASE            reduce using rule 20 (declaracion -> varAssign tipoDato .)
    ASSIGN          shift and go to state 101


state 58

    (17) asignacion -> varAssign ASSIGN . asignable
    (21) asignable -> . valor
    (22) asignable -> . expresionMatematica
    (23) asignable -> . condicion
    (93) valor -> . STRING
    (94) valor -> . factor
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    asignable                      shift and go to state 102
    valor                          shift and go to state 52
    expresionMatematica            shift and go to state 53
    condicion                      shift and go to state 54
    factor                         shift and go to state 55
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    numero                         shift and go to state 33

state 59

    (69) tipoDato -> INTTYPE .

    ASSIGN          reduce using rule 69 (tipoDato -> INTTYPE .)
    FUNC            reduce using rule 69 (tipoDato -> INTTYPE .)
    SWITCH          reduce using rule 69 (tipoDato -> INTTYPE .)
    FOR             reduce using rule 69 (tipoDato -> INTTYPE .)
    SELECT          reduce using rule 69 (tipoDato -> INTTYPE .)
    VARIABLE        reduce using rule 69 (tipoDato -> INTTYPE .)
    FMT             reduce using rule 69 (tipoDato -> INTTYPE .)
    VAR             reduce using rule 69 (tipoDato -> INTTYPE .)
    INTEGER         reduce using rule 69 (tipoDato -> INTTYPE .)
    FLOAT           reduce using rule 69 (tipoDato -> INTTYPE .)
    $end            reduce using rule 69 (tipoDato -> INTTYPE .)
    LOCKR           reduce using rule 69 (tipoDato -> INTTYPE .)
    CASE            reduce using rule 69 (tipoDato -> INTTYPE .)
    BRACKETR        reduce using rule 69 (tipoDato -> INTTYPE .)
    LOCKL           reduce using rule 69 (tipoDato -> INTTYPE .)


state 60

    (70) tipoDato -> FLOATTYPE .

    ASSIGN          reduce using rule 70 (tipoDato -> FLOATTYPE .)
    FUNC            reduce using rule 70 (tipoDato -> FLOATTYPE .)
    SWITCH          reduce using rule 70 (tipoDato -> FLOATTYPE .)
    FOR             reduce using rule 70 (tipoDato -> FLOATTYPE .)
    SELECT          reduce using rule 70 (tipoDato -> FLOATTYPE .)
    VARIABLE        reduce using rule 70 (tipoDato -> FLOATTYPE .)
    FMT             reduce using rule 70 (tipoDato -> FLOATTYPE .)
    VAR             reduce using rule 70 (tipoDato -> FLOATTYPE .)
    INTEGER         reduce using rule 70 (tipoDato -> FLOATTYPE .)
    FLOAT           reduce using rule 70 (tipoDato -> FLOATTYPE .)
    $end            reduce using rule 70 (tipoDato -> FLOATTYPE .)
    LOCKR           reduce using rule 70 (tipoDato -> FLOATTYPE .)
    CASE            reduce using rule 70 (tipoDato -> FLOATTYPE .)
    BRACKETR        reduce using rule 70 (tipoDato -> FLOATTYPE .)
    LOCKL           reduce using rule 70 (tipoDato -> FLOATTYPE .)


state 61

    (71) tipoDato -> BOOLEANTYPE .

    ASSIGN          reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    FUNC            reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    SWITCH          reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    FOR             reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    SELECT          reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    VARIABLE        reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    FMT             reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    VAR             reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    INTEGER         reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    FLOAT           reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    $end            reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    LOCKR           reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    CASE            reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    BRACKETR        reduce using rule 71 (tipoDato -> BOOLEANTYPE .)
    LOCKL           reduce using rule 71 (tipoDato -> BOOLEANTYPE .)


state 62

    (80) expresionMatematica -> factor operadorMatematico . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    factor                         shift and go to state 103
    numero                         shift and go to state 33

state 63

    (86) operadorMatematico -> PLUS .

    VARIABLE        reduce using rule 86 (operadorMatematico -> PLUS .)
    FLOAT           reduce using rule 86 (operadorMatematico -> PLUS .)
    INTEGER         reduce using rule 86 (operadorMatematico -> PLUS .)


state 64

    (87) operadorMatematico -> MINUS .

    VARIABLE        reduce using rule 87 (operadorMatematico -> MINUS .)
    FLOAT           reduce using rule 87 (operadorMatematico -> MINUS .)
    INTEGER         reduce using rule 87 (operadorMatematico -> MINUS .)


state 65

    (88) operadorMatematico -> TIMES .

    VARIABLE        reduce using rule 88 (operadorMatematico -> TIMES .)
    FLOAT           reduce using rule 88 (operadorMatematico -> TIMES .)
    INTEGER         reduce using rule 88 (operadorMatematico -> TIMES .)


state 66

    (89) operadorMatematico -> DIVIDE .

    VARIABLE        reduce using rule 89 (operadorMatematico -> DIVIDE .)
    FLOAT           reduce using rule 89 (operadorMatematico -> DIVIDE .)
    INTEGER         reduce using rule 89 (operadorMatematico -> DIVIDE .)


state 67

    (90) operadorMatematico -> MODULE .

    VARIABLE        reduce using rule 90 (operadorMatematico -> MODULE .)
    FLOAT           reduce using rule 90 (operadorMatematico -> MODULE .)
    INTEGER         reduce using rule 90 (operadorMatematico -> MODULE .)


state 68

    (39) impresionSencilla -> tipoImpresion BRACKETL . valores BRACKETR
    (91) valores -> . valor
    (92) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    valores                        shift and go to state 104
    valor                          shift and go to state 105
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 69

    (42) impresionBufio -> FMT DOT . FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> FMT DOT . PRINTF BRACKETL STRING COMA valores BRACKETR
    (45) lecturaScanf -> FMT DOT . SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> FMT DOT . SSCANF BRACKETL opcionesLectura BRACKETR
    (40) tipoImpresion -> FMT DOT . PRINT
    (41) tipoImpresion -> FMT DOT . PRINTLN

    FPRINT          shift and go to state 106
    PRINTF          shift and go to state 107
    SCANF           shift and go to state 108
    SSCANF          shift and go to state 109
    PRINT           shift and go to state 110
    PRINTLN         shift and go to state 111


state 70

    (57) varAssign -> VAR VARIABLE .

    ASSIGN          reduce using rule 57 (varAssign -> VAR VARIABLE .)
    INTTYPE         reduce using rule 57 (varAssign -> VAR VARIABLE .)
    FLOATTYPE       reduce using rule 57 (varAssign -> VAR VARIABLE .)
    BOOLEANTYPE     reduce using rule 57 (varAssign -> VAR VARIABLE .)


state 71

    (81) expresionSuma -> INTEGER PLUS . INTEGER

    INTEGER         shift and go to state 112


state 72

    (82) expresionResta -> INTEGER MINUS . INTEGER

    INTEGER         shift and go to state 113


state 73

    (83) expresionMultiplicacion -> INTEGER TIMES . INTEGER

    INTEGER         shift and go to state 114


state 74

    (84) expresionDivision -> INTEGER DIVIDE . INTEGER

    INTEGER         shift and go to state 115


state 75

    (85) expresionModulo -> INTEGER MODULE . INTEGER

    INTEGER         shift and go to state 116


state 76

    (24) funcion -> FUNC VARIABLE BRACKETL . VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR

    VARIABLE        shift and go to state 117


state 77

    (95) factor -> VARIABLE .

    PLUS            reduce using rule 95 (factor -> VARIABLE .)
    MINUS           reduce using rule 95 (factor -> VARIABLE .)
    TIMES           reduce using rule 95 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 95 (factor -> VARIABLE .)
    MODULE          reduce using rule 95 (factor -> VARIABLE .)
    EQUAL           reduce using rule 95 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 95 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    AND             reduce using rule 95 (factor -> VARIABLE .)
    OR              reduce using rule 95 (factor -> VARIABLE .)
    NOT             reduce using rule 95 (factor -> VARIABLE .)
    FUNC            reduce using rule 95 (factor -> VARIABLE .)
    SWITCH          reduce using rule 95 (factor -> VARIABLE .)
    FOR             reduce using rule 95 (factor -> VARIABLE .)
    SELECT          reduce using rule 95 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 95 (factor -> VARIABLE .)
    FMT             reduce using rule 95 (factor -> VARIABLE .)
    VAR             reduce using rule 95 (factor -> VARIABLE .)
    INTEGER         reduce using rule 95 (factor -> VARIABLE .)
    FLOAT           reduce using rule 95 (factor -> VARIABLE .)
    $end            reduce using rule 95 (factor -> VARIABLE .)
    LOCKR           reduce using rule 95 (factor -> VARIABLE .)
    CASE            reduce using rule 95 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 95 (factor -> VARIABLE .)
    COMA            reduce using rule 95 (factor -> VARIABLE .)
    BRACKETR        reduce using rule 95 (factor -> VARIABLE .)
    LOCKL           reduce using rule 95 (factor -> VARIABLE .)
    COLON           reduce using rule 95 (factor -> VARIABLE .)


state 78

    (18) asignacion -> VARIABLE ASSIGN asignable .

    FUNC            reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    SWITCH          reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    FOR             reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    SELECT          reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    VARIABLE        reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    FMT             reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    VAR             reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    INTEGER         reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    FLOAT           reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    $end            reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    LOCKR           reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    CASE            reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)
    SEMICOLON       reduce using rule 18 (asignacion -> VARIABLE ASSIGN asignable .)


state 79

    (27) estructuraControl -> SWITCH VARIABLE LOCKL . cases LOCKR
    (36) cases -> . case
    (37) cases -> . case cases
    (38) case -> . CASE condicionCase COLON main

    CASE            shift and go to state 120

    cases                          shift and go to state 118
    case                           shift and go to state 119

state 80

    (28) estructuraControl -> FOR condicion LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    main                           shift and go to state 121
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 14
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 81

    (29) estructuraControl -> FOR asignacion SEMICOLON . condicion SEMICOLON iterador LOCKL main LOCKR
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    condicion                      shift and go to state 122
    valor                          shift and go to state 44
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 82

    (30) estructuraControl -> FOR VARIABLE COMA . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (56) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 123

    varShortAssign                 shift and go to state 124

state 83

    (31) estructuraControl -> FOR varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 125


state 84

    (61) condicion -> valor operadorComparacion . valor
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    valor                          shift and go to state 126
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 85

    (62) condicion -> valor operadorLogico . valor
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    valor                          shift and go to state 127
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 86

    (63) operadorComparacion -> EQUAL .

    STRING          reduce using rule 63 (operadorComparacion -> EQUAL .)
    VARIABLE        reduce using rule 63 (operadorComparacion -> EQUAL .)
    FLOAT           reduce using rule 63 (operadorComparacion -> EQUAL .)
    INTEGER         reduce using rule 63 (operadorComparacion -> EQUAL .)


state 87

    (64) operadorComparacion -> UNEQUAL .

    STRING          reduce using rule 64 (operadorComparacion -> UNEQUAL .)
    VARIABLE        reduce using rule 64 (operadorComparacion -> UNEQUAL .)
    FLOAT           reduce using rule 64 (operadorComparacion -> UNEQUAL .)
    INTEGER         reduce using rule 64 (operadorComparacion -> UNEQUAL .)


state 88

    (65) operadorComparacion -> GREATERTHAN .

    STRING          reduce using rule 65 (operadorComparacion -> GREATERTHAN .)
    VARIABLE        reduce using rule 65 (operadorComparacion -> GREATERTHAN .)
    FLOAT           reduce using rule 65 (operadorComparacion -> GREATERTHAN .)
    INTEGER         reduce using rule 65 (operadorComparacion -> GREATERTHAN .)


state 89

    (66) operadorComparacion -> SMALLERTHAN .

    STRING          reduce using rule 66 (operadorComparacion -> SMALLERTHAN .)
    VARIABLE        reduce using rule 66 (operadorComparacion -> SMALLERTHAN .)
    FLOAT           reduce using rule 66 (operadorComparacion -> SMALLERTHAN .)
    INTEGER         reduce using rule 66 (operadorComparacion -> SMALLERTHAN .)


state 90

    (67) operadorComparacion -> GREATEROREQUALTHAN .

    STRING          reduce using rule 67 (operadorComparacion -> GREATEROREQUALTHAN .)
    VARIABLE        reduce using rule 67 (operadorComparacion -> GREATEROREQUALTHAN .)
    FLOAT           reduce using rule 67 (operadorComparacion -> GREATEROREQUALTHAN .)
    INTEGER         reduce using rule 67 (operadorComparacion -> GREATEROREQUALTHAN .)


state 91

    (68) operadorComparacion -> SMALLEROREQUALTHAN .

    STRING          reduce using rule 68 (operadorComparacion -> SMALLEROREQUALTHAN .)
    VARIABLE        reduce using rule 68 (operadorComparacion -> SMALLEROREQUALTHAN .)
    FLOAT           reduce using rule 68 (operadorComparacion -> SMALLEROREQUALTHAN .)
    INTEGER         reduce using rule 68 (operadorComparacion -> SMALLEROREQUALTHAN .)


state 92

    (72) operadorLogico -> AND .

    STRING          reduce using rule 72 (operadorLogico -> AND .)
    VARIABLE        reduce using rule 72 (operadorLogico -> AND .)
    FLOAT           reduce using rule 72 (operadorLogico -> AND .)
    INTEGER         reduce using rule 72 (operadorLogico -> AND .)


state 93

    (73) operadorLogico -> OR .

    STRING          reduce using rule 73 (operadorLogico -> OR .)
    VARIABLE        reduce using rule 73 (operadorLogico -> OR .)
    FLOAT           reduce using rule 73 (operadorLogico -> OR .)
    INTEGER         reduce using rule 73 (operadorLogico -> OR .)


state 94

    (74) operadorLogico -> NOT .

    STRING          reduce using rule 74 (operadorLogico -> NOT .)
    VARIABLE        reduce using rule 74 (operadorLogico -> NOT .)
    FLOAT           reduce using rule 74 (operadorLogico -> NOT .)
    INTEGER         reduce using rule 74 (operadorLogico -> NOT .)


state 95

    (19) asignacion -> varAssign tipoDato . ASSIGN asignable

    ASSIGN          shift and go to state 101


state 96

    (54) declaracion -> varShortAssign BUFIO DOT . NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> varShortAssign BUFIO DOT . NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    NEWREADER       shift and go to state 128
    NEWWRITER       shift and go to state 129


state 97

    (44) lecturaReader -> varShortAssign VARIABLE DOT . READSTRING BRACKETL STRING BRACKETR

    READSTRING      shift and go to state 130


state 98

    (32) estructuraControl -> SELECT LOCKL casesSelect . LOCKR

    LOCKR           shift and go to state 131


state 99

    (33) casesSelect -> caseSelect .
    (34) casesSelect -> caseSelect . casesSelect
    (33) casesSelect -> . caseSelect
    (34) casesSelect -> . caseSelect casesSelect
    (35) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    LOCKR           reduce using rule 33 (casesSelect -> caseSelect .)
    CASE            shift and go to state 100

    caseSelect                     shift and go to state 99
    casesSelect                    shift and go to state 132

state 100

    (35) caseSelect -> CASE . varShortAssign SMALLERTHAN MINUS COLON main
    (56) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 123

    varShortAssign                 shift and go to state 133

state 101

    (19) asignacion -> varAssign tipoDato ASSIGN . asignable
    (21) asignable -> . valor
    (22) asignable -> . expresionMatematica
    (23) asignable -> . condicion
    (93) valor -> . STRING
    (94) valor -> . factor
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    asignable                      shift and go to state 134
    valor                          shift and go to state 52
    expresionMatematica            shift and go to state 53
    condicion                      shift and go to state 54
    factor                         shift and go to state 55
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    numero                         shift and go to state 33

state 102

    (17) asignacion -> varAssign ASSIGN asignable .

    FUNC            reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    SWITCH          reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    FOR             reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    SELECT          reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    VARIABLE        reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    FMT             reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    VAR             reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    INTEGER         reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    FLOAT           reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    $end            reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    LOCKR           reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    CASE            reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)
    SEMICOLON       reduce using rule 17 (asignacion -> varAssign ASSIGN asignable .)


state 103

    (80) expresionMatematica -> factor operadorMatematico factor .

    FUNC            reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    SWITCH          reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    FOR             reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    SELECT          reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    VARIABLE        reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    FMT             reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    VAR             reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    INTEGER         reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    FLOAT           reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    $end            reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    LOCKR           reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    CASE            reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)
    SEMICOLON       reduce using rule 80 (expresionMatematica -> factor operadorMatematico factor .)


state 104

    (39) impresionSencilla -> tipoImpresion BRACKETL valores . BRACKETR

    BRACKETR        shift and go to state 135


state 105

    (91) valores -> valor .
    (92) valores -> valor . COMA valores

    BRACKETR        reduce using rule 91 (valores -> valor .)
    COMA            shift and go to state 136


state 106

    (42) impresionBufio -> FMT DOT FPRINT . BRACKETL VARIABLE COMA STRING BRACKETR

    BRACKETL        shift and go to state 137


state 107

    (43) impresionFormato -> FMT DOT PRINTF . BRACKETL STRING COMA valores BRACKETR

    BRACKETL        shift and go to state 138


state 108

    (45) lecturaScanf -> FMT DOT SCANF . BRACKETL STRING opcionLectura BRACKETR

    BRACKETL        shift and go to state 139


state 109

    (49) lecturaSscanf -> FMT DOT SSCANF . BRACKETL opcionesLectura BRACKETR

    BRACKETL        shift and go to state 140


state 110

    (40) tipoImpresion -> FMT DOT PRINT .

    BRACKETL        reduce using rule 40 (tipoImpresion -> FMT DOT PRINT .)


state 111

    (41) tipoImpresion -> FMT DOT PRINTLN .

    BRACKETL        reduce using rule 41 (tipoImpresion -> FMT DOT PRINTLN .)


state 112

    (81) expresionSuma -> INTEGER PLUS INTEGER .

    FUNC            reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    SWITCH          reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    FOR             reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    SELECT          reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    VARIABLE        reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    FMT             reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    VAR             reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    INTEGER         reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    FLOAT           reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    $end            reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    LOCKR           reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    CASE            reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)
    SEMICOLON       reduce using rule 81 (expresionSuma -> INTEGER PLUS INTEGER .)


state 113

    (82) expresionResta -> INTEGER MINUS INTEGER .

    FUNC            reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    SWITCH          reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    FOR             reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    SELECT          reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    VARIABLE        reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    FMT             reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    VAR             reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    INTEGER         reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    FLOAT           reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    $end            reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    LOCKR           reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    CASE            reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)
    SEMICOLON       reduce using rule 82 (expresionResta -> INTEGER MINUS INTEGER .)


state 114

    (83) expresionMultiplicacion -> INTEGER TIMES INTEGER .

    FUNC            reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SWITCH          reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FOR             reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SELECT          reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    VARIABLE        reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FMT             reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    VAR             reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    INTEGER         reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FLOAT           reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    $end            reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    LOCKR           reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    CASE            reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SEMICOLON       reduce using rule 83 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)


state 115

    (84) expresionDivision -> INTEGER DIVIDE INTEGER .

    FUNC            reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SWITCH          reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FOR             reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SELECT          reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    VARIABLE        reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FMT             reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    VAR             reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    INTEGER         reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FLOAT           reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    $end            reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    LOCKR           reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    CASE            reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SEMICOLON       reduce using rule 84 (expresionDivision -> INTEGER DIVIDE INTEGER .)


state 116

    (85) expresionModulo -> INTEGER MODULE INTEGER .

    FUNC            reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    SWITCH          reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    FOR             reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    SELECT          reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    VARIABLE        reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    FMT             reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    VAR             reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    INTEGER         reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    FLOAT           reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    $end            reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    LOCKR           reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    CASE            reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)
    SEMICOLON       reduce using rule 85 (expresionModulo -> INTEGER MODULE INTEGER .)


state 117

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE . tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (69) tipoDato -> . INTTYPE
    (70) tipoDato -> . FLOATTYPE
    (71) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 59
    FLOATTYPE       shift and go to state 60
    BOOLEANTYPE     shift and go to state 61

    tipoDato                       shift and go to state 141

state 118

    (27) estructuraControl -> SWITCH VARIABLE LOCKL cases . LOCKR

    LOCKR           shift and go to state 142


state 119

    (36) cases -> case .
    (37) cases -> case . cases
    (36) cases -> . case
    (37) cases -> . case cases
    (38) case -> . CASE condicionCase COLON main

    LOCKR           reduce using rule 36 (cases -> case .)
    CASE            shift and go to state 120

    case                           shift and go to state 119
    cases                          shift and go to state 143

state 120

    (38) case -> CASE . condicionCase COLON main
    (58) condicionCase -> . INTEGER
    (59) condicionCase -> . VARIABLE
    (60) condicionCase -> . condicion
    (61) condicion -> . valor operadorComparacion valor
    (62) condicion -> . valor operadorLogico valor
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    INTEGER         shift and go to state 145
    VARIABLE        shift and go to state 146
    STRING          shift and go to state 46
    FLOAT           shift and go to state 34

    condicionCase                  shift and go to state 144
    condicion                      shift and go to state 147
    valor                          shift and go to state 44
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 121

    (28) estructuraControl -> FOR condicion LOCKL main . LOCKR

    LOCKR           shift and go to state 148


state 122

    (29) estructuraControl -> FOR asignacion SEMICOLON condicion . SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 149


state 123

    (56) varShortAssign -> VARIABLE . SHORTASSIGN

    SHORTASSIGN     shift and go to state 38


state 124

    (30) estructuraControl -> FOR VARIABLE COMA varShortAssign . RANGE VARIABLE LOCKL main LOCKR

    RANGE           shift and go to state 150


state 125

    (31) estructuraControl -> FOR varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 151


state 126

    (61) condicion -> valor operadorComparacion valor .

    LOCKL           reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    FUNC            reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    SWITCH          reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    FOR             reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    SELECT          reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    VARIABLE        reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    FMT             reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    VAR             reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    INTEGER         reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    FLOAT           reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    $end            reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    LOCKR           reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    CASE            reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    SEMICOLON       reduce using rule 61 (condicion -> valor operadorComparacion valor .)
    COLON           reduce using rule 61 (condicion -> valor operadorComparacion valor .)


state 127

    (62) condicion -> valor operadorLogico valor .

    LOCKL           reduce using rule 62 (condicion -> valor operadorLogico valor .)
    FUNC            reduce using rule 62 (condicion -> valor operadorLogico valor .)
    SWITCH          reduce using rule 62 (condicion -> valor operadorLogico valor .)
    FOR             reduce using rule 62 (condicion -> valor operadorLogico valor .)
    SELECT          reduce using rule 62 (condicion -> valor operadorLogico valor .)
    VARIABLE        reduce using rule 62 (condicion -> valor operadorLogico valor .)
    FMT             reduce using rule 62 (condicion -> valor operadorLogico valor .)
    VAR             reduce using rule 62 (condicion -> valor operadorLogico valor .)
    INTEGER         reduce using rule 62 (condicion -> valor operadorLogico valor .)
    FLOAT           reduce using rule 62 (condicion -> valor operadorLogico valor .)
    $end            reduce using rule 62 (condicion -> valor operadorLogico valor .)
    LOCKR           reduce using rule 62 (condicion -> valor operadorLogico valor .)
    CASE            reduce using rule 62 (condicion -> valor operadorLogico valor .)
    SEMICOLON       reduce using rule 62 (condicion -> valor operadorLogico valor .)
    COLON           reduce using rule 62 (condicion -> valor operadorLogico valor .)


state 128

    (54) declaracion -> varShortAssign BUFIO DOT NEWREADER . BRACKETL OS DOT STDIN BRACKETR

    BRACKETL        shift and go to state 152


state 129

    (55) declaracion -> varShortAssign BUFIO DOT NEWWRITER . BRACKETL OS DOT STDOUT BRACKETR

    BRACKETL        shift and go to state 153


state 130

    (44) lecturaReader -> varShortAssign VARIABLE DOT READSTRING . BRACKETL STRING BRACKETR

    BRACKETL        shift and go to state 154


state 131

    (32) estructuraControl -> SELECT LOCKL casesSelect LOCKR .

    FUNC            reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SWITCH          reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FOR             reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SELECT          reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VARIABLE        reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FMT             reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VAR             reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    INTEGER         reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FLOAT           reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    $end            reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    LOCKR           reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    CASE            reduce using rule 32 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)


state 132

    (34) casesSelect -> caseSelect casesSelect .

    LOCKR           reduce using rule 34 (casesSelect -> caseSelect casesSelect .)


state 133

    (35) caseSelect -> CASE varShortAssign . SMALLERTHAN MINUS COLON main

    SMALLERTHAN     shift and go to state 155


state 134

    (19) asignacion -> varAssign tipoDato ASSIGN asignable .

    FUNC            reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SWITCH          reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FOR             reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SELECT          reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VARIABLE        reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FMT             reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VAR             reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    INTEGER         reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FLOAT           reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    $end            reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    LOCKR           reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    CASE            reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SEMICOLON       reduce using rule 19 (asignacion -> varAssign tipoDato ASSIGN asignable .)


state 135

    (39) impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .

    FUNC            reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SWITCH          reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FOR             reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SELECT          reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VARIABLE        reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FMT             reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VAR             reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    INTEGER         reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FLOAT           reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    $end            reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    LOCKR           reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    CASE            reduce using rule 39 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)


state 136

    (92) valores -> valor COMA . valores
    (91) valores -> . valor
    (92) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    valor                          shift and go to state 105
    valores                        shift and go to state 156
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 137

    (42) impresionBufio -> FMT DOT FPRINT BRACKETL . VARIABLE COMA STRING BRACKETR

    VARIABLE        shift and go to state 157


state 138

    (43) impresionFormato -> FMT DOT PRINTF BRACKETL . STRING COMA valores BRACKETR

    STRING          shift and go to state 158


state 139

    (45) lecturaScanf -> FMT DOT SCANF BRACKETL . STRING opcionLectura BRACKETR

    STRING          shift and go to state 159


state 140

    (49) lecturaSscanf -> FMT DOT SSCANF BRACKETL . opcionesLectura BRACKETR
    (50) opcionesLectura -> . opciones
    (51) opcionesLectura -> . opciones COMA opcionesLectura
    (52) opciones -> . STRING
    (53) opciones -> . ampersand
    (48) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 162
    AMPERSON        shift and go to state 164

    opcionesLectura                shift and go to state 160
    opciones                       shift and go to state 161
    ampersand                      shift and go to state 163

state 141

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato . BRACKETR tipoDato LOCKL cuerpo LOCKR

    BRACKETR        shift and go to state 165


state 142

    (27) estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .

    FUNC            reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SWITCH          reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FOR             reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SELECT          reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VARIABLE        reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FMT             reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VAR             reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    INTEGER         reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FLOAT           reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    $end            reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    LOCKR           reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    CASE            reduce using rule 27 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)


state 143

    (37) cases -> case cases .

    LOCKR           reduce using rule 37 (cases -> case cases .)


state 144

    (38) case -> CASE condicionCase . COLON main

    COLON           shift and go to state 166


state 145

    (58) condicionCase -> INTEGER .
    (98) numero -> INTEGER .

    COLON           reduce using rule 58 (condicionCase -> INTEGER .)
    EQUAL           reduce using rule 98 (numero -> INTEGER .)
    UNEQUAL         reduce using rule 98 (numero -> INTEGER .)
    GREATERTHAN     reduce using rule 98 (numero -> INTEGER .)
    SMALLERTHAN     reduce using rule 98 (numero -> INTEGER .)
    GREATEROREQUALTHAN reduce using rule 98 (numero -> INTEGER .)
    SMALLEROREQUALTHAN reduce using rule 98 (numero -> INTEGER .)
    AND             reduce using rule 98 (numero -> INTEGER .)
    OR              reduce using rule 98 (numero -> INTEGER .)
    NOT             reduce using rule 98 (numero -> INTEGER .)


state 146

    (59) condicionCase -> VARIABLE .
    (95) factor -> VARIABLE .

    COLON           reduce using rule 59 (condicionCase -> VARIABLE .)
    EQUAL           reduce using rule 95 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 95 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 95 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 95 (factor -> VARIABLE .)
    AND             reduce using rule 95 (factor -> VARIABLE .)
    OR              reduce using rule 95 (factor -> VARIABLE .)
    NOT             reduce using rule 95 (factor -> VARIABLE .)


state 147

    (60) condicionCase -> condicion .

    COLON           reduce using rule 60 (condicionCase -> condicion .)


state 148

    (28) estructuraControl -> FOR condicion LOCKL main LOCKR .

    FUNC            reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SWITCH          reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FOR             reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SELECT          reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VARIABLE        reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FMT             reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VAR             reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    INTEGER         reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FLOAT           reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    $end            reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    LOCKR           reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    CASE            reduce using rule 28 (estructuraControl -> FOR condicion LOCKL main LOCKR .)


state 149

    (29) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON . iterador LOCKL main LOCKR
    (99) iterador -> . VARIABLE INCREMENT
    (100) iterador -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 168

    iterador                       shift and go to state 167

state 150

    (30) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 169


state 151

    (31) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    varShortAssign                 shift and go to state 14
    main                           shift and go to state 170
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 152

    (54) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL . OS DOT STDIN BRACKETR

    OS              shift and go to state 171


state 153

    (55) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL . OS DOT STDOUT BRACKETR

    OS              shift and go to state 172


state 154

    (44) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL . STRING BRACKETR

    STRING          shift and go to state 173


state 155

    (35) caseSelect -> CASE varShortAssign SMALLERTHAN . MINUS COLON main

    MINUS           shift and go to state 174


state 156

    (92) valores -> valor COMA valores .

    BRACKETR        reduce using rule 92 (valores -> valor COMA valores .)


state 157

    (42) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE . COMA STRING BRACKETR

    COMA            shift and go to state 175


state 158

    (43) impresionFormato -> FMT DOT PRINTF BRACKETL STRING . COMA valores BRACKETR

    COMA            shift and go to state 176


state 159

    (45) lecturaScanf -> FMT DOT SCANF BRACKETL STRING . opcionLectura BRACKETR
    (46) opcionLectura -> . COMA opciones
    (47) opcionLectura -> . COMA opciones opcionLectura

    COMA            shift and go to state 178

    opcionLectura                  shift and go to state 177

state 160

    (49) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura . BRACKETR

    BRACKETR        shift and go to state 179


state 161

    (50) opcionesLectura -> opciones .
    (51) opcionesLectura -> opciones . COMA opcionesLectura

    BRACKETR        reduce using rule 50 (opcionesLectura -> opciones .)
    COMA            shift and go to state 180


state 162

    (52) opciones -> STRING .

    COMA            reduce using rule 52 (opciones -> STRING .)
    BRACKETR        reduce using rule 52 (opciones -> STRING .)


state 163

    (53) opciones -> ampersand .

    COMA            reduce using rule 53 (opciones -> ampersand .)
    BRACKETR        reduce using rule 53 (opciones -> ampersand .)


state 164

    (48) ampersand -> AMPERSON . VARIABLE

    VARIABLE        shift and go to state 181


state 165

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR . tipoDato LOCKL cuerpo LOCKR
    (69) tipoDato -> . INTTYPE
    (70) tipoDato -> . FLOATTYPE
    (71) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 59
    FLOATTYPE       shift and go to state 60
    BOOLEANTYPE     shift and go to state 61

    tipoDato                       shift and go to state 182

state 166

    (38) case -> CASE condicionCase COLON . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    main                           shift and go to state 183
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 14
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 167

    (29) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador . LOCKL main LOCKR

    LOCKL           shift and go to state 184


state 168

    (99) iterador -> VARIABLE . INCREMENT
    (100) iterador -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 185
    DECREMENT       shift and go to state 186


state 169

    (30) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 187


state 170

    (31) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 188


state 171

    (54) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS . DOT STDIN BRACKETR

    DOT             shift and go to state 189


state 172

    (55) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS . DOT STDOUT BRACKETR

    DOT             shift and go to state 190


state 173

    (44) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING . BRACKETR

    BRACKETR        shift and go to state 191


state 174

    (35) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS . COLON main

    COLON           shift and go to state 192


state 175

    (42) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA . STRING BRACKETR

    STRING          shift and go to state 193


state 176

    (43) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA . valores BRACKETR
    (91) valores -> . valor
    (92) valores -> . valor COMA valores
    (93) valor -> . STRING
    (94) valor -> . factor
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 77
    FLOAT           shift and go to state 34
    INTEGER         shift and go to state 48

    valores                        shift and go to state 194
    valor                          shift and go to state 105
    factor                         shift and go to state 47
    numero                         shift and go to state 33

state 177

    (45) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura . BRACKETR

    BRACKETR        shift and go to state 195


state 178

    (46) opcionLectura -> COMA . opciones
    (47) opcionLectura -> COMA . opciones opcionLectura
    (52) opciones -> . STRING
    (53) opciones -> . ampersand
    (48) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 162
    AMPERSON        shift and go to state 164

    opciones                       shift and go to state 196
    ampersand                      shift and go to state 163

state 179

    (49) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .

    FUNC            reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SWITCH          reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FOR             reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SELECT          reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VARIABLE        reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FMT             reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VAR             reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    INTEGER         reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FLOAT           reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    $end            reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    LOCKR           reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    CASE            reduce using rule 49 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)


state 180

    (51) opcionesLectura -> opciones COMA . opcionesLectura
    (50) opcionesLectura -> . opciones
    (51) opcionesLectura -> . opciones COMA opcionesLectura
    (52) opciones -> . STRING
    (53) opciones -> . ampersand
    (48) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 162
    AMPERSON        shift and go to state 164

    opciones                       shift and go to state 161
    opcionesLectura                shift and go to state 197
    ampersand                      shift and go to state 163

state 181

    (48) ampersand -> AMPERSON VARIABLE .

    COMA            reduce using rule 48 (ampersand -> AMPERSON VARIABLE .)
    BRACKETR        reduce using rule 48 (ampersand -> AMPERSON VARIABLE .)


state 182

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato . LOCKL cuerpo LOCKR

    LOCKL           shift and go to state 198


state 183

    (38) case -> CASE condicionCase COLON main .

    CASE            reduce using rule 38 (case -> CASE condicionCase COLON main .)
    LOCKR           reduce using rule 38 (case -> CASE condicionCase COLON main .)


state 184

    (29) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    asignacion                     shift and go to state 7
    main                           shift and go to state 199
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 14
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 185

    (99) iterador -> VARIABLE INCREMENT .

    LOCKL           reduce using rule 99 (iterador -> VARIABLE INCREMENT .)


state 186

    (100) iterador -> VARIABLE DECREMENT .

    LOCKL           reduce using rule 100 (iterador -> VARIABLE DECREMENT .)


state 187

    (30) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    varShortAssign                 shift and go to state 14
    main                           shift and go to state 200
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 188

    (31) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    INTEGER         reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FLOAT           reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 31 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 189

    (54) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT . STDIN BRACKETR

    STDIN           shift and go to state 201


state 190

    (55) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT . STDOUT BRACKETR

    STDOUT          shift and go to state 202


state 191

    (44) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .

    FUNC            reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SWITCH          reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FOR             reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SELECT          reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VARIABLE        reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FMT             reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VAR             reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    INTEGER         reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FLOAT           reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    $end            reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    LOCKR           reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    CASE            reduce using rule 44 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)


state 192

    (35) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON . main
    (1) main -> . ejecutable
    (2) main -> . ejecutable main
    (3) main -> . funcion
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (24) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    FUNC            shift and go to state 10
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    varShortAssign                 shift and go to state 14
    main                           shift and go to state 203
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 193

    (42) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING . BRACKETR

    BRACKETR        shift and go to state 204


state 194

    (43) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores . BRACKETR

    BRACKETR        shift and go to state 205


state 195

    (45) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .

    FUNC            reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SWITCH          reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FOR             reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SELECT          reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VARIABLE        reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FMT             reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VAR             reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    INTEGER         reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FLOAT           reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    $end            reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    LOCKR           reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    CASE            reduce using rule 45 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)


state 196

    (46) opcionLectura -> COMA opciones .
    (47) opcionLectura -> COMA opciones . opcionLectura
    (46) opcionLectura -> . COMA opciones
    (47) opcionLectura -> . COMA opciones opcionLectura

    BRACKETR        reduce using rule 46 (opcionLectura -> COMA opciones .)
    COMA            shift and go to state 178

    opcionLectura                  shift and go to state 206

state 197

    (51) opcionesLectura -> opciones COMA opcionesLectura .

    BRACKETR        reduce using rule 51 (opcionesLectura -> opciones COMA opcionesLectura .)


state 198

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL . cuerpo LOCKR
    (25) cuerpo -> . ejecutable
    (26) cuerpo -> . RETURN VARIABLE
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . impresion
    (6) ejecutable -> . declaracion
    (7) ejecutable -> . asignacion
    (8) ejecutable -> . lectura
    (9) ejecutable -> . expresionMatematica
    (27) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (28) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (29) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (30) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (31) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (32) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (10) impresion -> . impresionSencilla
    (11) impresion -> . impresionBufio
    (12) impresion -> . impresionFormato
    (20) declaracion -> . varAssign tipoDato
    (54) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (55) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (16) asignacion -> . varShortAssign asignable
    (17) asignacion -> . varAssign ASSIGN asignable
    (18) asignacion -> . VARIABLE ASSIGN asignable
    (19) asignacion -> . varAssign tipoDato ASSIGN asignable
    (13) lectura -> . lecturaReader
    (14) lectura -> . lecturaScanf
    (15) lectura -> . lecturaSscanf
    (75) expresionMatematica -> . expresionSuma
    (76) expresionMatematica -> . expresionResta
    (77) expresionMatematica -> . expresionMultiplicacion
    (78) expresionMatematica -> . expresionDivision
    (79) expresionMatematica -> . expresionModulo
    (80) expresionMatematica -> . factor operadorMatematico factor
    (39) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (42) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (43) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (57) varAssign -> . VAR VARIABLE
    (56) varShortAssign -> . VARIABLE SHORTASSIGN
    (44) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (45) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (49) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (81) expresionSuma -> . INTEGER PLUS INTEGER
    (82) expresionResta -> . INTEGER MINUS INTEGER
    (83) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (84) expresionDivision -> . INTEGER DIVIDE INTEGER
    (85) expresionModulo -> . INTEGER MODULE INTEGER
    (95) factor -> . VARIABLE
    (96) factor -> . numero
    (40) tipoImpresion -> . FMT DOT PRINT
    (41) tipoImpresion -> . FMT DOT PRINTLN
    (97) numero -> . FLOAT
    (98) numero -> . INTEGER

    RETURN          shift and go to state 209
    SWITCH          shift and go to state 12
    FOR             shift and go to state 13
    SELECT          shift and go to state 15
    VARIABLE        shift and go to state 11
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    INTEGER         shift and go to state 32
    FLOAT           shift and go to state 34

    cuerpo                         shift and go to state 207
    ejecutable                     shift and go to state 208
    estructuraControl              shift and go to state 4
    impresion                      shift and go to state 5
    declaracion                    shift and go to state 6
    asignacion                     shift and go to state 7
    lectura                        shift and go to state 8
    expresionMatematica            shift and go to state 9
    varShortAssign                 shift and go to state 14
    impresionSencilla              shift and go to state 16
    impresionBufio                 shift and go to state 17
    impresionFormato               shift and go to state 18
    varAssign                      shift and go to state 19
    lecturaReader                  shift and go to state 20
    lecturaScanf                   shift and go to state 21
    lecturaSscanf                  shift and go to state 22
    expresionSuma                  shift and go to state 23
    expresionResta                 shift and go to state 24
    expresionMultiplicacion        shift and go to state 25
    expresionDivision              shift and go to state 26
    expresionModulo                shift and go to state 27
    factor                         shift and go to state 28
    tipoImpresion                  shift and go to state 29
    numero                         shift and go to state 33

state 199

    (29) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main . LOCKR

    LOCKR           shift and go to state 210


state 200

    (30) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 211


state 201

    (54) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN . BRACKETR

    BRACKETR        shift and go to state 212


state 202

    (55) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT . BRACKETR

    BRACKETR        shift and go to state 213


state 203

    (35) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .

    CASE            reduce using rule 35 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)
    LOCKR           reduce using rule 35 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)


state 204

    (42) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .

    FUNC            reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SWITCH          reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FOR             reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SELECT          reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VARIABLE        reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FMT             reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VAR             reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    INTEGER         reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FLOAT           reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    $end            reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    LOCKR           reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    CASE            reduce using rule 42 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)


state 205

    (43) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .

    FUNC            reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SWITCH          reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FOR             reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SELECT          reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VARIABLE        reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FMT             reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VAR             reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    INTEGER         reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FLOAT           reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    $end            reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    LOCKR           reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    CASE            reduce using rule 43 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)


state 206

    (47) opcionLectura -> COMA opciones opcionLectura .

    BRACKETR        reduce using rule 47 (opcionLectura -> COMA opciones opcionLectura .)


state 207

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo . LOCKR

    LOCKR           shift and go to state 214


state 208

    (25) cuerpo -> ejecutable .

    LOCKR           reduce using rule 25 (cuerpo -> ejecutable .)


state 209

    (26) cuerpo -> RETURN . VARIABLE

    VARIABLE        shift and go to state 215


state 210

    (29) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .

    FUNC            reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SWITCH          reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FOR             reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SELECT          reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VARIABLE        reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FMT             reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VAR             reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    INTEGER         reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FLOAT           reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    $end            reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    LOCKR           reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    CASE            reduce using rule 29 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)


state 211

    (30) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    INTEGER         reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FLOAT           reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 30 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 212

    (54) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .

    FUNC            reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SWITCH          reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FOR             reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SELECT          reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VARIABLE        reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FMT             reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VAR             reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    INTEGER         reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FLOAT           reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    $end            reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    LOCKR           reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    CASE            reduce using rule 54 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)


state 213

    (55) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .

    FUNC            reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SWITCH          reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FOR             reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SELECT          reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VARIABLE        reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FMT             reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VAR             reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    INTEGER         reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FLOAT           reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    $end            reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    LOCKR           reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    CASE            reduce using rule 55 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)


state 214

    (24) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .

    $end            reduce using rule 24 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .)
    LOCKR           reduce using rule 24 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .)
    CASE            reduce using rule 24 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpo LOCKR .)


state 215

    (26) cuerpo -> RETURN VARIABLE .

    LOCKR           reduce using rule 26 (cuerpo -> RETURN VARIABLE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 32 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 32 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 32 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 32 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 32 resolved as shift
