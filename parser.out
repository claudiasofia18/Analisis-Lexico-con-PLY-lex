Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CHAN
    CONST
    DEFAULT
    DEFER
    ELSE
    ERROR
    FALLTHROUGH
    FALSE
    GO
    GOTO
    IF
    IMPORT
    INTERFACE
    MAP
    PACKAGE
    STRINGTYPE
    STRUCT
    TRUE
    TYPE

Grammar

Rule 0     S' -> main
Rule 1     main -> ejecutable
Rule 2     main -> funcion
Rule 3     main -> ejecutable main
Rule 4     ejecutable -> estructuraControl
Rule 5     ejecutable -> estructuraDatos
Rule 6     ejecutable -> impresion
Rule 7     ejecutable -> declaracion
Rule 8     ejecutable -> asignacion
Rule 9     ejecutable -> lectura
Rule 10    ejecutable -> metodos
Rule 11    impresion -> impresionSencilla
Rule 12    impresion -> impresionBufio
Rule 13    impresion -> impresionFormato
Rule 14    lectura -> lecturaReader
Rule 15    lectura -> lecturaScanf
Rule 16    lectura -> lecturaSscanf
Rule 17    metodos -> lenSlice
Rule 18    metodos -> appendSlice
Rule 19    metodos -> capSlice
Rule 20    metodos -> listaPushBack
Rule 21    metodos -> listaFront
Rule 22    asignacion -> varShortAssign asignable
Rule 23    asignacion -> varAssign ASSIGN asignable
Rule 24    asignacion -> VARIABLE ASSIGN asignable
Rule 25    asignacion -> varAssign tipoDato ASSIGN asignable
Rule 26    declaracion -> varAssign tipoDato
Rule 27    asignable -> valor
Rule 28    asignable -> expresionMatematica
Rule 29    asignable -> condicion
Rule 30    funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
Rule 31    cuerpos -> cuerpo
Rule 32    cuerpos -> cuerpo cuerpos
Rule 33    cuerpo -> ejecutable
Rule 34    cuerpo -> RETURN VARIABLE
Rule 35    estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR
Rule 36    estructuraControl -> FOR condicion LOCKL main LOCKR
Rule 37    estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
Rule 38    estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 39    estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 40    estructuraControl -> SELECT LOCKL casesSelect LOCKR
Rule 41    casesSelect -> caseSelect
Rule 42    casesSelect -> caseSelect casesSelect
Rule 43    caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main
Rule 44    cases -> case
Rule 45    cases -> case cases
Rule 46    case -> CASE condicionCase COLON main
Rule 47    estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
Rule 48    estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
Rule 49    estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER
Rule 50    estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
Rule 51    estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
Rule 52    estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
Rule 53    lenSlice -> LEN BRACKETL VARIABLE BRACKETR
Rule 54    appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR
Rule 55    appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
Rule 56    capSlice -> CAP BRACKETL VARIABLE BRACKETR
Rule 57    estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR
Rule 58    listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
Rule 59    listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR
Rule 60    impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR
Rule 61    tipoImpresion -> FMT DOT PRINT
Rule 62    tipoImpresion -> FMT DOT PRINTLN
Rule 63    impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
Rule 64    impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
Rule 65    lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
Rule 66    lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
Rule 67    opcionLectura -> COMA opciones
Rule 68    opcionLectura -> COMA opciones opcionLectura
Rule 69    ampersand -> AMPERSON VARIABLE
Rule 70    lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
Rule 71    opcionesLectura -> opciones
Rule 72    opcionesLectura -> opciones COMA opcionesLectura
Rule 73    opciones -> STRING
Rule 74    opciones -> ampersand
Rule 75    declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
Rule 76    declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
Rule 77    varShortAssign -> VARIABLE SHORTASSIGN
Rule 78    varAssign -> VAR VARIABLE
Rule 79    condicionCase -> INTEGER
Rule 80    condicionCase -> VARIABLE
Rule 81    condicionCase -> condicion
Rule 82    condicion -> valor operadorComparacion valor
Rule 83    condicion -> valor operadorLogico valor
Rule 84    operadorComparacion -> EQUAL
Rule 85    operadorComparacion -> UNEQUAL
Rule 86    operadorComparacion -> GREATERTHAN
Rule 87    operadorComparacion -> SMALLERTHAN
Rule 88    operadorComparacion -> GREATEROREQUALTHAN
Rule 89    operadorComparacion -> SMALLEROREQUALTHAN
Rule 90    tipoDato -> INTTYPE
Rule 91    tipoDato -> FLOATTYPE
Rule 92    tipoDato -> BOOLEANTYPE
Rule 93    operadorLogico -> AND
Rule 94    operadorLogico -> OR
Rule 95    operadorLogico -> NOT
Rule 96    expresionMatematica -> factor operadorMatematico factor
Rule 97    operadorMatematico -> PLUS
Rule 98    operadorMatematico -> MINUS
Rule 99    operadorMatematico -> TIMES
Rule 100   operadorMatematico -> DIVIDE
Rule 101   operadorMatematico -> MODULE
Rule 102   valores -> valor
Rule 103   valores -> valor COMA valores
Rule 104   valor -> STRING
Rule 105   valor -> factor
Rule 106   factor -> VARIABLE
Rule 107   factor -> FLOAT
Rule 108   factor -> INTEGER
Rule 109   iterador -> VARIABLE INCREMENT
Rule 110   iterador -> VARIABLE DECREMENT

Terminals, with rules where they appear

AMPERSON             : 69
AND                  : 93
APPEND               : 54 55
ASSIGN               : 23 24 25 55
BOOLEANTYPE          : 92
BRACEL               : 47 48 49 50 51 52
BRACER               : 47 48 49 50 51 52
BRACKETL             : 30 53 54 55 56 57 58 59 60 63 64 65 66 70 75 76
BRACKETR             : 30 53 54 55 56 57 58 59 60 63 64 65 66 70 75 76
BREAK                : 
BUFIO                : 75 76
CAP                  : 56
CASE                 : 43 46
CHAN                 : 
COLON                : 43 46 49 50 51 52
COMA                 : 38 63 64 67 68 72 103
CONST                : 
DECREMENT            : 110
DEFAULT              : 
DEFER                : 
DIVIDE               : 100
DOT                  : 57 58 59 61 62 63 64 65 66 70 75 75 76 76
ELSE                 : 
EQUAL                : 84
ERROR                : 
FALLTHROUGH          : 
FALSE                : 
FLOAT                : 107
FLOATTYPE            : 91
FMT                  : 61 62 63 64 66 70
FOR                  : 36 37 38 39
FPRINT               : 63
FRONT                : 59
FUNC                 : 30
GO                   : 
GOTO                 : 
GREATEROREQUALTHAN   : 88
GREATERTHAN          : 86
IF                   : 
IMPORT               : 
INCREMENT            : 109
INTEGER              : 47 50 51 52 52 79 108
INTERFACE            : 
INTTYPE              : 90
LEN                  : 53
LIST                 : 57
LOCKL                : 30 35 36 37 38 39 40 47 48
LOCKR                : 30 35 36 37 38 39 40 47 48
MAP                  : 
MINUS                : 43 98
MODULE               : 101
NEW                  : 57
NEWREADER            : 75
NEWWRITER            : 76
NOT                  : 95
OR                   : 94
OS                   : 75 76
PACKAGE              : 
PLUS                 : 97
PRINT                : 61
PRINTF               : 64
PRINTLN              : 62
PUSHBACK             : 58
RANGE                : 38 39
READSTRING           : 65
RETURN               : 34
SCANF                : 66
SELECT               : 40
SEMICOLON            : 37 37
SHORTASSIGN          : 77
SMALLEROREQUALTHAN   : 89
SMALLERTHAN          : 43 87
SSCANF               : 70
STDIN                : 75
STDOUT               : 76
STRING               : 63 64 65 66 73 104
STRINGTYPE           : 
STRUCT               : 
SWITCH               : 35
TIMES                : 99
TRUE                 : 
TYPE                 : 
UNEQUAL              : 85
VAR                  : 78
VARIABLE             : 24 30 30 34 35 38 38 39 49 50 51 52 53 54 55 55 56 58 59 63 65 69 77 78 80 106 109 110
error                : 

Nonterminals, with rules where they appear

ampersand            : 74
appendSlice          : 18
asignable            : 22 23 24 25
asignacion           : 8 37
capSlice             : 19
case                 : 44 45
caseSelect           : 41 42
cases                : 35 45
casesSelect          : 40 42
condicion            : 29 36 37 81
condicionCase        : 46
cuerpo               : 31 32
cuerpos              : 30 32
declaracion          : 7
ejecutable           : 1 3 33
estructuraControl    : 4
estructuraDatos      : 5
expresionMatematica  : 28
factor               : 96 96 105
funcion              : 2
impresion            : 6
impresionBufio       : 12
impresionFormato     : 13
impresionSencilla    : 11
iterador             : 37
lectura              : 9
lecturaReader        : 14
lecturaScanf         : 15
lecturaSscanf        : 16
lenSlice             : 17
listaFront           : 21
listaPushBack        : 20
main                 : 3 36 37 38 39 43 46 0
metodos              : 10
opcionLectura        : 66 68
opciones             : 67 68 71 72
opcionesLectura      : 70 72
operadorComparacion  : 82
operadorLogico       : 83
operadorMatematico   : 96
tipoDato             : 25 26 30 30 47 48 58
tipoImpresion        : 60
valor                : 27 82 82 83 83 102 103
valores              : 47 48 54 55 60 64 103
varAssign            : 23 25 26
varShortAssign       : 22 38 39 43 47 48 49 50 51 52 57 65 75 76

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    main                           shift and go to state 1
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 1

    (0) S' -> main .



state 2

    (1) main -> ejecutable .
    (3) main -> ejecutable . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    $end            reduce using rule 1 (main -> ejecutable .)
    LOCKR           reduce using rule 1 (main -> ejecutable .)
    CASE            reduce using rule 1 (main -> ejecutable .)
    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    ejecutable                     shift and go to state 2
    main                           shift and go to state 35
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 3

    (2) main -> funcion .

    $end            reduce using rule 2 (main -> funcion .)
    LOCKR           reduce using rule 2 (main -> funcion .)
    CASE            reduce using rule 2 (main -> funcion .)


state 4

    (4) ejecutable -> estructuraControl .

    FUNC            reduce using rule 4 (ejecutable -> estructuraControl .)
    SWITCH          reduce using rule 4 (ejecutable -> estructuraControl .)
    FOR             reduce using rule 4 (ejecutable -> estructuraControl .)
    SELECT          reduce using rule 4 (ejecutable -> estructuraControl .)
    VARIABLE        reduce using rule 4 (ejecutable -> estructuraControl .)
    FMT             reduce using rule 4 (ejecutable -> estructuraControl .)
    VAR             reduce using rule 4 (ejecutable -> estructuraControl .)
    LEN             reduce using rule 4 (ejecutable -> estructuraControl .)
    APPEND          reduce using rule 4 (ejecutable -> estructuraControl .)
    CAP             reduce using rule 4 (ejecutable -> estructuraControl .)
    $end            reduce using rule 4 (ejecutable -> estructuraControl .)
    LOCKR           reduce using rule 4 (ejecutable -> estructuraControl .)
    CASE            reduce using rule 4 (ejecutable -> estructuraControl .)
    RETURN          reduce using rule 4 (ejecutable -> estructuraControl .)


state 5

    (5) ejecutable -> estructuraDatos .

    FUNC            reduce using rule 5 (ejecutable -> estructuraDatos .)
    SWITCH          reduce using rule 5 (ejecutable -> estructuraDatos .)
    FOR             reduce using rule 5 (ejecutable -> estructuraDatos .)
    SELECT          reduce using rule 5 (ejecutable -> estructuraDatos .)
    VARIABLE        reduce using rule 5 (ejecutable -> estructuraDatos .)
    FMT             reduce using rule 5 (ejecutable -> estructuraDatos .)
    VAR             reduce using rule 5 (ejecutable -> estructuraDatos .)
    LEN             reduce using rule 5 (ejecutable -> estructuraDatos .)
    APPEND          reduce using rule 5 (ejecutable -> estructuraDatos .)
    CAP             reduce using rule 5 (ejecutable -> estructuraDatos .)
    $end            reduce using rule 5 (ejecutable -> estructuraDatos .)
    LOCKR           reduce using rule 5 (ejecutable -> estructuraDatos .)
    CASE            reduce using rule 5 (ejecutable -> estructuraDatos .)
    RETURN          reduce using rule 5 (ejecutable -> estructuraDatos .)


state 6

    (6) ejecutable -> impresion .

    FUNC            reduce using rule 6 (ejecutable -> impresion .)
    SWITCH          reduce using rule 6 (ejecutable -> impresion .)
    FOR             reduce using rule 6 (ejecutable -> impresion .)
    SELECT          reduce using rule 6 (ejecutable -> impresion .)
    VARIABLE        reduce using rule 6 (ejecutable -> impresion .)
    FMT             reduce using rule 6 (ejecutable -> impresion .)
    VAR             reduce using rule 6 (ejecutable -> impresion .)
    LEN             reduce using rule 6 (ejecutable -> impresion .)
    APPEND          reduce using rule 6 (ejecutable -> impresion .)
    CAP             reduce using rule 6 (ejecutable -> impresion .)
    $end            reduce using rule 6 (ejecutable -> impresion .)
    LOCKR           reduce using rule 6 (ejecutable -> impresion .)
    CASE            reduce using rule 6 (ejecutable -> impresion .)
    RETURN          reduce using rule 6 (ejecutable -> impresion .)


state 7

    (7) ejecutable -> declaracion .

    FUNC            reduce using rule 7 (ejecutable -> declaracion .)
    SWITCH          reduce using rule 7 (ejecutable -> declaracion .)
    FOR             reduce using rule 7 (ejecutable -> declaracion .)
    SELECT          reduce using rule 7 (ejecutable -> declaracion .)
    VARIABLE        reduce using rule 7 (ejecutable -> declaracion .)
    FMT             reduce using rule 7 (ejecutable -> declaracion .)
    VAR             reduce using rule 7 (ejecutable -> declaracion .)
    LEN             reduce using rule 7 (ejecutable -> declaracion .)
    APPEND          reduce using rule 7 (ejecutable -> declaracion .)
    CAP             reduce using rule 7 (ejecutable -> declaracion .)
    $end            reduce using rule 7 (ejecutable -> declaracion .)
    LOCKR           reduce using rule 7 (ejecutable -> declaracion .)
    CASE            reduce using rule 7 (ejecutable -> declaracion .)
    RETURN          reduce using rule 7 (ejecutable -> declaracion .)


state 8

    (8) ejecutable -> asignacion .

    FUNC            reduce using rule 8 (ejecutable -> asignacion .)
    SWITCH          reduce using rule 8 (ejecutable -> asignacion .)
    FOR             reduce using rule 8 (ejecutable -> asignacion .)
    SELECT          reduce using rule 8 (ejecutable -> asignacion .)
    VARIABLE        reduce using rule 8 (ejecutable -> asignacion .)
    FMT             reduce using rule 8 (ejecutable -> asignacion .)
    VAR             reduce using rule 8 (ejecutable -> asignacion .)
    LEN             reduce using rule 8 (ejecutable -> asignacion .)
    APPEND          reduce using rule 8 (ejecutable -> asignacion .)
    CAP             reduce using rule 8 (ejecutable -> asignacion .)
    $end            reduce using rule 8 (ejecutable -> asignacion .)
    LOCKR           reduce using rule 8 (ejecutable -> asignacion .)
    CASE            reduce using rule 8 (ejecutable -> asignacion .)
    RETURN          reduce using rule 8 (ejecutable -> asignacion .)


state 9

    (9) ejecutable -> lectura .

    FUNC            reduce using rule 9 (ejecutable -> lectura .)
    SWITCH          reduce using rule 9 (ejecutable -> lectura .)
    FOR             reduce using rule 9 (ejecutable -> lectura .)
    SELECT          reduce using rule 9 (ejecutable -> lectura .)
    VARIABLE        reduce using rule 9 (ejecutable -> lectura .)
    FMT             reduce using rule 9 (ejecutable -> lectura .)
    VAR             reduce using rule 9 (ejecutable -> lectura .)
    LEN             reduce using rule 9 (ejecutable -> lectura .)
    APPEND          reduce using rule 9 (ejecutable -> lectura .)
    CAP             reduce using rule 9 (ejecutable -> lectura .)
    $end            reduce using rule 9 (ejecutable -> lectura .)
    LOCKR           reduce using rule 9 (ejecutable -> lectura .)
    CASE            reduce using rule 9 (ejecutable -> lectura .)
    RETURN          reduce using rule 9 (ejecutable -> lectura .)


state 10

    (10) ejecutable -> metodos .

    FUNC            reduce using rule 10 (ejecutable -> metodos .)
    SWITCH          reduce using rule 10 (ejecutable -> metodos .)
    FOR             reduce using rule 10 (ejecutable -> metodos .)
    SELECT          reduce using rule 10 (ejecutable -> metodos .)
    VARIABLE        reduce using rule 10 (ejecutable -> metodos .)
    FMT             reduce using rule 10 (ejecutable -> metodos .)
    VAR             reduce using rule 10 (ejecutable -> metodos .)
    LEN             reduce using rule 10 (ejecutable -> metodos .)
    APPEND          reduce using rule 10 (ejecutable -> metodos .)
    CAP             reduce using rule 10 (ejecutable -> metodos .)
    $end            reduce using rule 10 (ejecutable -> metodos .)
    LOCKR           reduce using rule 10 (ejecutable -> metodos .)
    CASE            reduce using rule 10 (ejecutable -> metodos .)
    RETURN          reduce using rule 10 (ejecutable -> metodos .)


state 11

    (30) funcion -> FUNC . VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR

    VARIABLE        shift and go to state 36


state 12

    (24) asignacion -> VARIABLE . ASSIGN asignable
    (77) varShortAssign -> VARIABLE . SHORTASSIGN
    (55) appendSlice -> VARIABLE . ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (58) listaPushBack -> VARIABLE . DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> VARIABLE . DOT FRONT BRACKETL BRACKETR

    ASSIGN          shift and go to state 37
    SHORTASSIGN     shift and go to state 38
    DOT             shift and go to state 39


state 13

    (35) estructuraControl -> SWITCH . VARIABLE LOCKL cases LOCKR

    VARIABLE        shift and go to state 40


state 14

    (36) estructuraControl -> FOR . condicion LOCKL main LOCKR
    (37) estructuraControl -> FOR . asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> FOR . VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> FOR . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (104) valor -> . STRING
    (105) valor -> . factor
    (78) varAssign -> . VAR VARIABLE
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    VARIABLE        shift and go to state 43
    STRING          shift and go to state 47
    VAR             shift and go to state 31
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    condicion                      shift and go to state 41
    asignacion                     shift and go to state 42
    varShortAssign                 shift and go to state 44
    valor                          shift and go to state 45
    varAssign                      shift and go to state 46
    factor                         shift and go to state 48

state 15

    (47) estructuraDatos -> varShortAssign . BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> varShortAssign . BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> varShortAssign . VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> varShortAssign . VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> varShortAssign . VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> varShortAssign . VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> varShortAssign . LIST DOT NEW BRACKETL BRACKETR
    (75) declaracion -> varShortAssign . BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> varShortAssign . BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> varShortAssign . asignable
    (65) lecturaReader -> varShortAssign . VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (27) asignable -> . valor
    (28) asignable -> . expresionMatematica
    (29) asignable -> . condicion
    (104) valor -> . STRING
    (105) valor -> . factor
    (96) expresionMatematica -> . factor operadorMatematico factor
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    BRACEL          shift and go to state 51
    VARIABLE        shift and go to state 52
    LIST            shift and go to state 53
    BUFIO           shift and go to state 54
    STRING          shift and go to state 47
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    asignable                      shift and go to state 55
    valor                          shift and go to state 56
    expresionMatematica            shift and go to state 57
    condicion                      shift and go to state 58
    factor                         shift and go to state 59

state 16

    (40) estructuraControl -> SELECT . LOCKL casesSelect LOCKR

    LOCKL           shift and go to state 60


state 17

    (11) impresion -> impresionSencilla .

    FUNC            reduce using rule 11 (impresion -> impresionSencilla .)
    SWITCH          reduce using rule 11 (impresion -> impresionSencilla .)
    FOR             reduce using rule 11 (impresion -> impresionSencilla .)
    SELECT          reduce using rule 11 (impresion -> impresionSencilla .)
    VARIABLE        reduce using rule 11 (impresion -> impresionSencilla .)
    FMT             reduce using rule 11 (impresion -> impresionSencilla .)
    VAR             reduce using rule 11 (impresion -> impresionSencilla .)
    LEN             reduce using rule 11 (impresion -> impresionSencilla .)
    APPEND          reduce using rule 11 (impresion -> impresionSencilla .)
    CAP             reduce using rule 11 (impresion -> impresionSencilla .)
    $end            reduce using rule 11 (impresion -> impresionSencilla .)
    LOCKR           reduce using rule 11 (impresion -> impresionSencilla .)
    CASE            reduce using rule 11 (impresion -> impresionSencilla .)
    RETURN          reduce using rule 11 (impresion -> impresionSencilla .)


state 18

    (12) impresion -> impresionBufio .

    FUNC            reduce using rule 12 (impresion -> impresionBufio .)
    SWITCH          reduce using rule 12 (impresion -> impresionBufio .)
    FOR             reduce using rule 12 (impresion -> impresionBufio .)
    SELECT          reduce using rule 12 (impresion -> impresionBufio .)
    VARIABLE        reduce using rule 12 (impresion -> impresionBufio .)
    FMT             reduce using rule 12 (impresion -> impresionBufio .)
    VAR             reduce using rule 12 (impresion -> impresionBufio .)
    LEN             reduce using rule 12 (impresion -> impresionBufio .)
    APPEND          reduce using rule 12 (impresion -> impresionBufio .)
    CAP             reduce using rule 12 (impresion -> impresionBufio .)
    $end            reduce using rule 12 (impresion -> impresionBufio .)
    LOCKR           reduce using rule 12 (impresion -> impresionBufio .)
    CASE            reduce using rule 12 (impresion -> impresionBufio .)
    RETURN          reduce using rule 12 (impresion -> impresionBufio .)


state 19

    (13) impresion -> impresionFormato .

    FUNC            reduce using rule 13 (impresion -> impresionFormato .)
    SWITCH          reduce using rule 13 (impresion -> impresionFormato .)
    FOR             reduce using rule 13 (impresion -> impresionFormato .)
    SELECT          reduce using rule 13 (impresion -> impresionFormato .)
    VARIABLE        reduce using rule 13 (impresion -> impresionFormato .)
    FMT             reduce using rule 13 (impresion -> impresionFormato .)
    VAR             reduce using rule 13 (impresion -> impresionFormato .)
    LEN             reduce using rule 13 (impresion -> impresionFormato .)
    APPEND          reduce using rule 13 (impresion -> impresionFormato .)
    CAP             reduce using rule 13 (impresion -> impresionFormato .)
    $end            reduce using rule 13 (impresion -> impresionFormato .)
    LOCKR           reduce using rule 13 (impresion -> impresionFormato .)
    CASE            reduce using rule 13 (impresion -> impresionFormato .)
    RETURN          reduce using rule 13 (impresion -> impresionFormato .)


state 20

    (26) declaracion -> varAssign . tipoDato
    (23) asignacion -> varAssign . ASSIGN asignable
    (25) asignacion -> varAssign . tipoDato ASSIGN asignable
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    ASSIGN          shift and go to state 62
    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 61

state 21

    (14) lectura -> lecturaReader .

    FUNC            reduce using rule 14 (lectura -> lecturaReader .)
    SWITCH          reduce using rule 14 (lectura -> lecturaReader .)
    FOR             reduce using rule 14 (lectura -> lecturaReader .)
    SELECT          reduce using rule 14 (lectura -> lecturaReader .)
    VARIABLE        reduce using rule 14 (lectura -> lecturaReader .)
    FMT             reduce using rule 14 (lectura -> lecturaReader .)
    VAR             reduce using rule 14 (lectura -> lecturaReader .)
    LEN             reduce using rule 14 (lectura -> lecturaReader .)
    APPEND          reduce using rule 14 (lectura -> lecturaReader .)
    CAP             reduce using rule 14 (lectura -> lecturaReader .)
    $end            reduce using rule 14 (lectura -> lecturaReader .)
    LOCKR           reduce using rule 14 (lectura -> lecturaReader .)
    CASE            reduce using rule 14 (lectura -> lecturaReader .)
    RETURN          reduce using rule 14 (lectura -> lecturaReader .)


state 22

    (15) lectura -> lecturaScanf .

    FUNC            reduce using rule 15 (lectura -> lecturaScanf .)
    SWITCH          reduce using rule 15 (lectura -> lecturaScanf .)
    FOR             reduce using rule 15 (lectura -> lecturaScanf .)
    SELECT          reduce using rule 15 (lectura -> lecturaScanf .)
    VARIABLE        reduce using rule 15 (lectura -> lecturaScanf .)
    FMT             reduce using rule 15 (lectura -> lecturaScanf .)
    VAR             reduce using rule 15 (lectura -> lecturaScanf .)
    LEN             reduce using rule 15 (lectura -> lecturaScanf .)
    APPEND          reduce using rule 15 (lectura -> lecturaScanf .)
    CAP             reduce using rule 15 (lectura -> lecturaScanf .)
    $end            reduce using rule 15 (lectura -> lecturaScanf .)
    LOCKR           reduce using rule 15 (lectura -> lecturaScanf .)
    CASE            reduce using rule 15 (lectura -> lecturaScanf .)
    RETURN          reduce using rule 15 (lectura -> lecturaScanf .)


state 23

    (16) lectura -> lecturaSscanf .

    FUNC            reduce using rule 16 (lectura -> lecturaSscanf .)
    SWITCH          reduce using rule 16 (lectura -> lecturaSscanf .)
    FOR             reduce using rule 16 (lectura -> lecturaSscanf .)
    SELECT          reduce using rule 16 (lectura -> lecturaSscanf .)
    VARIABLE        reduce using rule 16 (lectura -> lecturaSscanf .)
    FMT             reduce using rule 16 (lectura -> lecturaSscanf .)
    VAR             reduce using rule 16 (lectura -> lecturaSscanf .)
    LEN             reduce using rule 16 (lectura -> lecturaSscanf .)
    APPEND          reduce using rule 16 (lectura -> lecturaSscanf .)
    CAP             reduce using rule 16 (lectura -> lecturaSscanf .)
    $end            reduce using rule 16 (lectura -> lecturaSscanf .)
    LOCKR           reduce using rule 16 (lectura -> lecturaSscanf .)
    CASE            reduce using rule 16 (lectura -> lecturaSscanf .)
    RETURN          reduce using rule 16 (lectura -> lecturaSscanf .)


state 24

    (17) metodos -> lenSlice .

    FUNC            reduce using rule 17 (metodos -> lenSlice .)
    SWITCH          reduce using rule 17 (metodos -> lenSlice .)
    FOR             reduce using rule 17 (metodos -> lenSlice .)
    SELECT          reduce using rule 17 (metodos -> lenSlice .)
    VARIABLE        reduce using rule 17 (metodos -> lenSlice .)
    FMT             reduce using rule 17 (metodos -> lenSlice .)
    VAR             reduce using rule 17 (metodos -> lenSlice .)
    LEN             reduce using rule 17 (metodos -> lenSlice .)
    APPEND          reduce using rule 17 (metodos -> lenSlice .)
    CAP             reduce using rule 17 (metodos -> lenSlice .)
    $end            reduce using rule 17 (metodos -> lenSlice .)
    LOCKR           reduce using rule 17 (metodos -> lenSlice .)
    CASE            reduce using rule 17 (metodos -> lenSlice .)
    RETURN          reduce using rule 17 (metodos -> lenSlice .)


state 25

    (18) metodos -> appendSlice .

    FUNC            reduce using rule 18 (metodos -> appendSlice .)
    SWITCH          reduce using rule 18 (metodos -> appendSlice .)
    FOR             reduce using rule 18 (metodos -> appendSlice .)
    SELECT          reduce using rule 18 (metodos -> appendSlice .)
    VARIABLE        reduce using rule 18 (metodos -> appendSlice .)
    FMT             reduce using rule 18 (metodos -> appendSlice .)
    VAR             reduce using rule 18 (metodos -> appendSlice .)
    LEN             reduce using rule 18 (metodos -> appendSlice .)
    APPEND          reduce using rule 18 (metodos -> appendSlice .)
    CAP             reduce using rule 18 (metodos -> appendSlice .)
    $end            reduce using rule 18 (metodos -> appendSlice .)
    LOCKR           reduce using rule 18 (metodos -> appendSlice .)
    CASE            reduce using rule 18 (metodos -> appendSlice .)
    RETURN          reduce using rule 18 (metodos -> appendSlice .)


state 26

    (19) metodos -> capSlice .

    FUNC            reduce using rule 19 (metodos -> capSlice .)
    SWITCH          reduce using rule 19 (metodos -> capSlice .)
    FOR             reduce using rule 19 (metodos -> capSlice .)
    SELECT          reduce using rule 19 (metodos -> capSlice .)
    VARIABLE        reduce using rule 19 (metodos -> capSlice .)
    FMT             reduce using rule 19 (metodos -> capSlice .)
    VAR             reduce using rule 19 (metodos -> capSlice .)
    LEN             reduce using rule 19 (metodos -> capSlice .)
    APPEND          reduce using rule 19 (metodos -> capSlice .)
    CAP             reduce using rule 19 (metodos -> capSlice .)
    $end            reduce using rule 19 (metodos -> capSlice .)
    LOCKR           reduce using rule 19 (metodos -> capSlice .)
    CASE            reduce using rule 19 (metodos -> capSlice .)
    RETURN          reduce using rule 19 (metodos -> capSlice .)


state 27

    (20) metodos -> listaPushBack .

    FUNC            reduce using rule 20 (metodos -> listaPushBack .)
    SWITCH          reduce using rule 20 (metodos -> listaPushBack .)
    FOR             reduce using rule 20 (metodos -> listaPushBack .)
    SELECT          reduce using rule 20 (metodos -> listaPushBack .)
    VARIABLE        reduce using rule 20 (metodos -> listaPushBack .)
    FMT             reduce using rule 20 (metodos -> listaPushBack .)
    VAR             reduce using rule 20 (metodos -> listaPushBack .)
    LEN             reduce using rule 20 (metodos -> listaPushBack .)
    APPEND          reduce using rule 20 (metodos -> listaPushBack .)
    CAP             reduce using rule 20 (metodos -> listaPushBack .)
    $end            reduce using rule 20 (metodos -> listaPushBack .)
    LOCKR           reduce using rule 20 (metodos -> listaPushBack .)
    CASE            reduce using rule 20 (metodos -> listaPushBack .)
    RETURN          reduce using rule 20 (metodos -> listaPushBack .)


state 28

    (21) metodos -> listaFront .

    FUNC            reduce using rule 21 (metodos -> listaFront .)
    SWITCH          reduce using rule 21 (metodos -> listaFront .)
    FOR             reduce using rule 21 (metodos -> listaFront .)
    SELECT          reduce using rule 21 (metodos -> listaFront .)
    VARIABLE        reduce using rule 21 (metodos -> listaFront .)
    FMT             reduce using rule 21 (metodos -> listaFront .)
    VAR             reduce using rule 21 (metodos -> listaFront .)
    LEN             reduce using rule 21 (metodos -> listaFront .)
    APPEND          reduce using rule 21 (metodos -> listaFront .)
    CAP             reduce using rule 21 (metodos -> listaFront .)
    $end            reduce using rule 21 (metodos -> listaFront .)
    LOCKR           reduce using rule 21 (metodos -> listaFront .)
    CASE            reduce using rule 21 (metodos -> listaFront .)
    RETURN          reduce using rule 21 (metodos -> listaFront .)


state 29

    (60) impresionSencilla -> tipoImpresion . BRACKETL valores BRACKETR

    BRACKETL        shift and go to state 66


state 30

    (63) impresionBufio -> FMT . DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> FMT . DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (66) lecturaScanf -> FMT . DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> FMT . DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (61) tipoImpresion -> FMT . DOT PRINT
    (62) tipoImpresion -> FMT . DOT PRINTLN

    DOT             shift and go to state 67


state 31

    (78) varAssign -> VAR . VARIABLE

    VARIABLE        shift and go to state 68


state 32

    (53) lenSlice -> LEN . BRACKETL VARIABLE BRACKETR

    BRACKETL        shift and go to state 69


state 33

    (54) appendSlice -> APPEND . BRACKETL VARIABLE valores BRACKETR

    BRACKETL        shift and go to state 70


state 34

    (56) capSlice -> CAP . BRACKETL VARIABLE BRACKETR

    BRACKETL        shift and go to state 71


state 35

    (3) main -> ejecutable main .

    $end            reduce using rule 3 (main -> ejecutable main .)
    LOCKR           reduce using rule 3 (main -> ejecutable main .)
    CASE            reduce using rule 3 (main -> ejecutable main .)


state 36

    (30) funcion -> FUNC VARIABLE . BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR

    BRACKETL        shift and go to state 72


state 37

    (24) asignacion -> VARIABLE ASSIGN . asignable
    (55) appendSlice -> VARIABLE ASSIGN . APPEND BRACKETL VARIABLE valores BRACKETR
    (27) asignable -> . valor
    (28) asignable -> . expresionMatematica
    (29) asignable -> . condicion
    (104) valor -> . STRING
    (105) valor -> . factor
    (96) expresionMatematica -> . factor operadorMatematico factor
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    APPEND          shift and go to state 75
    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    asignable                      shift and go to state 74
    valor                          shift and go to state 56
    expresionMatematica            shift and go to state 57
    condicion                      shift and go to state 58
    factor                         shift and go to state 59

state 38

    (77) varShortAssign -> VARIABLE SHORTASSIGN .

    BRACEL          reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    VARIABLE        reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    LIST            reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    BUFIO           reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    STRING          reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    FLOAT           reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    INTEGER         reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    RANGE           reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)
    SMALLERTHAN     reduce using rule 77 (varShortAssign -> VARIABLE SHORTASSIGN .)


state 39

    (58) listaPushBack -> VARIABLE DOT . PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> VARIABLE DOT . FRONT BRACKETL BRACKETR

    PUSHBACK        shift and go to state 76
    FRONT           shift and go to state 77


state 40

    (35) estructuraControl -> SWITCH VARIABLE . LOCKL cases LOCKR

    LOCKL           shift and go to state 78


state 41

    (36) estructuraControl -> FOR condicion . LOCKL main LOCKR

    LOCKL           shift and go to state 79


state 42

    (37) estructuraControl -> FOR asignacion . SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 80


state 43

    (38) estructuraControl -> FOR VARIABLE . COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (24) asignacion -> VARIABLE . ASSIGN asignable
    (77) varShortAssign -> VARIABLE . SHORTASSIGN
    (106) factor -> VARIABLE .

    COMA            shift and go to state 81
    ASSIGN          shift and go to state 82
    SHORTASSIGN     shift and go to state 38
    EQUAL           reduce using rule 106 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 106 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    AND             reduce using rule 106 (factor -> VARIABLE .)
    OR              reduce using rule 106 (factor -> VARIABLE .)
    NOT             reduce using rule 106 (factor -> VARIABLE .)


state 44

    (39) estructuraControl -> FOR varShortAssign . RANGE VARIABLE LOCKL main LOCKR
    (22) asignacion -> varShortAssign . asignable
    (27) asignable -> . valor
    (28) asignable -> . expresionMatematica
    (29) asignable -> . condicion
    (104) valor -> . STRING
    (105) valor -> . factor
    (96) expresionMatematica -> . factor operadorMatematico factor
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    RANGE           shift and go to state 83
    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    asignable                      shift and go to state 55
    valor                          shift and go to state 56
    expresionMatematica            shift and go to state 57
    condicion                      shift and go to state 58
    factor                         shift and go to state 59

state 45

    (82) condicion -> valor . operadorComparacion valor
    (83) condicion -> valor . operadorLogico valor
    (84) operadorComparacion -> . EQUAL
    (85) operadorComparacion -> . UNEQUAL
    (86) operadorComparacion -> . GREATERTHAN
    (87) operadorComparacion -> . SMALLERTHAN
    (88) operadorComparacion -> . GREATEROREQUALTHAN
    (89) operadorComparacion -> . SMALLEROREQUALTHAN
    (93) operadorLogico -> . AND
    (94) operadorLogico -> . OR
    (95) operadorLogico -> . NOT

    EQUAL           shift and go to state 86
    UNEQUAL         shift and go to state 87
    GREATERTHAN     shift and go to state 88
    SMALLERTHAN     shift and go to state 89
    GREATEROREQUALTHAN shift and go to state 90
    SMALLEROREQUALTHAN shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    NOT             shift and go to state 94

    operadorComparacion            shift and go to state 84
    operadorLogico                 shift and go to state 85

state 46

    (23) asignacion -> varAssign . ASSIGN asignable
    (25) asignacion -> varAssign . tipoDato ASSIGN asignable
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    ASSIGN          shift and go to state 62
    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 95

state 47

    (104) valor -> STRING .

    EQUAL           reduce using rule 104 (valor -> STRING .)
    UNEQUAL         reduce using rule 104 (valor -> STRING .)
    GREATERTHAN     reduce using rule 104 (valor -> STRING .)
    SMALLERTHAN     reduce using rule 104 (valor -> STRING .)
    GREATEROREQUALTHAN reduce using rule 104 (valor -> STRING .)
    SMALLEROREQUALTHAN reduce using rule 104 (valor -> STRING .)
    AND             reduce using rule 104 (valor -> STRING .)
    OR              reduce using rule 104 (valor -> STRING .)
    NOT             reduce using rule 104 (valor -> STRING .)
    FUNC            reduce using rule 104 (valor -> STRING .)
    SWITCH          reduce using rule 104 (valor -> STRING .)
    FOR             reduce using rule 104 (valor -> STRING .)
    SELECT          reduce using rule 104 (valor -> STRING .)
    VARIABLE        reduce using rule 104 (valor -> STRING .)
    FMT             reduce using rule 104 (valor -> STRING .)
    VAR             reduce using rule 104 (valor -> STRING .)
    LEN             reduce using rule 104 (valor -> STRING .)
    APPEND          reduce using rule 104 (valor -> STRING .)
    CAP             reduce using rule 104 (valor -> STRING .)
    $end            reduce using rule 104 (valor -> STRING .)
    LOCKR           reduce using rule 104 (valor -> STRING .)
    CASE            reduce using rule 104 (valor -> STRING .)
    RETURN          reduce using rule 104 (valor -> STRING .)
    SEMICOLON       reduce using rule 104 (valor -> STRING .)
    COMA            reduce using rule 104 (valor -> STRING .)
    BRACKETR        reduce using rule 104 (valor -> STRING .)
    LOCKL           reduce using rule 104 (valor -> STRING .)
    COLON           reduce using rule 104 (valor -> STRING .)


state 48

    (105) valor -> factor .

    EQUAL           reduce using rule 105 (valor -> factor .)
    UNEQUAL         reduce using rule 105 (valor -> factor .)
    GREATERTHAN     reduce using rule 105 (valor -> factor .)
    SMALLERTHAN     reduce using rule 105 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 105 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 105 (valor -> factor .)
    AND             reduce using rule 105 (valor -> factor .)
    OR              reduce using rule 105 (valor -> factor .)
    NOT             reduce using rule 105 (valor -> factor .)
    COMA            reduce using rule 105 (valor -> factor .)
    BRACKETR        reduce using rule 105 (valor -> factor .)
    LOCKL           reduce using rule 105 (valor -> factor .)
    FUNC            reduce using rule 105 (valor -> factor .)
    SWITCH          reduce using rule 105 (valor -> factor .)
    FOR             reduce using rule 105 (valor -> factor .)
    SELECT          reduce using rule 105 (valor -> factor .)
    VARIABLE        reduce using rule 105 (valor -> factor .)
    FMT             reduce using rule 105 (valor -> factor .)
    VAR             reduce using rule 105 (valor -> factor .)
    LEN             reduce using rule 105 (valor -> factor .)
    APPEND          reduce using rule 105 (valor -> factor .)
    CAP             reduce using rule 105 (valor -> factor .)
    $end            reduce using rule 105 (valor -> factor .)
    LOCKR           reduce using rule 105 (valor -> factor .)
    CASE            reduce using rule 105 (valor -> factor .)
    RETURN          reduce using rule 105 (valor -> factor .)
    SEMICOLON       reduce using rule 105 (valor -> factor .)
    COLON           reduce using rule 105 (valor -> factor .)


state 49

    (107) factor -> FLOAT .

    EQUAL           reduce using rule 107 (factor -> FLOAT .)
    UNEQUAL         reduce using rule 107 (factor -> FLOAT .)
    GREATERTHAN     reduce using rule 107 (factor -> FLOAT .)
    SMALLERTHAN     reduce using rule 107 (factor -> FLOAT .)
    GREATEROREQUALTHAN reduce using rule 107 (factor -> FLOAT .)
    SMALLEROREQUALTHAN reduce using rule 107 (factor -> FLOAT .)
    AND             reduce using rule 107 (factor -> FLOAT .)
    OR              reduce using rule 107 (factor -> FLOAT .)
    NOT             reduce using rule 107 (factor -> FLOAT .)
    PLUS            reduce using rule 107 (factor -> FLOAT .)
    MINUS           reduce using rule 107 (factor -> FLOAT .)
    TIMES           reduce using rule 107 (factor -> FLOAT .)
    DIVIDE          reduce using rule 107 (factor -> FLOAT .)
    MODULE          reduce using rule 107 (factor -> FLOAT .)
    FUNC            reduce using rule 107 (factor -> FLOAT .)
    SWITCH          reduce using rule 107 (factor -> FLOAT .)
    FOR             reduce using rule 107 (factor -> FLOAT .)
    SELECT          reduce using rule 107 (factor -> FLOAT .)
    VARIABLE        reduce using rule 107 (factor -> FLOAT .)
    FMT             reduce using rule 107 (factor -> FLOAT .)
    VAR             reduce using rule 107 (factor -> FLOAT .)
    LEN             reduce using rule 107 (factor -> FLOAT .)
    APPEND          reduce using rule 107 (factor -> FLOAT .)
    CAP             reduce using rule 107 (factor -> FLOAT .)
    $end            reduce using rule 107 (factor -> FLOAT .)
    LOCKR           reduce using rule 107 (factor -> FLOAT .)
    CASE            reduce using rule 107 (factor -> FLOAT .)
    RETURN          reduce using rule 107 (factor -> FLOAT .)
    SEMICOLON       reduce using rule 107 (factor -> FLOAT .)
    COMA            reduce using rule 107 (factor -> FLOAT .)
    BRACKETR        reduce using rule 107 (factor -> FLOAT .)
    LOCKL           reduce using rule 107 (factor -> FLOAT .)
    COLON           reduce using rule 107 (factor -> FLOAT .)


state 50

    (108) factor -> INTEGER .

    EQUAL           reduce using rule 108 (factor -> INTEGER .)
    UNEQUAL         reduce using rule 108 (factor -> INTEGER .)
    GREATERTHAN     reduce using rule 108 (factor -> INTEGER .)
    SMALLERTHAN     reduce using rule 108 (factor -> INTEGER .)
    GREATEROREQUALTHAN reduce using rule 108 (factor -> INTEGER .)
    SMALLEROREQUALTHAN reduce using rule 108 (factor -> INTEGER .)
    AND             reduce using rule 108 (factor -> INTEGER .)
    OR              reduce using rule 108 (factor -> INTEGER .)
    NOT             reduce using rule 108 (factor -> INTEGER .)
    PLUS            reduce using rule 108 (factor -> INTEGER .)
    MINUS           reduce using rule 108 (factor -> INTEGER .)
    TIMES           reduce using rule 108 (factor -> INTEGER .)
    DIVIDE          reduce using rule 108 (factor -> INTEGER .)
    MODULE          reduce using rule 108 (factor -> INTEGER .)
    FUNC            reduce using rule 108 (factor -> INTEGER .)
    SWITCH          reduce using rule 108 (factor -> INTEGER .)
    FOR             reduce using rule 108 (factor -> INTEGER .)
    SELECT          reduce using rule 108 (factor -> INTEGER .)
    VARIABLE        reduce using rule 108 (factor -> INTEGER .)
    FMT             reduce using rule 108 (factor -> INTEGER .)
    VAR             reduce using rule 108 (factor -> INTEGER .)
    LEN             reduce using rule 108 (factor -> INTEGER .)
    APPEND          reduce using rule 108 (factor -> INTEGER .)
    CAP             reduce using rule 108 (factor -> INTEGER .)
    $end            reduce using rule 108 (factor -> INTEGER .)
    LOCKR           reduce using rule 108 (factor -> INTEGER .)
    CASE            reduce using rule 108 (factor -> INTEGER .)
    RETURN          reduce using rule 108 (factor -> INTEGER .)
    SEMICOLON       reduce using rule 108 (factor -> INTEGER .)
    COMA            reduce using rule 108 (factor -> INTEGER .)
    BRACKETR        reduce using rule 108 (factor -> INTEGER .)
    LOCKL           reduce using rule 108 (factor -> INTEGER .)
    COLON           reduce using rule 108 (factor -> INTEGER .)


state 51

    (47) estructuraDatos -> varShortAssign BRACEL . INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> varShortAssign BRACEL . BRACER tipoDato LOCKL valores LOCKR

    INTEGER         shift and go to state 96
    BRACER          shift and go to state 97


state 52

    (49) estructuraDatos -> varShortAssign VARIABLE . BRACEL COLON BRACER
    (50) estructuraDatos -> varShortAssign VARIABLE . BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> varShortAssign VARIABLE . BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> varShortAssign VARIABLE . BRACEL INTEGER COLON INTEGER BRACER
    (65) lecturaReader -> varShortAssign VARIABLE . DOT READSTRING BRACKETL STRING BRACKETR
    (106) factor -> VARIABLE .

    BRACEL          shift and go to state 98
    DOT             shift and go to state 99
    PLUS            reduce using rule 106 (factor -> VARIABLE .)
    MINUS           reduce using rule 106 (factor -> VARIABLE .)
    TIMES           reduce using rule 106 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 106 (factor -> VARIABLE .)
    MODULE          reduce using rule 106 (factor -> VARIABLE .)
    EQUAL           reduce using rule 106 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 106 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    AND             reduce using rule 106 (factor -> VARIABLE .)
    OR              reduce using rule 106 (factor -> VARIABLE .)
    NOT             reduce using rule 106 (factor -> VARIABLE .)
    FUNC            reduce using rule 106 (factor -> VARIABLE .)
    SWITCH          reduce using rule 106 (factor -> VARIABLE .)
    FOR             reduce using rule 106 (factor -> VARIABLE .)
    SELECT          reduce using rule 106 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 106 (factor -> VARIABLE .)
    FMT             reduce using rule 106 (factor -> VARIABLE .)
    VAR             reduce using rule 106 (factor -> VARIABLE .)
    LEN             reduce using rule 106 (factor -> VARIABLE .)
    APPEND          reduce using rule 106 (factor -> VARIABLE .)
    CAP             reduce using rule 106 (factor -> VARIABLE .)
    $end            reduce using rule 106 (factor -> VARIABLE .)
    LOCKR           reduce using rule 106 (factor -> VARIABLE .)
    CASE            reduce using rule 106 (factor -> VARIABLE .)
    RETURN          reduce using rule 106 (factor -> VARIABLE .)


state 53

    (57) estructuraDatos -> varShortAssign LIST . DOT NEW BRACKETL BRACKETR

    DOT             shift and go to state 100


state 54

    (75) declaracion -> varShortAssign BUFIO . DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> varShortAssign BUFIO . DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    DOT             shift and go to state 101


state 55

    (22) asignacion -> varShortAssign asignable .

    FUNC            reduce using rule 22 (asignacion -> varShortAssign asignable .)
    SWITCH          reduce using rule 22 (asignacion -> varShortAssign asignable .)
    FOR             reduce using rule 22 (asignacion -> varShortAssign asignable .)
    SELECT          reduce using rule 22 (asignacion -> varShortAssign asignable .)
    VARIABLE        reduce using rule 22 (asignacion -> varShortAssign asignable .)
    FMT             reduce using rule 22 (asignacion -> varShortAssign asignable .)
    VAR             reduce using rule 22 (asignacion -> varShortAssign asignable .)
    LEN             reduce using rule 22 (asignacion -> varShortAssign asignable .)
    APPEND          reduce using rule 22 (asignacion -> varShortAssign asignable .)
    CAP             reduce using rule 22 (asignacion -> varShortAssign asignable .)
    $end            reduce using rule 22 (asignacion -> varShortAssign asignable .)
    LOCKR           reduce using rule 22 (asignacion -> varShortAssign asignable .)
    CASE            reduce using rule 22 (asignacion -> varShortAssign asignable .)
    SEMICOLON       reduce using rule 22 (asignacion -> varShortAssign asignable .)
    RETURN          reduce using rule 22 (asignacion -> varShortAssign asignable .)


state 56

    (27) asignable -> valor .
    (82) condicion -> valor . operadorComparacion valor
    (83) condicion -> valor . operadorLogico valor
    (84) operadorComparacion -> . EQUAL
    (85) operadorComparacion -> . UNEQUAL
    (86) operadorComparacion -> . GREATERTHAN
    (87) operadorComparacion -> . SMALLERTHAN
    (88) operadorComparacion -> . GREATEROREQUALTHAN
    (89) operadorComparacion -> . SMALLEROREQUALTHAN
    (93) operadorLogico -> . AND
    (94) operadorLogico -> . OR
    (95) operadorLogico -> . NOT

    FUNC            reduce using rule 27 (asignable -> valor .)
    SWITCH          reduce using rule 27 (asignable -> valor .)
    FOR             reduce using rule 27 (asignable -> valor .)
    SELECT          reduce using rule 27 (asignable -> valor .)
    VARIABLE        reduce using rule 27 (asignable -> valor .)
    FMT             reduce using rule 27 (asignable -> valor .)
    VAR             reduce using rule 27 (asignable -> valor .)
    LEN             reduce using rule 27 (asignable -> valor .)
    APPEND          reduce using rule 27 (asignable -> valor .)
    CAP             reduce using rule 27 (asignable -> valor .)
    $end            reduce using rule 27 (asignable -> valor .)
    LOCKR           reduce using rule 27 (asignable -> valor .)
    CASE            reduce using rule 27 (asignable -> valor .)
    RETURN          reduce using rule 27 (asignable -> valor .)
    SEMICOLON       reduce using rule 27 (asignable -> valor .)
    EQUAL           shift and go to state 86
    UNEQUAL         shift and go to state 87
    GREATERTHAN     shift and go to state 88
    SMALLERTHAN     shift and go to state 89
    GREATEROREQUALTHAN shift and go to state 90
    SMALLEROREQUALTHAN shift and go to state 91
    AND             shift and go to state 92
    OR              shift and go to state 93
    NOT             shift and go to state 94

    operadorComparacion            shift and go to state 84
    operadorLogico                 shift and go to state 85

state 57

    (28) asignable -> expresionMatematica .

    FUNC            reduce using rule 28 (asignable -> expresionMatematica .)
    SWITCH          reduce using rule 28 (asignable -> expresionMatematica .)
    FOR             reduce using rule 28 (asignable -> expresionMatematica .)
    SELECT          reduce using rule 28 (asignable -> expresionMatematica .)
    VARIABLE        reduce using rule 28 (asignable -> expresionMatematica .)
    FMT             reduce using rule 28 (asignable -> expresionMatematica .)
    VAR             reduce using rule 28 (asignable -> expresionMatematica .)
    LEN             reduce using rule 28 (asignable -> expresionMatematica .)
    APPEND          reduce using rule 28 (asignable -> expresionMatematica .)
    CAP             reduce using rule 28 (asignable -> expresionMatematica .)
    $end            reduce using rule 28 (asignable -> expresionMatematica .)
    LOCKR           reduce using rule 28 (asignable -> expresionMatematica .)
    CASE            reduce using rule 28 (asignable -> expresionMatematica .)
    RETURN          reduce using rule 28 (asignable -> expresionMatematica .)
    SEMICOLON       reduce using rule 28 (asignable -> expresionMatematica .)


state 58

    (29) asignable -> condicion .

    FUNC            reduce using rule 29 (asignable -> condicion .)
    SWITCH          reduce using rule 29 (asignable -> condicion .)
    FOR             reduce using rule 29 (asignable -> condicion .)
    SELECT          reduce using rule 29 (asignable -> condicion .)
    VARIABLE        reduce using rule 29 (asignable -> condicion .)
    FMT             reduce using rule 29 (asignable -> condicion .)
    VAR             reduce using rule 29 (asignable -> condicion .)
    LEN             reduce using rule 29 (asignable -> condicion .)
    APPEND          reduce using rule 29 (asignable -> condicion .)
    CAP             reduce using rule 29 (asignable -> condicion .)
    $end            reduce using rule 29 (asignable -> condicion .)
    LOCKR           reduce using rule 29 (asignable -> condicion .)
    CASE            reduce using rule 29 (asignable -> condicion .)
    RETURN          reduce using rule 29 (asignable -> condicion .)
    SEMICOLON       reduce using rule 29 (asignable -> condicion .)


state 59

    (105) valor -> factor .
    (96) expresionMatematica -> factor . operadorMatematico factor
    (97) operadorMatematico -> . PLUS
    (98) operadorMatematico -> . MINUS
    (99) operadorMatematico -> . TIMES
    (100) operadorMatematico -> . DIVIDE
    (101) operadorMatematico -> . MODULE

    EQUAL           reduce using rule 105 (valor -> factor .)
    UNEQUAL         reduce using rule 105 (valor -> factor .)
    GREATERTHAN     reduce using rule 105 (valor -> factor .)
    SMALLERTHAN     reduce using rule 105 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 105 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 105 (valor -> factor .)
    AND             reduce using rule 105 (valor -> factor .)
    OR              reduce using rule 105 (valor -> factor .)
    NOT             reduce using rule 105 (valor -> factor .)
    FUNC            reduce using rule 105 (valor -> factor .)
    SWITCH          reduce using rule 105 (valor -> factor .)
    FOR             reduce using rule 105 (valor -> factor .)
    SELECT          reduce using rule 105 (valor -> factor .)
    VARIABLE        reduce using rule 105 (valor -> factor .)
    FMT             reduce using rule 105 (valor -> factor .)
    VAR             reduce using rule 105 (valor -> factor .)
    LEN             reduce using rule 105 (valor -> factor .)
    APPEND          reduce using rule 105 (valor -> factor .)
    CAP             reduce using rule 105 (valor -> factor .)
    $end            reduce using rule 105 (valor -> factor .)
    LOCKR           reduce using rule 105 (valor -> factor .)
    CASE            reduce using rule 105 (valor -> factor .)
    RETURN          reduce using rule 105 (valor -> factor .)
    SEMICOLON       reduce using rule 105 (valor -> factor .)
    PLUS            shift and go to state 103
    MINUS           shift and go to state 104
    TIMES           shift and go to state 105
    DIVIDE          shift and go to state 106
    MODULE          shift and go to state 107

    operadorMatematico             shift and go to state 102

state 60

    (40) estructuraControl -> SELECT LOCKL . casesSelect LOCKR
    (41) casesSelect -> . caseSelect
    (42) casesSelect -> . caseSelect casesSelect
    (43) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    CASE            shift and go to state 110

    casesSelect                    shift and go to state 108
    caseSelect                     shift and go to state 109

state 61

    (26) declaracion -> varAssign tipoDato .
    (25) asignacion -> varAssign tipoDato . ASSIGN asignable

    FUNC            reduce using rule 26 (declaracion -> varAssign tipoDato .)
    SWITCH          reduce using rule 26 (declaracion -> varAssign tipoDato .)
    FOR             reduce using rule 26 (declaracion -> varAssign tipoDato .)
    SELECT          reduce using rule 26 (declaracion -> varAssign tipoDato .)
    VARIABLE        reduce using rule 26 (declaracion -> varAssign tipoDato .)
    FMT             reduce using rule 26 (declaracion -> varAssign tipoDato .)
    VAR             reduce using rule 26 (declaracion -> varAssign tipoDato .)
    LEN             reduce using rule 26 (declaracion -> varAssign tipoDato .)
    APPEND          reduce using rule 26 (declaracion -> varAssign tipoDato .)
    CAP             reduce using rule 26 (declaracion -> varAssign tipoDato .)
    $end            reduce using rule 26 (declaracion -> varAssign tipoDato .)
    LOCKR           reduce using rule 26 (declaracion -> varAssign tipoDato .)
    CASE            reduce using rule 26 (declaracion -> varAssign tipoDato .)
    RETURN          reduce using rule 26 (declaracion -> varAssign tipoDato .)
    ASSIGN          shift and go to state 111


state 62

    (23) asignacion -> varAssign ASSIGN . asignable
    (27) asignable -> . valor
    (28) asignable -> . expresionMatematica
    (29) asignable -> . condicion
    (104) valor -> . STRING
    (105) valor -> . factor
    (96) expresionMatematica -> . factor operadorMatematico factor
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    asignable                      shift and go to state 112
    valor                          shift and go to state 56
    expresionMatematica            shift and go to state 57
    condicion                      shift and go to state 58
    factor                         shift and go to state 59

state 63

    (90) tipoDato -> INTTYPE .

    ASSIGN          reduce using rule 90 (tipoDato -> INTTYPE .)
    FUNC            reduce using rule 90 (tipoDato -> INTTYPE .)
    SWITCH          reduce using rule 90 (tipoDato -> INTTYPE .)
    FOR             reduce using rule 90 (tipoDato -> INTTYPE .)
    SELECT          reduce using rule 90 (tipoDato -> INTTYPE .)
    VARIABLE        reduce using rule 90 (tipoDato -> INTTYPE .)
    FMT             reduce using rule 90 (tipoDato -> INTTYPE .)
    VAR             reduce using rule 90 (tipoDato -> INTTYPE .)
    LEN             reduce using rule 90 (tipoDato -> INTTYPE .)
    APPEND          reduce using rule 90 (tipoDato -> INTTYPE .)
    CAP             reduce using rule 90 (tipoDato -> INTTYPE .)
    $end            reduce using rule 90 (tipoDato -> INTTYPE .)
    LOCKR           reduce using rule 90 (tipoDato -> INTTYPE .)
    CASE            reduce using rule 90 (tipoDato -> INTTYPE .)
    RETURN          reduce using rule 90 (tipoDato -> INTTYPE .)
    LOCKL           reduce using rule 90 (tipoDato -> INTTYPE .)
    BRACKETR        reduce using rule 90 (tipoDato -> INTTYPE .)


state 64

    (91) tipoDato -> FLOATTYPE .

    ASSIGN          reduce using rule 91 (tipoDato -> FLOATTYPE .)
    FUNC            reduce using rule 91 (tipoDato -> FLOATTYPE .)
    SWITCH          reduce using rule 91 (tipoDato -> FLOATTYPE .)
    FOR             reduce using rule 91 (tipoDato -> FLOATTYPE .)
    SELECT          reduce using rule 91 (tipoDato -> FLOATTYPE .)
    VARIABLE        reduce using rule 91 (tipoDato -> FLOATTYPE .)
    FMT             reduce using rule 91 (tipoDato -> FLOATTYPE .)
    VAR             reduce using rule 91 (tipoDato -> FLOATTYPE .)
    LEN             reduce using rule 91 (tipoDato -> FLOATTYPE .)
    APPEND          reduce using rule 91 (tipoDato -> FLOATTYPE .)
    CAP             reduce using rule 91 (tipoDato -> FLOATTYPE .)
    $end            reduce using rule 91 (tipoDato -> FLOATTYPE .)
    LOCKR           reduce using rule 91 (tipoDato -> FLOATTYPE .)
    CASE            reduce using rule 91 (tipoDato -> FLOATTYPE .)
    RETURN          reduce using rule 91 (tipoDato -> FLOATTYPE .)
    LOCKL           reduce using rule 91 (tipoDato -> FLOATTYPE .)
    BRACKETR        reduce using rule 91 (tipoDato -> FLOATTYPE .)


state 65

    (92) tipoDato -> BOOLEANTYPE .

    ASSIGN          reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    FUNC            reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    SWITCH          reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    FOR             reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    SELECT          reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    VARIABLE        reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    FMT             reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    VAR             reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    LEN             reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    APPEND          reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    CAP             reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    $end            reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    LOCKR           reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    CASE            reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    RETURN          reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    LOCKL           reduce using rule 92 (tipoDato -> BOOLEANTYPE .)
    BRACKETR        reduce using rule 92 (tipoDato -> BOOLEANTYPE .)


state 66

    (60) impresionSencilla -> tipoImpresion BRACKETL . valores BRACKETR
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valores                        shift and go to state 113
    valor                          shift and go to state 114
    factor                         shift and go to state 48

state 67

    (63) impresionBufio -> FMT DOT . FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> FMT DOT . PRINTF BRACKETL STRING COMA valores BRACKETR
    (66) lecturaScanf -> FMT DOT . SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> FMT DOT . SSCANF BRACKETL opcionesLectura BRACKETR
    (61) tipoImpresion -> FMT DOT . PRINT
    (62) tipoImpresion -> FMT DOT . PRINTLN

    FPRINT          shift and go to state 115
    PRINTF          shift and go to state 116
    SCANF           shift and go to state 117
    SSCANF          shift and go to state 118
    PRINT           shift and go to state 119
    PRINTLN         shift and go to state 120


state 68

    (78) varAssign -> VAR VARIABLE .

    ASSIGN          reduce using rule 78 (varAssign -> VAR VARIABLE .)
    INTTYPE         reduce using rule 78 (varAssign -> VAR VARIABLE .)
    FLOATTYPE       reduce using rule 78 (varAssign -> VAR VARIABLE .)
    BOOLEANTYPE     reduce using rule 78 (varAssign -> VAR VARIABLE .)


state 69

    (53) lenSlice -> LEN BRACKETL . VARIABLE BRACKETR

    VARIABLE        shift and go to state 121


state 70

    (54) appendSlice -> APPEND BRACKETL . VARIABLE valores BRACKETR

    VARIABLE        shift and go to state 122


state 71

    (56) capSlice -> CAP BRACKETL . VARIABLE BRACKETR

    VARIABLE        shift and go to state 123


state 72

    (30) funcion -> FUNC VARIABLE BRACKETL . VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR

    VARIABLE        shift and go to state 124


state 73

    (106) factor -> VARIABLE .

    PLUS            reduce using rule 106 (factor -> VARIABLE .)
    MINUS           reduce using rule 106 (factor -> VARIABLE .)
    TIMES           reduce using rule 106 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 106 (factor -> VARIABLE .)
    MODULE          reduce using rule 106 (factor -> VARIABLE .)
    EQUAL           reduce using rule 106 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 106 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    AND             reduce using rule 106 (factor -> VARIABLE .)
    OR              reduce using rule 106 (factor -> VARIABLE .)
    NOT             reduce using rule 106 (factor -> VARIABLE .)
    FUNC            reduce using rule 106 (factor -> VARIABLE .)
    SWITCH          reduce using rule 106 (factor -> VARIABLE .)
    FOR             reduce using rule 106 (factor -> VARIABLE .)
    SELECT          reduce using rule 106 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 106 (factor -> VARIABLE .)
    FMT             reduce using rule 106 (factor -> VARIABLE .)
    VAR             reduce using rule 106 (factor -> VARIABLE .)
    LEN             reduce using rule 106 (factor -> VARIABLE .)
    APPEND          reduce using rule 106 (factor -> VARIABLE .)
    CAP             reduce using rule 106 (factor -> VARIABLE .)
    $end            reduce using rule 106 (factor -> VARIABLE .)
    LOCKR           reduce using rule 106 (factor -> VARIABLE .)
    CASE            reduce using rule 106 (factor -> VARIABLE .)
    RETURN          reduce using rule 106 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 106 (factor -> VARIABLE .)
    COMA            reduce using rule 106 (factor -> VARIABLE .)
    BRACKETR        reduce using rule 106 (factor -> VARIABLE .)
    LOCKL           reduce using rule 106 (factor -> VARIABLE .)
    COLON           reduce using rule 106 (factor -> VARIABLE .)


state 74

    (24) asignacion -> VARIABLE ASSIGN asignable .

    FUNC            reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    SWITCH          reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    FOR             reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    SELECT          reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    VARIABLE        reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    FMT             reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    VAR             reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    LEN             reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    APPEND          reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    CAP             reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    $end            reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    LOCKR           reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    CASE            reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    SEMICOLON       reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)
    RETURN          reduce using rule 24 (asignacion -> VARIABLE ASSIGN asignable .)


state 75

    (55) appendSlice -> VARIABLE ASSIGN APPEND . BRACKETL VARIABLE valores BRACKETR

    BRACKETL        shift and go to state 125


state 76

    (58) listaPushBack -> VARIABLE DOT PUSHBACK . BRACKETL tipoDato BRACKETR

    BRACKETL        shift and go to state 126


state 77

    (59) listaFront -> VARIABLE DOT FRONT . BRACKETL BRACKETR

    BRACKETL        shift and go to state 127


state 78

    (35) estructuraControl -> SWITCH VARIABLE LOCKL . cases LOCKR
    (44) cases -> . case
    (45) cases -> . case cases
    (46) case -> . CASE condicionCase COLON main

    CASE            shift and go to state 130

    cases                          shift and go to state 128
    case                           shift and go to state 129

state 79

    (36) estructuraControl -> FOR condicion LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    main                           shift and go to state 131
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 80

    (37) estructuraControl -> FOR asignacion SEMICOLON . condicion SEMICOLON iterador LOCKL main LOCKR
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    condicion                      shift and go to state 132
    valor                          shift and go to state 45
    factor                         shift and go to state 48

state 81

    (38) estructuraControl -> FOR VARIABLE COMA . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (77) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 133

    varShortAssign                 shift and go to state 134

state 82

    (24) asignacion -> VARIABLE ASSIGN . asignable
    (27) asignable -> . valor
    (28) asignable -> . expresionMatematica
    (29) asignable -> . condicion
    (104) valor -> . STRING
    (105) valor -> . factor
    (96) expresionMatematica -> . factor operadorMatematico factor
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    asignable                      shift and go to state 74
    valor                          shift and go to state 56
    expresionMatematica            shift and go to state 57
    condicion                      shift and go to state 58
    factor                         shift and go to state 59

state 83

    (39) estructuraControl -> FOR varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 135


state 84

    (82) condicion -> valor operadorComparacion . valor
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valor                          shift and go to state 136
    factor                         shift and go to state 48

state 85

    (83) condicion -> valor operadorLogico . valor
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valor                          shift and go to state 137
    factor                         shift and go to state 48

state 86

    (84) operadorComparacion -> EQUAL .

    STRING          reduce using rule 84 (operadorComparacion -> EQUAL .)
    VARIABLE        reduce using rule 84 (operadorComparacion -> EQUAL .)
    FLOAT           reduce using rule 84 (operadorComparacion -> EQUAL .)
    INTEGER         reduce using rule 84 (operadorComparacion -> EQUAL .)


state 87

    (85) operadorComparacion -> UNEQUAL .

    STRING          reduce using rule 85 (operadorComparacion -> UNEQUAL .)
    VARIABLE        reduce using rule 85 (operadorComparacion -> UNEQUAL .)
    FLOAT           reduce using rule 85 (operadorComparacion -> UNEQUAL .)
    INTEGER         reduce using rule 85 (operadorComparacion -> UNEQUAL .)


state 88

    (86) operadorComparacion -> GREATERTHAN .

    STRING          reduce using rule 86 (operadorComparacion -> GREATERTHAN .)
    VARIABLE        reduce using rule 86 (operadorComparacion -> GREATERTHAN .)
    FLOAT           reduce using rule 86 (operadorComparacion -> GREATERTHAN .)
    INTEGER         reduce using rule 86 (operadorComparacion -> GREATERTHAN .)


state 89

    (87) operadorComparacion -> SMALLERTHAN .

    STRING          reduce using rule 87 (operadorComparacion -> SMALLERTHAN .)
    VARIABLE        reduce using rule 87 (operadorComparacion -> SMALLERTHAN .)
    FLOAT           reduce using rule 87 (operadorComparacion -> SMALLERTHAN .)
    INTEGER         reduce using rule 87 (operadorComparacion -> SMALLERTHAN .)


state 90

    (88) operadorComparacion -> GREATEROREQUALTHAN .

    STRING          reduce using rule 88 (operadorComparacion -> GREATEROREQUALTHAN .)
    VARIABLE        reduce using rule 88 (operadorComparacion -> GREATEROREQUALTHAN .)
    FLOAT           reduce using rule 88 (operadorComparacion -> GREATEROREQUALTHAN .)
    INTEGER         reduce using rule 88 (operadorComparacion -> GREATEROREQUALTHAN .)


state 91

    (89) operadorComparacion -> SMALLEROREQUALTHAN .

    STRING          reduce using rule 89 (operadorComparacion -> SMALLEROREQUALTHAN .)
    VARIABLE        reduce using rule 89 (operadorComparacion -> SMALLEROREQUALTHAN .)
    FLOAT           reduce using rule 89 (operadorComparacion -> SMALLEROREQUALTHAN .)
    INTEGER         reduce using rule 89 (operadorComparacion -> SMALLEROREQUALTHAN .)


state 92

    (93) operadorLogico -> AND .

    STRING          reduce using rule 93 (operadorLogico -> AND .)
    VARIABLE        reduce using rule 93 (operadorLogico -> AND .)
    FLOAT           reduce using rule 93 (operadorLogico -> AND .)
    INTEGER         reduce using rule 93 (operadorLogico -> AND .)


state 93

    (94) operadorLogico -> OR .

    STRING          reduce using rule 94 (operadorLogico -> OR .)
    VARIABLE        reduce using rule 94 (operadorLogico -> OR .)
    FLOAT           reduce using rule 94 (operadorLogico -> OR .)
    INTEGER         reduce using rule 94 (operadorLogico -> OR .)


state 94

    (95) operadorLogico -> NOT .

    STRING          reduce using rule 95 (operadorLogico -> NOT .)
    VARIABLE        reduce using rule 95 (operadorLogico -> NOT .)
    FLOAT           reduce using rule 95 (operadorLogico -> NOT .)
    INTEGER         reduce using rule 95 (operadorLogico -> NOT .)


state 95

    (25) asignacion -> varAssign tipoDato . ASSIGN asignable

    ASSIGN          shift and go to state 111


state 96

    (47) estructuraDatos -> varShortAssign BRACEL INTEGER . BRACER tipoDato LOCKL valores LOCKR

    BRACER          shift and go to state 138


state 97

    (48) estructuraDatos -> varShortAssign BRACEL BRACER . tipoDato LOCKL valores LOCKR
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 139

state 98

    (49) estructuraDatos -> varShortAssign VARIABLE BRACEL . COLON BRACER
    (50) estructuraDatos -> varShortAssign VARIABLE BRACEL . INTEGER COLON BRACER
    (51) estructuraDatos -> varShortAssign VARIABLE BRACEL . COLON INTEGER BRACER
    (52) estructuraDatos -> varShortAssign VARIABLE BRACEL . INTEGER COLON INTEGER BRACER

    COLON           shift and go to state 140
    INTEGER         shift and go to state 141


state 99

    (65) lecturaReader -> varShortAssign VARIABLE DOT . READSTRING BRACKETL STRING BRACKETR

    READSTRING      shift and go to state 142


state 100

    (57) estructuraDatos -> varShortAssign LIST DOT . NEW BRACKETL BRACKETR

    NEW             shift and go to state 143


state 101

    (75) declaracion -> varShortAssign BUFIO DOT . NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> varShortAssign BUFIO DOT . NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    NEWREADER       shift and go to state 144
    NEWWRITER       shift and go to state 145


state 102

    (96) expresionMatematica -> factor operadorMatematico . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    factor                         shift and go to state 146

state 103

    (97) operadorMatematico -> PLUS .

    VARIABLE        reduce using rule 97 (operadorMatematico -> PLUS .)
    FLOAT           reduce using rule 97 (operadorMatematico -> PLUS .)
    INTEGER         reduce using rule 97 (operadorMatematico -> PLUS .)


state 104

    (98) operadorMatematico -> MINUS .

    VARIABLE        reduce using rule 98 (operadorMatematico -> MINUS .)
    FLOAT           reduce using rule 98 (operadorMatematico -> MINUS .)
    INTEGER         reduce using rule 98 (operadorMatematico -> MINUS .)


state 105

    (99) operadorMatematico -> TIMES .

    VARIABLE        reduce using rule 99 (operadorMatematico -> TIMES .)
    FLOAT           reduce using rule 99 (operadorMatematico -> TIMES .)
    INTEGER         reduce using rule 99 (operadorMatematico -> TIMES .)


state 106

    (100) operadorMatematico -> DIVIDE .

    VARIABLE        reduce using rule 100 (operadorMatematico -> DIVIDE .)
    FLOAT           reduce using rule 100 (operadorMatematico -> DIVIDE .)
    INTEGER         reduce using rule 100 (operadorMatematico -> DIVIDE .)


state 107

    (101) operadorMatematico -> MODULE .

    VARIABLE        reduce using rule 101 (operadorMatematico -> MODULE .)
    FLOAT           reduce using rule 101 (operadorMatematico -> MODULE .)
    INTEGER         reduce using rule 101 (operadorMatematico -> MODULE .)


state 108

    (40) estructuraControl -> SELECT LOCKL casesSelect . LOCKR

    LOCKR           shift and go to state 147


state 109

    (41) casesSelect -> caseSelect .
    (42) casesSelect -> caseSelect . casesSelect
    (41) casesSelect -> . caseSelect
    (42) casesSelect -> . caseSelect casesSelect
    (43) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    LOCKR           reduce using rule 41 (casesSelect -> caseSelect .)
    CASE            shift and go to state 110

    caseSelect                     shift and go to state 109
    casesSelect                    shift and go to state 148

state 110

    (43) caseSelect -> CASE . varShortAssign SMALLERTHAN MINUS COLON main
    (77) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 133

    varShortAssign                 shift and go to state 149

state 111

    (25) asignacion -> varAssign tipoDato ASSIGN . asignable
    (27) asignable -> . valor
    (28) asignable -> . expresionMatematica
    (29) asignable -> . condicion
    (104) valor -> . STRING
    (105) valor -> . factor
    (96) expresionMatematica -> . factor operadorMatematico factor
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    asignable                      shift and go to state 150
    valor                          shift and go to state 56
    expresionMatematica            shift and go to state 57
    condicion                      shift and go to state 58
    factor                         shift and go to state 59

state 112

    (23) asignacion -> varAssign ASSIGN asignable .

    FUNC            reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    SWITCH          reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    FOR             reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    SELECT          reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    VARIABLE        reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    FMT             reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    VAR             reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    LEN             reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    APPEND          reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    CAP             reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    $end            reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    LOCKR           reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    CASE            reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    SEMICOLON       reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)
    RETURN          reduce using rule 23 (asignacion -> varAssign ASSIGN asignable .)


state 113

    (60) impresionSencilla -> tipoImpresion BRACKETL valores . BRACKETR

    BRACKETR        shift and go to state 151


state 114

    (102) valores -> valor .
    (103) valores -> valor . COMA valores

    BRACKETR        reduce using rule 102 (valores -> valor .)
    LOCKR           reduce using rule 102 (valores -> valor .)
    COMA            shift and go to state 152


state 115

    (63) impresionBufio -> FMT DOT FPRINT . BRACKETL VARIABLE COMA STRING BRACKETR

    BRACKETL        shift and go to state 153


state 116

    (64) impresionFormato -> FMT DOT PRINTF . BRACKETL STRING COMA valores BRACKETR

    BRACKETL        shift and go to state 154


state 117

    (66) lecturaScanf -> FMT DOT SCANF . BRACKETL STRING opcionLectura BRACKETR

    BRACKETL        shift and go to state 155


state 118

    (70) lecturaSscanf -> FMT DOT SSCANF . BRACKETL opcionesLectura BRACKETR

    BRACKETL        shift and go to state 156


state 119

    (61) tipoImpresion -> FMT DOT PRINT .

    BRACKETL        reduce using rule 61 (tipoImpresion -> FMT DOT PRINT .)


state 120

    (62) tipoImpresion -> FMT DOT PRINTLN .

    BRACKETL        reduce using rule 62 (tipoImpresion -> FMT DOT PRINTLN .)


state 121

    (53) lenSlice -> LEN BRACKETL VARIABLE . BRACKETR

    BRACKETR        shift and go to state 157


state 122

    (54) appendSlice -> APPEND BRACKETL VARIABLE . valores BRACKETR
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valores                        shift and go to state 158
    valor                          shift and go to state 114
    factor                         shift and go to state 48

state 123

    (56) capSlice -> CAP BRACKETL VARIABLE . BRACKETR

    BRACKETR        shift and go to state 159


state 124

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE . tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 160

state 125

    (55) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL . VARIABLE valores BRACKETR

    VARIABLE        shift and go to state 161


state 126

    (58) listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL . tipoDato BRACKETR
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 162

state 127

    (59) listaFront -> VARIABLE DOT FRONT BRACKETL . BRACKETR

    BRACKETR        shift and go to state 163


state 128

    (35) estructuraControl -> SWITCH VARIABLE LOCKL cases . LOCKR

    LOCKR           shift and go to state 164


state 129

    (44) cases -> case .
    (45) cases -> case . cases
    (44) cases -> . case
    (45) cases -> . case cases
    (46) case -> . CASE condicionCase COLON main

    LOCKR           reduce using rule 44 (cases -> case .)
    CASE            shift and go to state 130

    case                           shift and go to state 129
    cases                          shift and go to state 165

state 130

    (46) case -> CASE . condicionCase COLON main
    (79) condicionCase -> . INTEGER
    (80) condicionCase -> . VARIABLE
    (81) condicionCase -> . condicion
    (82) condicion -> . valor operadorComparacion valor
    (83) condicion -> . valor operadorLogico valor
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    INTEGER         shift and go to state 167
    VARIABLE        shift and go to state 168
    STRING          shift and go to state 47
    FLOAT           shift and go to state 49

    condicionCase                  shift and go to state 166
    condicion                      shift and go to state 169
    valor                          shift and go to state 45
    factor                         shift and go to state 48

state 131

    (36) estructuraControl -> FOR condicion LOCKL main . LOCKR

    LOCKR           shift and go to state 170


state 132

    (37) estructuraControl -> FOR asignacion SEMICOLON condicion . SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 171


state 133

    (77) varShortAssign -> VARIABLE . SHORTASSIGN

    SHORTASSIGN     shift and go to state 38


state 134

    (38) estructuraControl -> FOR VARIABLE COMA varShortAssign . RANGE VARIABLE LOCKL main LOCKR

    RANGE           shift and go to state 172


state 135

    (39) estructuraControl -> FOR varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 173


state 136

    (82) condicion -> valor operadorComparacion valor .

    LOCKL           reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    FUNC            reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    SWITCH          reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    FOR             reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    SELECT          reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    VARIABLE        reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    FMT             reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    VAR             reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    LEN             reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    APPEND          reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    CAP             reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    $end            reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    LOCKR           reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    CASE            reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    RETURN          reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    SEMICOLON       reduce using rule 82 (condicion -> valor operadorComparacion valor .)
    COLON           reduce using rule 82 (condicion -> valor operadorComparacion valor .)


state 137

    (83) condicion -> valor operadorLogico valor .

    LOCKL           reduce using rule 83 (condicion -> valor operadorLogico valor .)
    FUNC            reduce using rule 83 (condicion -> valor operadorLogico valor .)
    SWITCH          reduce using rule 83 (condicion -> valor operadorLogico valor .)
    FOR             reduce using rule 83 (condicion -> valor operadorLogico valor .)
    SELECT          reduce using rule 83 (condicion -> valor operadorLogico valor .)
    VARIABLE        reduce using rule 83 (condicion -> valor operadorLogico valor .)
    FMT             reduce using rule 83 (condicion -> valor operadorLogico valor .)
    VAR             reduce using rule 83 (condicion -> valor operadorLogico valor .)
    LEN             reduce using rule 83 (condicion -> valor operadorLogico valor .)
    APPEND          reduce using rule 83 (condicion -> valor operadorLogico valor .)
    CAP             reduce using rule 83 (condicion -> valor operadorLogico valor .)
    $end            reduce using rule 83 (condicion -> valor operadorLogico valor .)
    LOCKR           reduce using rule 83 (condicion -> valor operadorLogico valor .)
    CASE            reduce using rule 83 (condicion -> valor operadorLogico valor .)
    RETURN          reduce using rule 83 (condicion -> valor operadorLogico valor .)
    SEMICOLON       reduce using rule 83 (condicion -> valor operadorLogico valor .)
    COLON           reduce using rule 83 (condicion -> valor operadorLogico valor .)


state 138

    (47) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER . tipoDato LOCKL valores LOCKR
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 174

state 139

    (48) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato . LOCKL valores LOCKR

    LOCKL           shift and go to state 175


state 140

    (49) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON . BRACER
    (51) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON . INTEGER BRACER

    BRACER          shift and go to state 176
    INTEGER         shift and go to state 177


state 141

    (50) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER . COLON BRACER
    (52) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER . COLON INTEGER BRACER

    COLON           shift and go to state 178


state 142

    (65) lecturaReader -> varShortAssign VARIABLE DOT READSTRING . BRACKETL STRING BRACKETR

    BRACKETL        shift and go to state 179


state 143

    (57) estructuraDatos -> varShortAssign LIST DOT NEW . BRACKETL BRACKETR

    BRACKETL        shift and go to state 180


state 144

    (75) declaracion -> varShortAssign BUFIO DOT NEWREADER . BRACKETL OS DOT STDIN BRACKETR

    BRACKETL        shift and go to state 181


state 145

    (76) declaracion -> varShortAssign BUFIO DOT NEWWRITER . BRACKETL OS DOT STDOUT BRACKETR

    BRACKETL        shift and go to state 182


state 146

    (96) expresionMatematica -> factor operadorMatematico factor .

    FUNC            reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    SWITCH          reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    FOR             reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    SELECT          reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    VARIABLE        reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    FMT             reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    VAR             reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    LEN             reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    APPEND          reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    CAP             reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    $end            reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    LOCKR           reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    CASE            reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    RETURN          reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)
    SEMICOLON       reduce using rule 96 (expresionMatematica -> factor operadorMatematico factor .)


state 147

    (40) estructuraControl -> SELECT LOCKL casesSelect LOCKR .

    FUNC            reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SWITCH          reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FOR             reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SELECT          reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VARIABLE        reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FMT             reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VAR             reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    LEN             reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    APPEND          reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    CAP             reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    $end            reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    LOCKR           reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    CASE            reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    RETURN          reduce using rule 40 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)


state 148

    (42) casesSelect -> caseSelect casesSelect .

    LOCKR           reduce using rule 42 (casesSelect -> caseSelect casesSelect .)


state 149

    (43) caseSelect -> CASE varShortAssign . SMALLERTHAN MINUS COLON main

    SMALLERTHAN     shift and go to state 183


state 150

    (25) asignacion -> varAssign tipoDato ASSIGN asignable .

    FUNC            reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SWITCH          reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FOR             reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SELECT          reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VARIABLE        reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FMT             reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VAR             reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    LEN             reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    APPEND          reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    CAP             reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    $end            reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    LOCKR           reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    CASE            reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SEMICOLON       reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    RETURN          reduce using rule 25 (asignacion -> varAssign tipoDato ASSIGN asignable .)


state 151

    (60) impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .

    FUNC            reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SWITCH          reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FOR             reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SELECT          reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VARIABLE        reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FMT             reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VAR             reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    LEN             reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    APPEND          reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    CAP             reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    $end            reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    LOCKR           reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    CASE            reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    RETURN          reduce using rule 60 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)


state 152

    (103) valores -> valor COMA . valores
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valor                          shift and go to state 114
    valores                        shift and go to state 184
    factor                         shift and go to state 48

state 153

    (63) impresionBufio -> FMT DOT FPRINT BRACKETL . VARIABLE COMA STRING BRACKETR

    VARIABLE        shift and go to state 185


state 154

    (64) impresionFormato -> FMT DOT PRINTF BRACKETL . STRING COMA valores BRACKETR

    STRING          shift and go to state 186


state 155

    (66) lecturaScanf -> FMT DOT SCANF BRACKETL . STRING opcionLectura BRACKETR

    STRING          shift and go to state 187


state 156

    (70) lecturaSscanf -> FMT DOT SSCANF BRACKETL . opcionesLectura BRACKETR
    (71) opcionesLectura -> . opciones
    (72) opcionesLectura -> . opciones COMA opcionesLectura
    (73) opciones -> . STRING
    (74) opciones -> . ampersand
    (69) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 190
    AMPERSON        shift and go to state 192

    opcionesLectura                shift and go to state 188
    opciones                       shift and go to state 189
    ampersand                      shift and go to state 191

state 157

    (53) lenSlice -> LEN BRACKETL VARIABLE BRACKETR .

    FUNC            reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    SWITCH          reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    FOR             reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    SELECT          reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    VARIABLE        reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    FMT             reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    VAR             reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    LEN             reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    APPEND          reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    CAP             reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    $end            reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    LOCKR           reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    CASE            reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    RETURN          reduce using rule 53 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)


state 158

    (54) appendSlice -> APPEND BRACKETL VARIABLE valores . BRACKETR

    BRACKETR        shift and go to state 193


state 159

    (56) capSlice -> CAP BRACKETL VARIABLE BRACKETR .

    FUNC            reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    SWITCH          reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    FOR             reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    SELECT          reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    VARIABLE        reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    FMT             reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    VAR             reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    LEN             reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    APPEND          reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    CAP             reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    $end            reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    LOCKR           reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    CASE            reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    RETURN          reduce using rule 56 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)


state 160

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato . BRACKETR tipoDato LOCKL cuerpos LOCKR

    BRACKETR        shift and go to state 194


state 161

    (55) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE . valores BRACKETR
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valores                        shift and go to state 195
    valor                          shift and go to state 114
    factor                         shift and go to state 48

state 162

    (58) listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato . BRACKETR

    BRACKETR        shift and go to state 196


state 163

    (59) listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .

    FUNC            reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    SWITCH          reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    FOR             reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    SELECT          reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    VARIABLE        reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    FMT             reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    VAR             reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    LEN             reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    APPEND          reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    CAP             reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    $end            reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    LOCKR           reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    CASE            reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    RETURN          reduce using rule 59 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)


state 164

    (35) estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .

    FUNC            reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SWITCH          reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FOR             reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SELECT          reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VARIABLE        reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FMT             reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VAR             reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    LEN             reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    APPEND          reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    CAP             reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    $end            reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    LOCKR           reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    CASE            reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    RETURN          reduce using rule 35 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)


state 165

    (45) cases -> case cases .

    LOCKR           reduce using rule 45 (cases -> case cases .)


state 166

    (46) case -> CASE condicionCase . COLON main

    COLON           shift and go to state 197


state 167

    (79) condicionCase -> INTEGER .
    (108) factor -> INTEGER .

    COLON           reduce using rule 79 (condicionCase -> INTEGER .)
    EQUAL           reduce using rule 108 (factor -> INTEGER .)
    UNEQUAL         reduce using rule 108 (factor -> INTEGER .)
    GREATERTHAN     reduce using rule 108 (factor -> INTEGER .)
    SMALLERTHAN     reduce using rule 108 (factor -> INTEGER .)
    GREATEROREQUALTHAN reduce using rule 108 (factor -> INTEGER .)
    SMALLEROREQUALTHAN reduce using rule 108 (factor -> INTEGER .)
    AND             reduce using rule 108 (factor -> INTEGER .)
    OR              reduce using rule 108 (factor -> INTEGER .)
    NOT             reduce using rule 108 (factor -> INTEGER .)


state 168

    (80) condicionCase -> VARIABLE .
    (106) factor -> VARIABLE .

    COLON           reduce using rule 80 (condicionCase -> VARIABLE .)
    EQUAL           reduce using rule 106 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 106 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 106 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 106 (factor -> VARIABLE .)
    AND             reduce using rule 106 (factor -> VARIABLE .)
    OR              reduce using rule 106 (factor -> VARIABLE .)
    NOT             reduce using rule 106 (factor -> VARIABLE .)


state 169

    (81) condicionCase -> condicion .

    COLON           reduce using rule 81 (condicionCase -> condicion .)


state 170

    (36) estructuraControl -> FOR condicion LOCKL main LOCKR .

    FUNC            reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SWITCH          reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FOR             reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SELECT          reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VARIABLE        reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FMT             reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VAR             reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    LEN             reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    APPEND          reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    CAP             reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    $end            reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    LOCKR           reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    CASE            reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    RETURN          reduce using rule 36 (estructuraControl -> FOR condicion LOCKL main LOCKR .)


state 171

    (37) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON . iterador LOCKL main LOCKR
    (109) iterador -> . VARIABLE INCREMENT
    (110) iterador -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 199

    iterador                       shift and go to state 198

state 172

    (38) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 200


state 173

    (39) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    varShortAssign                 shift and go to state 15
    main                           shift and go to state 201
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 174

    (47) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato . LOCKL valores LOCKR

    LOCKL           shift and go to state 202


state 175

    (48) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL . valores LOCKR
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valores                        shift and go to state 203
    valor                          shift and go to state 114
    factor                         shift and go to state 48

state 176

    (49) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .

    FUNC            reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    SWITCH          reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    FOR             reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    SELECT          reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    VARIABLE        reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    FMT             reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    VAR             reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    LEN             reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    APPEND          reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    CAP             reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    $end            reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    LOCKR           reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    CASE            reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    RETURN          reduce using rule 49 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)


state 177

    (51) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER . BRACER

    BRACER          shift and go to state 204


state 178

    (50) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON . BRACER
    (52) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON . INTEGER BRACER

    BRACER          shift and go to state 206
    INTEGER         shift and go to state 205


state 179

    (65) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL . STRING BRACKETR

    STRING          shift and go to state 207


state 180

    (57) estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL . BRACKETR

    BRACKETR        shift and go to state 208


state 181

    (75) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL . OS DOT STDIN BRACKETR

    OS              shift and go to state 209


state 182

    (76) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL . OS DOT STDOUT BRACKETR

    OS              shift and go to state 210


state 183

    (43) caseSelect -> CASE varShortAssign SMALLERTHAN . MINUS COLON main

    MINUS           shift and go to state 211


state 184

    (103) valores -> valor COMA valores .

    BRACKETR        reduce using rule 103 (valores -> valor COMA valores .)
    LOCKR           reduce using rule 103 (valores -> valor COMA valores .)


state 185

    (63) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE . COMA STRING BRACKETR

    COMA            shift and go to state 212


state 186

    (64) impresionFormato -> FMT DOT PRINTF BRACKETL STRING . COMA valores BRACKETR

    COMA            shift and go to state 213


state 187

    (66) lecturaScanf -> FMT DOT SCANF BRACKETL STRING . opcionLectura BRACKETR
    (67) opcionLectura -> . COMA opciones
    (68) opcionLectura -> . COMA opciones opcionLectura

    COMA            shift and go to state 215

    opcionLectura                  shift and go to state 214

state 188

    (70) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura . BRACKETR

    BRACKETR        shift and go to state 216


state 189

    (71) opcionesLectura -> opciones .
    (72) opcionesLectura -> opciones . COMA opcionesLectura

    BRACKETR        reduce using rule 71 (opcionesLectura -> opciones .)
    COMA            shift and go to state 217


state 190

    (73) opciones -> STRING .

    COMA            reduce using rule 73 (opciones -> STRING .)
    BRACKETR        reduce using rule 73 (opciones -> STRING .)


state 191

    (74) opciones -> ampersand .

    COMA            reduce using rule 74 (opciones -> ampersand .)
    BRACKETR        reduce using rule 74 (opciones -> ampersand .)


state 192

    (69) ampersand -> AMPERSON . VARIABLE

    VARIABLE        shift and go to state 218


state 193

    (54) appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .

    FUNC            reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    SWITCH          reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    FOR             reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    SELECT          reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    VARIABLE        reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    FMT             reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    VAR             reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    LEN             reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    APPEND          reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    CAP             reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    $end            reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    LOCKR           reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    CASE            reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    RETURN          reduce using rule 54 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)


state 194

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR . tipoDato LOCKL cuerpos LOCKR
    (90) tipoDato -> . INTTYPE
    (91) tipoDato -> . FLOATTYPE
    (92) tipoDato -> . BOOLEANTYPE

    INTTYPE         shift and go to state 63
    FLOATTYPE       shift and go to state 64
    BOOLEANTYPE     shift and go to state 65

    tipoDato                       shift and go to state 219

state 195

    (55) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores . BRACKETR

    BRACKETR        shift and go to state 220


state 196

    (58) listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .

    FUNC            reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    SWITCH          reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    FOR             reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    SELECT          reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    VARIABLE        reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    FMT             reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    VAR             reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    LEN             reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    APPEND          reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    CAP             reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    $end            reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    LOCKR           reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    CASE            reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)
    RETURN          reduce using rule 58 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR .)


state 197

    (46) case -> CASE condicionCase COLON . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    main                           shift and go to state 221
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 198

    (37) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador . LOCKL main LOCKR

    LOCKL           shift and go to state 222


state 199

    (109) iterador -> VARIABLE . INCREMENT
    (110) iterador -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 223
    DECREMENT       shift and go to state 224


state 200

    (38) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 225


state 201

    (39) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 226


state 202

    (47) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL . valores LOCKR
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valores                        shift and go to state 227
    valor                          shift and go to state 114
    factor                         shift and go to state 48

state 203

    (48) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores . LOCKR

    LOCKR           shift and go to state 228


state 204

    (51) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .

    FUNC            reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    SWITCH          reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    FOR             reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    SELECT          reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    VARIABLE        reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    FMT             reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    VAR             reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    LEN             reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    APPEND          reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    CAP             reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    $end            reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    LOCKR           reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    CASE            reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    RETURN          reduce using rule 51 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)


state 205

    (52) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER . BRACER

    BRACER          shift and go to state 229


state 206

    (50) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .

    FUNC            reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    SWITCH          reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    FOR             reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    SELECT          reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    VARIABLE        reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    FMT             reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    VAR             reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    LEN             reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    APPEND          reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    CAP             reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    $end            reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    LOCKR           reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    CASE            reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    RETURN          reduce using rule 50 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)


state 207

    (65) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING . BRACKETR

    BRACKETR        shift and go to state 230


state 208

    (57) estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .

    FUNC            reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    SWITCH          reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    FOR             reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    SELECT          reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    VARIABLE        reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    FMT             reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    VAR             reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    LEN             reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    APPEND          reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    CAP             reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    $end            reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    LOCKR           reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    CASE            reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    RETURN          reduce using rule 57 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)


state 209

    (75) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS . DOT STDIN BRACKETR

    DOT             shift and go to state 231


state 210

    (76) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS . DOT STDOUT BRACKETR

    DOT             shift and go to state 232


state 211

    (43) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS . COLON main

    COLON           shift and go to state 233


state 212

    (63) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA . STRING BRACKETR

    STRING          shift and go to state 234


state 213

    (64) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA . valores BRACKETR
    (102) valores -> . valor
    (103) valores -> . valor COMA valores
    (104) valor -> . STRING
    (105) valor -> . factor
    (106) factor -> . VARIABLE
    (107) factor -> . FLOAT
    (108) factor -> . INTEGER

    STRING          shift and go to state 47
    VARIABLE        shift and go to state 73
    FLOAT           shift and go to state 49
    INTEGER         shift and go to state 50

    valores                        shift and go to state 235
    valor                          shift and go to state 114
    factor                         shift and go to state 48

state 214

    (66) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura . BRACKETR

    BRACKETR        shift and go to state 236


state 215

    (67) opcionLectura -> COMA . opciones
    (68) opcionLectura -> COMA . opciones opcionLectura
    (73) opciones -> . STRING
    (74) opciones -> . ampersand
    (69) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 190
    AMPERSON        shift and go to state 192

    opciones                       shift and go to state 237
    ampersand                      shift and go to state 191

state 216

    (70) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .

    FUNC            reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SWITCH          reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FOR             reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SELECT          reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VARIABLE        reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FMT             reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VAR             reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    LEN             reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    APPEND          reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    CAP             reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    $end            reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    LOCKR           reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    CASE            reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    RETURN          reduce using rule 70 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)


state 217

    (72) opcionesLectura -> opciones COMA . opcionesLectura
    (71) opcionesLectura -> . opciones
    (72) opcionesLectura -> . opciones COMA opcionesLectura
    (73) opciones -> . STRING
    (74) opciones -> . ampersand
    (69) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 190
    AMPERSON        shift and go to state 192

    opciones                       shift and go to state 189
    opcionesLectura                shift and go to state 238
    ampersand                      shift and go to state 191

state 218

    (69) ampersand -> AMPERSON VARIABLE .

    COMA            reduce using rule 69 (ampersand -> AMPERSON VARIABLE .)
    BRACKETR        reduce using rule 69 (ampersand -> AMPERSON VARIABLE .)


state 219

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato . LOCKL cuerpos LOCKR

    LOCKL           shift and go to state 239


state 220

    (55) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .

    FUNC            reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    SWITCH          reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    FOR             reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    SELECT          reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    VARIABLE        reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    FMT             reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    VAR             reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    LEN             reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    APPEND          reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    CAP             reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    $end            reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    LOCKR           reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    CASE            reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    RETURN          reduce using rule 55 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)


state 221

    (46) case -> CASE condicionCase COLON main .

    CASE            reduce using rule 46 (case -> CASE condicionCase COLON main .)
    LOCKR           reduce using rule 46 (case -> CASE condicionCase COLON main .)


state 222

    (37) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    asignacion                     shift and go to state 8
    main                           shift and go to state 240
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 223

    (109) iterador -> VARIABLE INCREMENT .

    LOCKL           reduce using rule 109 (iterador -> VARIABLE INCREMENT .)


state 224

    (110) iterador -> VARIABLE DECREMENT .

    LOCKL           reduce using rule 110 (iterador -> VARIABLE DECREMENT .)


state 225

    (38) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    varShortAssign                 shift and go to state 15
    main                           shift and go to state 241
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 226

    (39) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LEN             reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    APPEND          reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CAP             reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    RETURN          reduce using rule 39 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 227

    (47) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores . LOCKR

    LOCKR           shift and go to state 242


state 228

    (48) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .

    FUNC            reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    SWITCH          reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    FOR             reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    SELECT          reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    VARIABLE        reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    FMT             reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    VAR             reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    LEN             reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    APPEND          reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    CAP             reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    $end            reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    LOCKR           reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    CASE            reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    RETURN          reduce using rule 48 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)


state 229

    (52) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .

    FUNC            reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    SWITCH          reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    FOR             reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    SELECT          reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    VARIABLE        reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    FMT             reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    VAR             reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    LEN             reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    APPEND          reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    CAP             reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    $end            reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    LOCKR           reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    CASE            reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    RETURN          reduce using rule 52 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)


state 230

    (65) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .

    FUNC            reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SWITCH          reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FOR             reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SELECT          reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VARIABLE        reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FMT             reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VAR             reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    LEN             reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    APPEND          reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    CAP             reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    $end            reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    LOCKR           reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    CASE            reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    RETURN          reduce using rule 65 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)


state 231

    (75) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT . STDIN BRACKETR

    STDIN           shift and go to state 243


state 232

    (76) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT . STDOUT BRACKETR

    STDOUT          shift and go to state 244


state 233

    (43) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (30) funcion -> . FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    FUNC            shift and go to state 11
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    varShortAssign                 shift and go to state 15
    main                           shift and go to state 245
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 234

    (63) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING . BRACKETR

    BRACKETR        shift and go to state 246


state 235

    (64) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores . BRACKETR

    BRACKETR        shift and go to state 247


state 236

    (66) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .

    FUNC            reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SWITCH          reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FOR             reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SELECT          reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VARIABLE        reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FMT             reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VAR             reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    LEN             reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    APPEND          reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    CAP             reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    $end            reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    LOCKR           reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    CASE            reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    RETURN          reduce using rule 66 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)


state 237

    (67) opcionLectura -> COMA opciones .
    (68) opcionLectura -> COMA opciones . opcionLectura
    (67) opcionLectura -> . COMA opciones
    (68) opcionLectura -> . COMA opciones opcionLectura

    BRACKETR        reduce using rule 67 (opcionLectura -> COMA opciones .)
    COMA            shift and go to state 215

    opcionLectura                  shift and go to state 248

state 238

    (72) opcionesLectura -> opciones COMA opcionesLectura .

    BRACKETR        reduce using rule 72 (opcionesLectura -> opciones COMA opcionesLectura .)


state 239

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL . cuerpos LOCKR
    (31) cuerpos -> . cuerpo
    (32) cuerpos -> . cuerpo cuerpos
    (33) cuerpo -> . ejecutable
    (34) cuerpo -> . RETURN VARIABLE
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    RETURN          shift and go to state 252
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    cuerpos                        shift and go to state 249
    cuerpo                         shift and go to state 250
    ejecutable                     shift and go to state 251
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 240

    (37) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main . LOCKR

    LOCKR           shift and go to state 253


state 241

    (38) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 254


state 242

    (47) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .

    FUNC            reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    SWITCH          reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    FOR             reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    SELECT          reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    VARIABLE        reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    FMT             reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    VAR             reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    LEN             reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    APPEND          reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    CAP             reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    $end            reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    LOCKR           reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    CASE            reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    RETURN          reduce using rule 47 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)


state 243

    (75) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN . BRACKETR

    BRACKETR        shift and go to state 255


state 244

    (76) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT . BRACKETR

    BRACKETR        shift and go to state 256


state 245

    (43) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .

    CASE            reduce using rule 43 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)
    LOCKR           reduce using rule 43 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)


state 246

    (63) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .

    FUNC            reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SWITCH          reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FOR             reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SELECT          reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VARIABLE        reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FMT             reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VAR             reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    LEN             reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    APPEND          reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    CAP             reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    $end            reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    LOCKR           reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    CASE            reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    RETURN          reduce using rule 63 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)


state 247

    (64) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .

    FUNC            reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SWITCH          reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FOR             reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SELECT          reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VARIABLE        reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FMT             reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VAR             reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    LEN             reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    APPEND          reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    CAP             reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    $end            reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    LOCKR           reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    CASE            reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    RETURN          reduce using rule 64 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)


state 248

    (68) opcionLectura -> COMA opciones opcionLectura .

    BRACKETR        reduce using rule 68 (opcionLectura -> COMA opciones opcionLectura .)


state 249

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos . LOCKR

    LOCKR           shift and go to state 257


state 250

    (31) cuerpos -> cuerpo .
    (32) cuerpos -> cuerpo . cuerpos
    (31) cuerpos -> . cuerpo
    (32) cuerpos -> . cuerpo cuerpos
    (33) cuerpo -> . ejecutable
    (34) cuerpo -> . RETURN VARIABLE
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (35) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (36) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (37) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (38) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (39) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (40) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (47) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (48) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (49) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (50) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (51) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (52) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (57) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (11) impresion -> . impresionSencilla
    (12) impresion -> . impresionBufio
    (13) impresion -> . impresionFormato
    (26) declaracion -> . varAssign tipoDato
    (75) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (76) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (22) asignacion -> . varShortAssign asignable
    (23) asignacion -> . varAssign ASSIGN asignable
    (24) asignacion -> . VARIABLE ASSIGN asignable
    (25) asignacion -> . varAssign tipoDato ASSIGN asignable
    (14) lectura -> . lecturaReader
    (15) lectura -> . lecturaScanf
    (16) lectura -> . lecturaSscanf
    (17) metodos -> . lenSlice
    (18) metodos -> . appendSlice
    (19) metodos -> . capSlice
    (20) metodos -> . listaPushBack
    (21) metodos -> . listaFront
    (77) varShortAssign -> . VARIABLE SHORTASSIGN
    (60) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (63) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (64) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (78) varAssign -> . VAR VARIABLE
    (65) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (66) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (70) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (53) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (54) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (55) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (56) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (58) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL tipoDato BRACKETR
    (59) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (61) tipoImpresion -> . FMT DOT PRINT
    (62) tipoImpresion -> . FMT DOT PRINTLN

    LOCKR           reduce using rule 31 (cuerpos -> cuerpo .)
    RETURN          shift and go to state 252
    SWITCH          shift and go to state 13
    FOR             shift and go to state 14
    SELECT          shift and go to state 16
    VARIABLE        shift and go to state 12
    FMT             shift and go to state 30
    VAR             shift and go to state 31
    LEN             shift and go to state 32
    APPEND          shift and go to state 33
    CAP             shift and go to state 34

    cuerpo                         shift and go to state 250
    cuerpos                        shift and go to state 258
    ejecutable                     shift and go to state 251
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    varShortAssign                 shift and go to state 15
    impresionSencilla              shift and go to state 17
    impresionBufio                 shift and go to state 18
    impresionFormato               shift and go to state 19
    varAssign                      shift and go to state 20
    lecturaReader                  shift and go to state 21
    lecturaScanf                   shift and go to state 22
    lecturaSscanf                  shift and go to state 23
    lenSlice                       shift and go to state 24
    appendSlice                    shift and go to state 25
    capSlice                       shift and go to state 26
    listaPushBack                  shift and go to state 27
    listaFront                     shift and go to state 28
    tipoImpresion                  shift and go to state 29

state 251

    (33) cuerpo -> ejecutable .

    RETURN          reduce using rule 33 (cuerpo -> ejecutable .)
    SWITCH          reduce using rule 33 (cuerpo -> ejecutable .)
    FOR             reduce using rule 33 (cuerpo -> ejecutable .)
    SELECT          reduce using rule 33 (cuerpo -> ejecutable .)
    VARIABLE        reduce using rule 33 (cuerpo -> ejecutable .)
    FMT             reduce using rule 33 (cuerpo -> ejecutable .)
    VAR             reduce using rule 33 (cuerpo -> ejecutable .)
    LEN             reduce using rule 33 (cuerpo -> ejecutable .)
    APPEND          reduce using rule 33 (cuerpo -> ejecutable .)
    CAP             reduce using rule 33 (cuerpo -> ejecutable .)
    LOCKR           reduce using rule 33 (cuerpo -> ejecutable .)


state 252

    (34) cuerpo -> RETURN . VARIABLE

    VARIABLE        shift and go to state 259


state 253

    (37) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .

    FUNC            reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SWITCH          reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FOR             reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SELECT          reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VARIABLE        reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FMT             reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VAR             reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    LEN             reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    APPEND          reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    CAP             reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    $end            reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    LOCKR           reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    CASE            reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    RETURN          reduce using rule 37 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)


state 254

    (38) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LEN             reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    APPEND          reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CAP             reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    RETURN          reduce using rule 38 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 255

    (75) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .

    FUNC            reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SWITCH          reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FOR             reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SELECT          reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VARIABLE        reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FMT             reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VAR             reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    LEN             reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    APPEND          reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    CAP             reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    $end            reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    LOCKR           reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    CASE            reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    RETURN          reduce using rule 75 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)


state 256

    (76) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .

    FUNC            reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SWITCH          reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FOR             reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SELECT          reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VARIABLE        reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FMT             reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VAR             reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    LEN             reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    APPEND          reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    CAP             reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    $end            reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    LOCKR           reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    CASE            reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    RETURN          reduce using rule 76 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)


state 257

    (30) funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR .

    $end            reduce using rule 30 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR .)
    LOCKR           reduce using rule 30 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR .)
    CASE            reduce using rule 30 (funcion -> FUNC VARIABLE BRACKETL VARIABLE tipoDato BRACKETR tipoDato LOCKL cuerpos LOCKR .)


state 258

    (32) cuerpos -> cuerpo cuerpos .

    LOCKR           reduce using rule 32 (cuerpos -> cuerpo cuerpos .)


state 259

    (34) cuerpo -> RETURN VARIABLE .

    RETURN          reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    SWITCH          reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    FOR             reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    SELECT          reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    VARIABLE        reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    FMT             reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    VAR             reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    LEN             reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    APPEND          reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    CAP             reduce using rule 34 (cuerpo -> RETURN VARIABLE .)
    LOCKR           reduce using rule 34 (cuerpo -> RETURN VARIABLE .)

