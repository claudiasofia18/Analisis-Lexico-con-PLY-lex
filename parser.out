Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AMPERSON
    APPEND
    BRACEL
    BRACER
    BREAK
    CAP
    CHAN
    CONST
    DECREMENT
    DEFAULT
    DEFER
    ELSE
    ERROR
    FALLTHROUGH
    FALSE
    FOR
    FRONT
    FUNCION
    GO
    GOTO
    IF
    IMPORT
    INCREMENT
    INTERFACE
    LEN
    LIST
    MAP
    NEW
    PACKAGE
    PUSHBACK
    RANGE
    RETURN
    SCANF
    SELECT
    SEMICOLON
    SSCANF
    STRINGTYPE
    STRUCT
    TRUE
    TYPE

Grammar

Rule 0     S' -> ejecutable
Rule 1     ejecutable -> estructuraControl
Rule 2     ejecutable -> impresion
Rule 3     ejecutable -> declaracion
Rule 4     ejecutable -> asignacion
Rule 5     ejecutable -> ejecutable
Rule 6     impresion -> impresionSencilla
Rule 7     impresion -> impresionBufio
Rule 8     impresion -> impresionFormato
Rule 9     declaracion -> varAssign tipoDato
Rule 10    asignacion -> varShortAssign asignable
Rule 11    asignacion -> varAssign ASSIGN asignable
Rule 12    asignacion -> VARIABLE ASSIGN asignable
Rule 13    asignable -> valor
Rule 14    asignable -> expresionMatematica
Rule 15    asignable -> condicion
Rule 16    estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR
Rule 17    cases -> case
Rule 18    cases -> case cases
Rule 19    case -> CASE condicionCase COLON ejecutable
Rule 20    impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR
Rule 21    tipoImpresion -> FMT DOT PRINT
Rule 22    tipoImpresion -> FMT DOT PRINTLN
Rule 23    impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
Rule 24    impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
Rule 25    declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
Rule 26    varShortAssign -> VARIABLE SHORTASSIGN
Rule 27    varAssign -> VAR VARIABLE
Rule 28    condicionCase -> INTEGER
Rule 29    condicionCase -> VARIABLE
Rule 30    condicionCase -> condicion
Rule 31    condicion -> valor operadorComparacion valor
Rule 32    condicion -> valor operadorLogico valor
Rule 33    operadorComparacion -> EQUAL
Rule 34    operadorComparacion -> UNEQUAL
Rule 35    operadorComparacion -> GREATERTHAN
Rule 36    operadorComparacion -> SMALLERTHAN
Rule 37    operadorComparacion -> GREATEROREQUALTHAN
Rule 38    operadorComparacion -> SMALLEROREQUALTHAN
Rule 39    tipoDato -> INTTYPE
Rule 40    tipoDato -> FLOATTYPE
Rule 41    tipoDato -> BOOLEANTYPE
Rule 42    operadorLogico -> AND
Rule 43    operadorLogico -> OR
Rule 44    operadorLogico -> NOT
Rule 45    expresionMatematica -> factor operadorMatematico factor
Rule 46    operadorMatematico -> PLUS
Rule 47    operadorMatematico -> MINUS
Rule 48    operadorMatematico -> TIMES
Rule 49    operadorMatematico -> DIVIDE
Rule 50    operadorMatematico -> MODULE
Rule 51    valores -> valor
Rule 52    valores -> valor COMA valores
Rule 53    valor -> STRING
Rule 54    valor -> factor
Rule 55    factor -> VARIABLE
Rule 56    factor -> FLOAT
Rule 57    factor -> INTEGER

Terminals, with rules where they appear

AMPERSON             : 
AND                  : 42
APPEND               : 
ASSIGN               : 11 12
BOOLEANTYPE          : 41
BRACEL               : 
BRACER               : 
BRACKETL             : 20 23 24 25
BRACKETR             : 20 23 24 25
BREAK                : 
BUFIO                : 25
CAP                  : 
CASE                 : 19
CHAN                 : 
COLON                : 19
COMA                 : 23 24 52
CONST                : 
DECREMENT            : 
DEFAULT              : 
DEFER                : 
DIVIDE               : 49
DOT                  : 21 22 23 24 25 25
ELSE                 : 
EQUAL                : 33
ERROR                : 
FALLTHROUGH          : 
FALSE                : 
FLOAT                : 56
FLOATTYPE            : 40
FMT                  : 21 22 23 24
FOR                  : 
FPRINT               : 23
FRONT                : 
FUNCION              : 
GO                   : 
GOTO                 : 
GREATEROREQUALTHAN   : 37
GREATERTHAN          : 35
IF                   : 
IMPORT               : 
INCREMENT            : 
INTEGER              : 28 57
INTERFACE            : 
INTTYPE              : 39
LEN                  : 
LIST                 : 
LOCKL                : 16
LOCKR                : 16
MAP                  : 
MINUS                : 47
MODULE               : 50
NEW                  : 
NEWWRITER            : 25
NOT                  : 44
OR                   : 43
OS                   : 25
PACKAGE              : 
PLUS                 : 46
PRINT                : 21
PRINTF               : 24
PRINTLN              : 22
PUSHBACK             : 
RANGE                : 
RETURN               : 
SCANF                : 
SELECT               : 
SEMICOLON            : 
SHORTASSIGN          : 26
SMALLEROREQUALTHAN   : 38
SMALLERTHAN          : 36
SSCANF               : 
STDOUT               : 25
STRING               : 23 24 53
STRINGTYPE           : 
STRUCT               : 
SWITCH               : 16
TIMES                : 48
TRUE                 : 
TYPE                 : 
UNEQUAL              : 34
VAR                  : 27
VARIABLE             : 12 16 23 26 27 29 55
error                : 

Nonterminals, with rules where they appear

asignable            : 10 11 12
asignacion           : 4
case                 : 17 18
cases                : 16 18
condicion            : 15 30
condicionCase        : 19
declaracion          : 3
ejecutable           : 5 19 0
estructuraControl    : 1
expresionMatematica  : 14
factor               : 45 45 54
impresion            : 2
impresionBufio       : 7
impresionFormato     : 8
impresionSencilla    : 6
operadorComparacion  : 31
operadorLogico       : 32
operadorMatematico   : 45
tipoDato             : 9
tipoImpresion        : 20
valor                : 13 31 31 32 32 51 52
valores              : 20 24 52
varAssign            : 9 11
varShortAssign       : 10 25

Parsing method: LALR

state 0

    (0) S' -> . ejecutable
    (1) ejecutable -> . estructuraControl
    (2) ejecutable -> . impresion
    (3) ejecutable -> . declaracion
    (4) ejecutable -> . asignacion
    (5) ejecutable -> . ejecutable
    (16) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (6) impresion -> . impresionSencilla
    (7) impresion -> . impresionBufio
    (8) impresion -> . impresionFormato
    (9) declaracion -> . varAssign tipoDato
    (25) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (10) asignacion -> . varShortAssign asignable
    (11) asignacion -> . varAssign ASSIGN asignable
    (12) asignacion -> . VARIABLE ASSIGN asignable
    (20) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (23) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (24) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (27) varAssign -> . VAR VARIABLE
    (26) varShortAssign -> . VARIABLE SHORTASSIGN
    (21) tipoImpresion -> . FMT DOT PRINT
    (22) tipoImpresion -> . FMT DOT PRINTLN

    SWITCH          shift and go to state 6
    VARIABLE        shift and go to state 7
    FMT             shift and go to state 14
    VAR             shift and go to state 15

    ejecutable                     shift and go to state 1
    estructuraControl              shift and go to state 2
    impresion                      shift and go to state 3
    declaracion                    shift and go to state 4
    asignacion                     shift and go to state 5
    impresionSencilla              shift and go to state 8
    impresionBufio                 shift and go to state 9
    impresionFormato               shift and go to state 10
    varAssign                      shift and go to state 11
    varShortAssign                 shift and go to state 12
    tipoImpresion                  shift and go to state 13

state 1

    (0) S' -> ejecutable .
    (5) ejecutable -> ejecutable .

