Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CHAN
    CONST
    DEFAULT
    DEFER
    ELSE
    ERROR
    FALLTHROUGH
    FALSE
    GO
    GOTO
    IF
    IMPORT
    INTERFACE
    PACKAGE
    STRUCT
    TRUE
    TYPE

Grammar

Rule 0     S' -> main
Rule 1     main -> ejecutable
Rule 2     main -> funcion
Rule 3     main -> ejecutable main
Rule 4     ejecutable -> estructuraControl
Rule 5     ejecutable -> estructuraDatos
Rule 6     ejecutable -> impresion
Rule 7     ejecutable -> declaracion
Rule 8     ejecutable -> asignacion
Rule 9     ejecutable -> lectura
Rule 10    ejecutable -> metodos
Rule 11    ejecutable -> expresionMatematica
Rule 12    ejecutable -> condicion
Rule 13    impresion -> impresionSencilla
Rule 14    impresion -> impresionBufio
Rule 15    impresion -> impresionFormato
Rule 16    lectura -> lecturaReader
Rule 17    lectura -> lecturaScanf
Rule 18    lectura -> lecturaSscanf
Rule 19    metodos -> lenSlice
Rule 20    metodos -> appendSlice
Rule 21    metodos -> capSlice
Rule 22    metodos -> listaPushBack
Rule 23    metodos -> listaFront
Rule 24    metodos -> lenMap
Rule 25    metodos -> deleteMap
Rule 26    asignacion -> varShortAssign asignable
Rule 27    asignacion -> varAssign ASSIGN asignable
Rule 28    asignacion -> VARIABLE ASSIGN asignable
Rule 29    asignacion -> varAssign tipoDato ASSIGN asignable
Rule 30    declaracion -> varAssign tipoDato
Rule 31    asignable -> valor
Rule 32    asignable -> expresionMatematica
Rule 33    asignable -> condicion
Rule 34    funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
Rule 35    cuerpos -> cuerpo
Rule 36    cuerpos -> cuerpo cuerpos
Rule 37    cuerpo -> ejecutable
Rule 38    cuerpo -> RETURN VARIABLE
Rule 39    estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR
Rule 40    estructuraControl -> FOR condicion LOCKL main LOCKR
Rule 41    estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
Rule 42    estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 43    estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
Rule 44    estructuraControl -> SELECT LOCKL casesSelect LOCKR
Rule 45    casesSelect -> caseSelect
Rule 46    casesSelect -> caseSelect casesSelect
Rule 47    caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main
Rule 48    cases -> case
Rule 49    cases -> case cases
Rule 50    case -> CASE condicionCase COLON main
Rule 51    estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
Rule 52    estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
Rule 53    estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER
Rule 54    estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
Rule 55    estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
Rule 56    estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
Rule 57    lenSlice -> LEN BRACKETL VARIABLE BRACKETR
Rule 58    appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR
Rule 59    appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
Rule 60    capSlice -> CAP BRACKETL VARIABLE BRACKETR
Rule 61    estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR
Rule 62    listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
Rule 63    listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR
Rule 64    estructuraDatos -> initmapvalue
Rule 65    estructuraDatos -> initmap
Rule 66    lenMap -> LEN VARIABLE
Rule 67    deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR
Rule 68    initmapvalue -> varShortAssign createmap
Rule 69    createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR
Rule 70    initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR
Rule 71    createemptymap -> MAP BRACEL tipoDato BRACER tipoDato
Rule 72    mapvalues -> mapvalue
Rule 73    mapvalues -> mapvalue COMA mapvalues
Rule 74    mapvalue -> valor COLON valor
Rule 75    impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR
Rule 76    tipoImpresion -> FMT DOT PRINT
Rule 77    tipoImpresion -> FMT DOT PRINTLN
Rule 78    impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
Rule 79    impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
Rule 80    lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
Rule 81    lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
Rule 82    opcionLectura -> COMA opciones
Rule 83    opcionLectura -> COMA opciones opcionLectura
Rule 84    ampersand -> AMPERSON VARIABLE
Rule 85    lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
Rule 86    opcionesLectura -> opciones
Rule 87    opcionesLectura -> opciones COMA opcionesLectura
Rule 88    opciones -> STRING
Rule 89    opciones -> ampersand
Rule 90    declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
Rule 91    declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
Rule 92    varShortAssign -> VARIABLE SHORTASSIGN
Rule 93    varAssign -> VAR VARIABLE
Rule 94    condicionCase -> INTEGER
Rule 95    condicionCase -> VARIABLE
Rule 96    condicionCase -> condicion
Rule 97    condicion -> valor operadorComparacion valor
Rule 98    condicion -> valor operadorLogico valor
Rule 99    condicion -> comparaciones
Rule 100   comparaciones -> INTEGER EQUAL INTEGER
Rule 101   comparaciones -> INTEGER UNEQUAL INTEGER
Rule 102   comparaciones -> INTEGER GREATERTHAN INTEGER
Rule 103   comparaciones -> INTEGER SMALLERTHAN INTEGER
Rule 104   comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER
Rule 105   comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER
Rule 106   operadorComparacion -> EQUAL
Rule 107   operadorComparacion -> UNEQUAL
Rule 108   operadorComparacion -> GREATERTHAN
Rule 109   operadorComparacion -> SMALLERTHAN
Rule 110   operadorComparacion -> GREATEROREQUALTHAN
Rule 111   operadorComparacion -> SMALLEROREQUALTHAN
Rule 112   tipoDato -> INTTYPE
Rule 113   tipoDato -> FLOATTYPE
Rule 114   tipoDato -> BOOLEANTYPE
Rule 115   tipoDato -> STRINGTYPE
Rule 116   operadorLogico -> AND
Rule 117   operadorLogico -> OR
Rule 118   operadorLogico -> NOT
Rule 119   expresionMatematica -> expresionSuma
Rule 120   expresionMatematica -> expresionResta
Rule 121   expresionMatematica -> expresionMultiplicacion
Rule 122   expresionMatematica -> expresionDivision
Rule 123   expresionMatematica -> expresionModulo
Rule 124   expresionMatematica -> factor operadorMatematico factor
Rule 125   expresionSuma -> INTEGER PLUS INTEGER
Rule 126   expresionResta -> INTEGER MINUS INTEGER
Rule 127   expresionMultiplicacion -> INTEGER TIMES INTEGER
Rule 128   expresionDivision -> INTEGER DIVIDE INTEGER
Rule 129   expresionModulo -> INTEGER MODULE INTEGER
Rule 130   operadorMatematico -> PLUS
Rule 131   operadorMatematico -> MINUS
Rule 132   operadorMatematico -> TIMES
Rule 133   operadorMatematico -> DIVIDE
Rule 134   operadorMatematico -> MODULE
Rule 135   valores -> valor
Rule 136   valores -> valor COMA valores
Rule 137   valor -> STRING
Rule 138   valor -> factor
Rule 139   factor -> VARIABLE
Rule 140   factor -> numero
Rule 141   numero -> FLOAT
Rule 142   numero -> INTEGER
Rule 143   iterador -> VARIABLE INCREMENT
Rule 144   iterador -> VARIABLE DECREMENT

Terminals, with rules where they appear

AMPERSON             : 84
AND                  : 116
APPEND               : 58 59
ASSIGN               : 27 28 29 59
BOOLEANTYPE          : 114
BRACEL               : 51 52 53 54 55 56 69 71
BRACER               : 51 52 53 54 55 56 69 71
BRACKETL             : 34 57 58 59 60 61 62 63 67 70 75 78 79 80 81 85 90 91
BRACKETR             : 34 57 58 59 60 61 62 63 67 70 75 78 79 80 81 85 90 91
BREAK                : 
BUFIO                : 90 91
CAP                  : 60
CASE                 : 47 50
CHAN                 : 
COLON                : 47 50 53 54 55 56 74
COMA                 : 42 67 73 78 79 82 83 87 136
CONST                : 
DECREMENT            : 144
DEFAULT              : 
DEFER                : 
DELETE               : 67
DIVIDE               : 128 133
DOT                  : 61 62 63 76 77 78 79 80 81 85 90 90 91 91
ELSE                 : 
EQUAL                : 100 106
ERROR                : 
FALLTHROUGH          : 
FALSE                : 
FLOAT                : 141
FLOATTYPE            : 113
FMT                  : 76 77 78 79 81 85
FOR                  : 40 41 42 43
FPRINT               : 78
FRONT                : 63
FUNC                 : 34
GO                   : 
GOTO                 : 
GREATEROREQUALTHAN   : 104 110
GREATERTHAN          : 102 108
IF                   : 
IMPORT               : 
INCREMENT            : 143
INTEGER              : 51 54 55 56 56 62 94 100 100 101 101 102 102 103 103 104 104 105 105 125 125 126 126 127 127 128 128 129 129 142
INTERFACE            : 
INTTYPE              : 112
LEN                  : 57 66
LIST                 : 61
LOCKL                : 34 39 40 41 42 43 44 51 52 69
LOCKR                : 34 39 40 41 42 43 44 51 52 69
MAKE                 : 70
MAP                  : 69 71
MINUS                : 47 126 131
MODULE               : 129 134
NEW                  : 61
NEWREADER            : 90
NEWWRITER            : 91
NOT                  : 118
OR                   : 117
OS                   : 90 91
PACKAGE              : 
PLUS                 : 125 130
PRINT                : 76
PRINTF               : 79
PRINTLN              : 77
PUSHBACK             : 62
RANGE                : 42 43
READSTRING           : 80
RETURN               : 38
SCANF                : 81
SELECT               : 44
SEMICOLON            : 41 41
SHORTASSIGN          : 92
SMALLEROREQUALTHAN   : 105 111
SMALLERTHAN          : 47 103 109
SSCANF               : 85
STDIN                : 90
STDOUT               : 91
STRING               : 78 79 80 81 88 137
STRINGTYPE           : 115
STRUCT               : 
SWITCH               : 39
TIMES                : 127 132
TRUE                 : 
TYPE                 : 
UNEQUAL              : 101 107
VAR                  : 93
VARIABLE             : 28 34 38 39 42 42 43 53 54 55 56 57 58 59 59 60 62 63 66 67 78 80 84 92 93 95 139 143 144
error                : 

Nonterminals, with rules where they appear

ampersand            : 89
appendSlice          : 20
asignable            : 26 27 28 29
asignacion           : 8 41
capSlice             : 21
case                 : 48 49
caseSelect           : 45 46
cases                : 39 49
casesSelect          : 44 46
comparaciones        : 99
condicion            : 12 33 40 41 96
condicionCase        : 50
createemptymap       : 70
createmap            : 68
cuerpo               : 35 36
cuerpos              : 34 36
declaracion          : 7
deleteMap            : 25
ejecutable           : 1 3 37
estructuraControl    : 4
estructuraDatos      : 5
expresionDivision    : 122
expresionMatematica  : 11 32
expresionModulo      : 123
expresionMultiplicacion : 121
expresionResta       : 120
expresionSuma        : 119
factor               : 124 124 138
funcion              : 2
impresion            : 6
impresionBufio       : 14
impresionFormato     : 15
impresionSencilla    : 13
initmap              : 65
initmapvalue         : 64
iterador             : 41
lectura              : 9
lecturaReader        : 16
lecturaScanf         : 17
lecturaSscanf        : 18
lenMap               : 24
lenSlice             : 19
listaFront           : 23
listaPushBack        : 22
main                 : 3 40 41 42 43 47 50 0
mapvalue             : 72 73
mapvalues            : 69 73
metodos              : 10
numero               : 140
opcionLectura        : 81 83
opciones             : 82 83 86 87
opcionesLectura      : 85 87
operadorComparacion  : 97
operadorLogico       : 98
operadorMatematico   : 124
tipoDato             : 29 30 34 51 52 69 69 71 71
tipoImpresion        : 75
valor                : 31 67 74 74 97 97 98 98 135 136
valores              : 34 51 52 58 59 75 79 136
varAssign            : 27 29 30
varShortAssign       : 26 42 43 47 51 52 53 54 55 56 61 68 70 80 90 91

Parsing method: LALR

state 0

    (0) S' -> . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    main                           shift and go to state 1
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 1

    (0) S' -> main .



state 2

    (1) main -> ejecutable .
    (3) main -> ejecutable . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    $end            reduce using rule 1 (main -> ejecutable .)
    LOCKR           reduce using rule 1 (main -> ejecutable .)
    CASE            reduce using rule 1 (main -> ejecutable .)
    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    ejecutable                     shift and go to state 2
    main                           shift and go to state 54
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 3

    (2) main -> funcion .

    $end            reduce using rule 2 (main -> funcion .)
    LOCKR           reduce using rule 2 (main -> funcion .)
    CASE            reduce using rule 2 (main -> funcion .)


state 4

    (4) ejecutable -> estructuraControl .

    FUNC            reduce using rule 4 (ejecutable -> estructuraControl .)
    SWITCH          reduce using rule 4 (ejecutable -> estructuraControl .)
    FOR             reduce using rule 4 (ejecutable -> estructuraControl .)
    SELECT          reduce using rule 4 (ejecutable -> estructuraControl .)
    VARIABLE        reduce using rule 4 (ejecutable -> estructuraControl .)
    FMT             reduce using rule 4 (ejecutable -> estructuraControl .)
    VAR             reduce using rule 4 (ejecutable -> estructuraControl .)
    LEN             reduce using rule 4 (ejecutable -> estructuraControl .)
    APPEND          reduce using rule 4 (ejecutable -> estructuraControl .)
    CAP             reduce using rule 4 (ejecutable -> estructuraControl .)
    DELETE          reduce using rule 4 (ejecutable -> estructuraControl .)
    INTEGER         reduce using rule 4 (ejecutable -> estructuraControl .)
    STRING          reduce using rule 4 (ejecutable -> estructuraControl .)
    FLOAT           reduce using rule 4 (ejecutable -> estructuraControl .)
    $end            reduce using rule 4 (ejecutable -> estructuraControl .)
    LOCKR           reduce using rule 4 (ejecutable -> estructuraControl .)
    CASE            reduce using rule 4 (ejecutable -> estructuraControl .)
    RETURN          reduce using rule 4 (ejecutable -> estructuraControl .)


state 5

    (5) ejecutable -> estructuraDatos .

    FUNC            reduce using rule 5 (ejecutable -> estructuraDatos .)
    SWITCH          reduce using rule 5 (ejecutable -> estructuraDatos .)
    FOR             reduce using rule 5 (ejecutable -> estructuraDatos .)
    SELECT          reduce using rule 5 (ejecutable -> estructuraDatos .)
    VARIABLE        reduce using rule 5 (ejecutable -> estructuraDatos .)
    FMT             reduce using rule 5 (ejecutable -> estructuraDatos .)
    VAR             reduce using rule 5 (ejecutable -> estructuraDatos .)
    LEN             reduce using rule 5 (ejecutable -> estructuraDatos .)
    APPEND          reduce using rule 5 (ejecutable -> estructuraDatos .)
    CAP             reduce using rule 5 (ejecutable -> estructuraDatos .)
    DELETE          reduce using rule 5 (ejecutable -> estructuraDatos .)
    INTEGER         reduce using rule 5 (ejecutable -> estructuraDatos .)
    STRING          reduce using rule 5 (ejecutable -> estructuraDatos .)
    FLOAT           reduce using rule 5 (ejecutable -> estructuraDatos .)
    $end            reduce using rule 5 (ejecutable -> estructuraDatos .)
    LOCKR           reduce using rule 5 (ejecutable -> estructuraDatos .)
    CASE            reduce using rule 5 (ejecutable -> estructuraDatos .)
    RETURN          reduce using rule 5 (ejecutable -> estructuraDatos .)


state 6

    (6) ejecutable -> impresion .

    FUNC            reduce using rule 6 (ejecutable -> impresion .)
    SWITCH          reduce using rule 6 (ejecutable -> impresion .)
    FOR             reduce using rule 6 (ejecutable -> impresion .)
    SELECT          reduce using rule 6 (ejecutable -> impresion .)
    VARIABLE        reduce using rule 6 (ejecutable -> impresion .)
    FMT             reduce using rule 6 (ejecutable -> impresion .)
    VAR             reduce using rule 6 (ejecutable -> impresion .)
    LEN             reduce using rule 6 (ejecutable -> impresion .)
    APPEND          reduce using rule 6 (ejecutable -> impresion .)
    CAP             reduce using rule 6 (ejecutable -> impresion .)
    DELETE          reduce using rule 6 (ejecutable -> impresion .)
    INTEGER         reduce using rule 6 (ejecutable -> impresion .)
    STRING          reduce using rule 6 (ejecutable -> impresion .)
    FLOAT           reduce using rule 6 (ejecutable -> impresion .)
    $end            reduce using rule 6 (ejecutable -> impresion .)
    LOCKR           reduce using rule 6 (ejecutable -> impresion .)
    CASE            reduce using rule 6 (ejecutable -> impresion .)
    RETURN          reduce using rule 6 (ejecutable -> impresion .)


state 7

    (7) ejecutable -> declaracion .

    FUNC            reduce using rule 7 (ejecutable -> declaracion .)
    SWITCH          reduce using rule 7 (ejecutable -> declaracion .)
    FOR             reduce using rule 7 (ejecutable -> declaracion .)
    SELECT          reduce using rule 7 (ejecutable -> declaracion .)
    VARIABLE        reduce using rule 7 (ejecutable -> declaracion .)
    FMT             reduce using rule 7 (ejecutable -> declaracion .)
    VAR             reduce using rule 7 (ejecutable -> declaracion .)
    LEN             reduce using rule 7 (ejecutable -> declaracion .)
    APPEND          reduce using rule 7 (ejecutable -> declaracion .)
    CAP             reduce using rule 7 (ejecutable -> declaracion .)
    DELETE          reduce using rule 7 (ejecutable -> declaracion .)
    INTEGER         reduce using rule 7 (ejecutable -> declaracion .)
    STRING          reduce using rule 7 (ejecutable -> declaracion .)
    FLOAT           reduce using rule 7 (ejecutable -> declaracion .)
    $end            reduce using rule 7 (ejecutable -> declaracion .)
    LOCKR           reduce using rule 7 (ejecutable -> declaracion .)
    CASE            reduce using rule 7 (ejecutable -> declaracion .)
    RETURN          reduce using rule 7 (ejecutable -> declaracion .)


state 8

    (8) ejecutable -> asignacion .

    FUNC            reduce using rule 8 (ejecutable -> asignacion .)
    SWITCH          reduce using rule 8 (ejecutable -> asignacion .)
    FOR             reduce using rule 8 (ejecutable -> asignacion .)
    SELECT          reduce using rule 8 (ejecutable -> asignacion .)
    VARIABLE        reduce using rule 8 (ejecutable -> asignacion .)
    FMT             reduce using rule 8 (ejecutable -> asignacion .)
    VAR             reduce using rule 8 (ejecutable -> asignacion .)
    LEN             reduce using rule 8 (ejecutable -> asignacion .)
    APPEND          reduce using rule 8 (ejecutable -> asignacion .)
    CAP             reduce using rule 8 (ejecutable -> asignacion .)
    DELETE          reduce using rule 8 (ejecutable -> asignacion .)
    INTEGER         reduce using rule 8 (ejecutable -> asignacion .)
    STRING          reduce using rule 8 (ejecutable -> asignacion .)
    FLOAT           reduce using rule 8 (ejecutable -> asignacion .)
    $end            reduce using rule 8 (ejecutable -> asignacion .)
    LOCKR           reduce using rule 8 (ejecutable -> asignacion .)
    CASE            reduce using rule 8 (ejecutable -> asignacion .)
    RETURN          reduce using rule 8 (ejecutable -> asignacion .)


state 9

    (9) ejecutable -> lectura .

    FUNC            reduce using rule 9 (ejecutable -> lectura .)
    SWITCH          reduce using rule 9 (ejecutable -> lectura .)
    FOR             reduce using rule 9 (ejecutable -> lectura .)
    SELECT          reduce using rule 9 (ejecutable -> lectura .)
    VARIABLE        reduce using rule 9 (ejecutable -> lectura .)
    FMT             reduce using rule 9 (ejecutable -> lectura .)
    VAR             reduce using rule 9 (ejecutable -> lectura .)
    LEN             reduce using rule 9 (ejecutable -> lectura .)
    APPEND          reduce using rule 9 (ejecutable -> lectura .)
    CAP             reduce using rule 9 (ejecutable -> lectura .)
    DELETE          reduce using rule 9 (ejecutable -> lectura .)
    INTEGER         reduce using rule 9 (ejecutable -> lectura .)
    STRING          reduce using rule 9 (ejecutable -> lectura .)
    FLOAT           reduce using rule 9 (ejecutable -> lectura .)
    $end            reduce using rule 9 (ejecutable -> lectura .)
    LOCKR           reduce using rule 9 (ejecutable -> lectura .)
    CASE            reduce using rule 9 (ejecutable -> lectura .)
    RETURN          reduce using rule 9 (ejecutable -> lectura .)


state 10

    (10) ejecutable -> metodos .

    FUNC            reduce using rule 10 (ejecutable -> metodos .)
    SWITCH          reduce using rule 10 (ejecutable -> metodos .)
    FOR             reduce using rule 10 (ejecutable -> metodos .)
    SELECT          reduce using rule 10 (ejecutable -> metodos .)
    VARIABLE        reduce using rule 10 (ejecutable -> metodos .)
    FMT             reduce using rule 10 (ejecutable -> metodos .)
    VAR             reduce using rule 10 (ejecutable -> metodos .)
    LEN             reduce using rule 10 (ejecutable -> metodos .)
    APPEND          reduce using rule 10 (ejecutable -> metodos .)
    CAP             reduce using rule 10 (ejecutable -> metodos .)
    DELETE          reduce using rule 10 (ejecutable -> metodos .)
    INTEGER         reduce using rule 10 (ejecutable -> metodos .)
    STRING          reduce using rule 10 (ejecutable -> metodos .)
    FLOAT           reduce using rule 10 (ejecutable -> metodos .)
    $end            reduce using rule 10 (ejecutable -> metodos .)
    LOCKR           reduce using rule 10 (ejecutable -> metodos .)
    CASE            reduce using rule 10 (ejecutable -> metodos .)
    RETURN          reduce using rule 10 (ejecutable -> metodos .)


state 11

    (11) ejecutable -> expresionMatematica .

    FUNC            reduce using rule 11 (ejecutable -> expresionMatematica .)
    SWITCH          reduce using rule 11 (ejecutable -> expresionMatematica .)
    FOR             reduce using rule 11 (ejecutable -> expresionMatematica .)
    SELECT          reduce using rule 11 (ejecutable -> expresionMatematica .)
    VARIABLE        reduce using rule 11 (ejecutable -> expresionMatematica .)
    FMT             reduce using rule 11 (ejecutable -> expresionMatematica .)
    VAR             reduce using rule 11 (ejecutable -> expresionMatematica .)
    LEN             reduce using rule 11 (ejecutable -> expresionMatematica .)
    APPEND          reduce using rule 11 (ejecutable -> expresionMatematica .)
    CAP             reduce using rule 11 (ejecutable -> expresionMatematica .)
    DELETE          reduce using rule 11 (ejecutable -> expresionMatematica .)
    INTEGER         reduce using rule 11 (ejecutable -> expresionMatematica .)
    STRING          reduce using rule 11 (ejecutable -> expresionMatematica .)
    FLOAT           reduce using rule 11 (ejecutable -> expresionMatematica .)
    $end            reduce using rule 11 (ejecutable -> expresionMatematica .)
    LOCKR           reduce using rule 11 (ejecutable -> expresionMatematica .)
    CASE            reduce using rule 11 (ejecutable -> expresionMatematica .)
    RETURN          reduce using rule 11 (ejecutable -> expresionMatematica .)


state 12

    (12) ejecutable -> condicion .

    FUNC            reduce using rule 12 (ejecutable -> condicion .)
    SWITCH          reduce using rule 12 (ejecutable -> condicion .)
    FOR             reduce using rule 12 (ejecutable -> condicion .)
    SELECT          reduce using rule 12 (ejecutable -> condicion .)
    VARIABLE        reduce using rule 12 (ejecutable -> condicion .)
    FMT             reduce using rule 12 (ejecutable -> condicion .)
    VAR             reduce using rule 12 (ejecutable -> condicion .)
    LEN             reduce using rule 12 (ejecutable -> condicion .)
    APPEND          reduce using rule 12 (ejecutable -> condicion .)
    CAP             reduce using rule 12 (ejecutable -> condicion .)
    DELETE          reduce using rule 12 (ejecutable -> condicion .)
    INTEGER         reduce using rule 12 (ejecutable -> condicion .)
    STRING          reduce using rule 12 (ejecutable -> condicion .)
    FLOAT           reduce using rule 12 (ejecutable -> condicion .)
    $end            reduce using rule 12 (ejecutable -> condicion .)
    LOCKR           reduce using rule 12 (ejecutable -> condicion .)
    CASE            reduce using rule 12 (ejecutable -> condicion .)
    RETURN          reduce using rule 12 (ejecutable -> condicion .)


state 13

    (34) funcion -> FUNC . VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR

    VARIABLE        shift and go to state 55


state 14

    (28) asignacion -> VARIABLE . ASSIGN asignable
    (92) varShortAssign -> VARIABLE . SHORTASSIGN
    (59) appendSlice -> VARIABLE . ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (62) listaPushBack -> VARIABLE . DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> VARIABLE . DOT FRONT BRACKETL BRACKETR
    (139) factor -> VARIABLE .

    ASSIGN          shift and go to state 56
    SHORTASSIGN     shift and go to state 57
    DOT             shift and go to state 58
    PLUS            reduce using rule 139 (factor -> VARIABLE .)
    MINUS           reduce using rule 139 (factor -> VARIABLE .)
    TIMES           reduce using rule 139 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 139 (factor -> VARIABLE .)
    MODULE          reduce using rule 139 (factor -> VARIABLE .)
    EQUAL           reduce using rule 139 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 139 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    AND             reduce using rule 139 (factor -> VARIABLE .)
    OR              reduce using rule 139 (factor -> VARIABLE .)
    NOT             reduce using rule 139 (factor -> VARIABLE .)


state 15

    (39) estructuraControl -> SWITCH . VARIABLE LOCKL cases LOCKR

    VARIABLE        shift and go to state 59


state 16

    (40) estructuraControl -> FOR . condicion LOCKL main LOCKR
    (41) estructuraControl -> FOR . asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> FOR . VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> FOR . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (93) varAssign -> . VAR VARIABLE
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    VARIABLE        shift and go to state 62
    STRING          shift and go to state 46
    INTEGER         shift and go to state 66
    VAR             shift and go to state 47
    FLOAT           shift and go to state 53

    condicion                      shift and go to state 60
    asignacion                     shift and go to state 61
    varShortAssign                 shift and go to state 63
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    varAssign                      shift and go to state 64
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 17

    (51) estructuraDatos -> varShortAssign . BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> varShortAssign . BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> varShortAssign . VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> varShortAssign . VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> varShortAssign . VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> varShortAssign . VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> varShortAssign . LIST DOT NEW BRACKETL BRACKETR
    (90) declaracion -> varShortAssign . BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> varShortAssign . BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> varShortAssign . asignable
    (68) initmapvalue -> varShortAssign . createmap
    (70) initmap -> varShortAssign . MAKE BRACKETL createemptymap BRACKETR
    (80) lecturaReader -> varShortAssign . VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (31) asignable -> . valor
    (32) asignable -> . expresionMatematica
    (33) asignable -> . condicion
    (69) createmap -> . MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR
    (137) valor -> . STRING
    (138) valor -> . factor
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    BRACEL          shift and go to state 67
    VARIABLE        shift and go to state 68
    LIST            shift and go to state 69
    BUFIO           shift and go to state 70
    MAKE            shift and go to state 73
    MAP             shift and go to state 77
    STRING          shift and go to state 46
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 53

    asignable                      shift and go to state 71
    createmap                      shift and go to state 72
    valor                          shift and go to state 74
    expresionMatematica            shift and go to state 75
    condicion                      shift and go to state 76
    factor                         shift and go to state 78
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    comparaciones                  shift and go to state 43
    numero                         shift and go to state 52

state 18

    (44) estructuraControl -> SELECT . LOCKL casesSelect LOCKR

    LOCKL           shift and go to state 79


state 19

    (125) expresionSuma -> INTEGER . PLUS INTEGER
    (126) expresionResta -> INTEGER . MINUS INTEGER
    (127) expresionMultiplicacion -> INTEGER . TIMES INTEGER
    (128) expresionDivision -> INTEGER . DIVIDE INTEGER
    (129) expresionModulo -> INTEGER . MODULE INTEGER
    (100) comparaciones -> INTEGER . EQUAL INTEGER
    (101) comparaciones -> INTEGER . UNEQUAL INTEGER
    (102) comparaciones -> INTEGER . GREATERTHAN INTEGER
    (103) comparaciones -> INTEGER . SMALLERTHAN INTEGER
    (104) comparaciones -> INTEGER . GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> INTEGER . SMALLEROREQUALTHAN INTEGER
    (142) numero -> INTEGER .

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for UNEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for SMALLERTHAN resolved as shift
  ! shift/reduce conflict for GREATEROREQUALTHAN resolved as shift
  ! shift/reduce conflict for SMALLEROREQUALTHAN resolved as shift
    PLUS            shift and go to state 80
    MINUS           shift and go to state 81
    TIMES           shift and go to state 82
    DIVIDE          shift and go to state 83
    MODULE          shift and go to state 84
    EQUAL           shift and go to state 85
    UNEQUAL         shift and go to state 86
    GREATERTHAN     shift and go to state 87
    SMALLERTHAN     shift and go to state 88
    GREATEROREQUALTHAN shift and go to state 89
    SMALLEROREQUALTHAN shift and go to state 90
    AND             reduce using rule 142 (numero -> INTEGER .)
    OR              reduce using rule 142 (numero -> INTEGER .)
    NOT             reduce using rule 142 (numero -> INTEGER .)
    FUNC            reduce using rule 142 (numero -> INTEGER .)
    SWITCH          reduce using rule 142 (numero -> INTEGER .)
    FOR             reduce using rule 142 (numero -> INTEGER .)
    SELECT          reduce using rule 142 (numero -> INTEGER .)
    VARIABLE        reduce using rule 142 (numero -> INTEGER .)
    FMT             reduce using rule 142 (numero -> INTEGER .)
    VAR             reduce using rule 142 (numero -> INTEGER .)
    LEN             reduce using rule 142 (numero -> INTEGER .)
    APPEND          reduce using rule 142 (numero -> INTEGER .)
    CAP             reduce using rule 142 (numero -> INTEGER .)
    DELETE          reduce using rule 142 (numero -> INTEGER .)
    INTEGER         reduce using rule 142 (numero -> INTEGER .)
    STRING          reduce using rule 142 (numero -> INTEGER .)
    FLOAT           reduce using rule 142 (numero -> INTEGER .)
    $end            reduce using rule 142 (numero -> INTEGER .)
    LOCKR           reduce using rule 142 (numero -> INTEGER .)
    CASE            reduce using rule 142 (numero -> INTEGER .)
    RETURN          reduce using rule 142 (numero -> INTEGER .)
    SEMICOLON       reduce using rule 142 (numero -> INTEGER .)

  ! PLUS            [ reduce using rule 142 (numero -> INTEGER .) ]
  ! MINUS           [ reduce using rule 142 (numero -> INTEGER .) ]
  ! TIMES           [ reduce using rule 142 (numero -> INTEGER .) ]
  ! DIVIDE          [ reduce using rule 142 (numero -> INTEGER .) ]
  ! MODULE          [ reduce using rule 142 (numero -> INTEGER .) ]
  ! EQUAL           [ reduce using rule 142 (numero -> INTEGER .) ]
  ! UNEQUAL         [ reduce using rule 142 (numero -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 142 (numero -> INTEGER .) ]
  ! SMALLERTHAN     [ reduce using rule 142 (numero -> INTEGER .) ]
  ! GREATEROREQUALTHAN [ reduce using rule 142 (numero -> INTEGER .) ]
  ! SMALLEROREQUALTHAN [ reduce using rule 142 (numero -> INTEGER .) ]


state 20

    (64) estructuraDatos -> initmapvalue .

    FUNC            reduce using rule 64 (estructuraDatos -> initmapvalue .)
    SWITCH          reduce using rule 64 (estructuraDatos -> initmapvalue .)
    FOR             reduce using rule 64 (estructuraDatos -> initmapvalue .)
    SELECT          reduce using rule 64 (estructuraDatos -> initmapvalue .)
    VARIABLE        reduce using rule 64 (estructuraDatos -> initmapvalue .)
    FMT             reduce using rule 64 (estructuraDatos -> initmapvalue .)
    VAR             reduce using rule 64 (estructuraDatos -> initmapvalue .)
    LEN             reduce using rule 64 (estructuraDatos -> initmapvalue .)
    APPEND          reduce using rule 64 (estructuraDatos -> initmapvalue .)
    CAP             reduce using rule 64 (estructuraDatos -> initmapvalue .)
    DELETE          reduce using rule 64 (estructuraDatos -> initmapvalue .)
    INTEGER         reduce using rule 64 (estructuraDatos -> initmapvalue .)
    STRING          reduce using rule 64 (estructuraDatos -> initmapvalue .)
    FLOAT           reduce using rule 64 (estructuraDatos -> initmapvalue .)
    $end            reduce using rule 64 (estructuraDatos -> initmapvalue .)
    LOCKR           reduce using rule 64 (estructuraDatos -> initmapvalue .)
    CASE            reduce using rule 64 (estructuraDatos -> initmapvalue .)
    RETURN          reduce using rule 64 (estructuraDatos -> initmapvalue .)


state 21

    (65) estructuraDatos -> initmap .

    FUNC            reduce using rule 65 (estructuraDatos -> initmap .)
    SWITCH          reduce using rule 65 (estructuraDatos -> initmap .)
    FOR             reduce using rule 65 (estructuraDatos -> initmap .)
    SELECT          reduce using rule 65 (estructuraDatos -> initmap .)
    VARIABLE        reduce using rule 65 (estructuraDatos -> initmap .)
    FMT             reduce using rule 65 (estructuraDatos -> initmap .)
    VAR             reduce using rule 65 (estructuraDatos -> initmap .)
    LEN             reduce using rule 65 (estructuraDatos -> initmap .)
    APPEND          reduce using rule 65 (estructuraDatos -> initmap .)
    CAP             reduce using rule 65 (estructuraDatos -> initmap .)
    DELETE          reduce using rule 65 (estructuraDatos -> initmap .)
    INTEGER         reduce using rule 65 (estructuraDatos -> initmap .)
    STRING          reduce using rule 65 (estructuraDatos -> initmap .)
    FLOAT           reduce using rule 65 (estructuraDatos -> initmap .)
    $end            reduce using rule 65 (estructuraDatos -> initmap .)
    LOCKR           reduce using rule 65 (estructuraDatos -> initmap .)
    CASE            reduce using rule 65 (estructuraDatos -> initmap .)
    RETURN          reduce using rule 65 (estructuraDatos -> initmap .)


state 22

    (13) impresion -> impresionSencilla .

    FUNC            reduce using rule 13 (impresion -> impresionSencilla .)
    SWITCH          reduce using rule 13 (impresion -> impresionSencilla .)
    FOR             reduce using rule 13 (impresion -> impresionSencilla .)
    SELECT          reduce using rule 13 (impresion -> impresionSencilla .)
    VARIABLE        reduce using rule 13 (impresion -> impresionSencilla .)
    FMT             reduce using rule 13 (impresion -> impresionSencilla .)
    VAR             reduce using rule 13 (impresion -> impresionSencilla .)
    LEN             reduce using rule 13 (impresion -> impresionSencilla .)
    APPEND          reduce using rule 13 (impresion -> impresionSencilla .)
    CAP             reduce using rule 13 (impresion -> impresionSencilla .)
    DELETE          reduce using rule 13 (impresion -> impresionSencilla .)
    INTEGER         reduce using rule 13 (impresion -> impresionSencilla .)
    STRING          reduce using rule 13 (impresion -> impresionSencilla .)
    FLOAT           reduce using rule 13 (impresion -> impresionSencilla .)
    $end            reduce using rule 13 (impresion -> impresionSencilla .)
    LOCKR           reduce using rule 13 (impresion -> impresionSencilla .)
    CASE            reduce using rule 13 (impresion -> impresionSencilla .)
    RETURN          reduce using rule 13 (impresion -> impresionSencilla .)


state 23

    (14) impresion -> impresionBufio .

    FUNC            reduce using rule 14 (impresion -> impresionBufio .)
    SWITCH          reduce using rule 14 (impresion -> impresionBufio .)
    FOR             reduce using rule 14 (impresion -> impresionBufio .)
    SELECT          reduce using rule 14 (impresion -> impresionBufio .)
    VARIABLE        reduce using rule 14 (impresion -> impresionBufio .)
    FMT             reduce using rule 14 (impresion -> impresionBufio .)
    VAR             reduce using rule 14 (impresion -> impresionBufio .)
    LEN             reduce using rule 14 (impresion -> impresionBufio .)
    APPEND          reduce using rule 14 (impresion -> impresionBufio .)
    CAP             reduce using rule 14 (impresion -> impresionBufio .)
    DELETE          reduce using rule 14 (impresion -> impresionBufio .)
    INTEGER         reduce using rule 14 (impresion -> impresionBufio .)
    STRING          reduce using rule 14 (impresion -> impresionBufio .)
    FLOAT           reduce using rule 14 (impresion -> impresionBufio .)
    $end            reduce using rule 14 (impresion -> impresionBufio .)
    LOCKR           reduce using rule 14 (impresion -> impresionBufio .)
    CASE            reduce using rule 14 (impresion -> impresionBufio .)
    RETURN          reduce using rule 14 (impresion -> impresionBufio .)


state 24

    (15) impresion -> impresionFormato .

    FUNC            reduce using rule 15 (impresion -> impresionFormato .)
    SWITCH          reduce using rule 15 (impresion -> impresionFormato .)
    FOR             reduce using rule 15 (impresion -> impresionFormato .)
    SELECT          reduce using rule 15 (impresion -> impresionFormato .)
    VARIABLE        reduce using rule 15 (impresion -> impresionFormato .)
    FMT             reduce using rule 15 (impresion -> impresionFormato .)
    VAR             reduce using rule 15 (impresion -> impresionFormato .)
    LEN             reduce using rule 15 (impresion -> impresionFormato .)
    APPEND          reduce using rule 15 (impresion -> impresionFormato .)
    CAP             reduce using rule 15 (impresion -> impresionFormato .)
    DELETE          reduce using rule 15 (impresion -> impresionFormato .)
    INTEGER         reduce using rule 15 (impresion -> impresionFormato .)
    STRING          reduce using rule 15 (impresion -> impresionFormato .)
    FLOAT           reduce using rule 15 (impresion -> impresionFormato .)
    $end            reduce using rule 15 (impresion -> impresionFormato .)
    LOCKR           reduce using rule 15 (impresion -> impresionFormato .)
    CASE            reduce using rule 15 (impresion -> impresionFormato .)
    RETURN          reduce using rule 15 (impresion -> impresionFormato .)


state 25

    (30) declaracion -> varAssign . tipoDato
    (27) asignacion -> varAssign . ASSIGN asignable
    (29) asignacion -> varAssign . tipoDato ASSIGN asignable
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    ASSIGN          shift and go to state 92
    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 91

state 26

    (16) lectura -> lecturaReader .

    FUNC            reduce using rule 16 (lectura -> lecturaReader .)
    SWITCH          reduce using rule 16 (lectura -> lecturaReader .)
    FOR             reduce using rule 16 (lectura -> lecturaReader .)
    SELECT          reduce using rule 16 (lectura -> lecturaReader .)
    VARIABLE        reduce using rule 16 (lectura -> lecturaReader .)
    FMT             reduce using rule 16 (lectura -> lecturaReader .)
    VAR             reduce using rule 16 (lectura -> lecturaReader .)
    LEN             reduce using rule 16 (lectura -> lecturaReader .)
    APPEND          reduce using rule 16 (lectura -> lecturaReader .)
    CAP             reduce using rule 16 (lectura -> lecturaReader .)
    DELETE          reduce using rule 16 (lectura -> lecturaReader .)
    INTEGER         reduce using rule 16 (lectura -> lecturaReader .)
    STRING          reduce using rule 16 (lectura -> lecturaReader .)
    FLOAT           reduce using rule 16 (lectura -> lecturaReader .)
    $end            reduce using rule 16 (lectura -> lecturaReader .)
    LOCKR           reduce using rule 16 (lectura -> lecturaReader .)
    CASE            reduce using rule 16 (lectura -> lecturaReader .)
    RETURN          reduce using rule 16 (lectura -> lecturaReader .)


state 27

    (17) lectura -> lecturaScanf .

    FUNC            reduce using rule 17 (lectura -> lecturaScanf .)
    SWITCH          reduce using rule 17 (lectura -> lecturaScanf .)
    FOR             reduce using rule 17 (lectura -> lecturaScanf .)
    SELECT          reduce using rule 17 (lectura -> lecturaScanf .)
    VARIABLE        reduce using rule 17 (lectura -> lecturaScanf .)
    FMT             reduce using rule 17 (lectura -> lecturaScanf .)
    VAR             reduce using rule 17 (lectura -> lecturaScanf .)
    LEN             reduce using rule 17 (lectura -> lecturaScanf .)
    APPEND          reduce using rule 17 (lectura -> lecturaScanf .)
    CAP             reduce using rule 17 (lectura -> lecturaScanf .)
    DELETE          reduce using rule 17 (lectura -> lecturaScanf .)
    INTEGER         reduce using rule 17 (lectura -> lecturaScanf .)
    STRING          reduce using rule 17 (lectura -> lecturaScanf .)
    FLOAT           reduce using rule 17 (lectura -> lecturaScanf .)
    $end            reduce using rule 17 (lectura -> lecturaScanf .)
    LOCKR           reduce using rule 17 (lectura -> lecturaScanf .)
    CASE            reduce using rule 17 (lectura -> lecturaScanf .)
    RETURN          reduce using rule 17 (lectura -> lecturaScanf .)


state 28

    (18) lectura -> lecturaSscanf .

    FUNC            reduce using rule 18 (lectura -> lecturaSscanf .)
    SWITCH          reduce using rule 18 (lectura -> lecturaSscanf .)
    FOR             reduce using rule 18 (lectura -> lecturaSscanf .)
    SELECT          reduce using rule 18 (lectura -> lecturaSscanf .)
    VARIABLE        reduce using rule 18 (lectura -> lecturaSscanf .)
    FMT             reduce using rule 18 (lectura -> lecturaSscanf .)
    VAR             reduce using rule 18 (lectura -> lecturaSscanf .)
    LEN             reduce using rule 18 (lectura -> lecturaSscanf .)
    APPEND          reduce using rule 18 (lectura -> lecturaSscanf .)
    CAP             reduce using rule 18 (lectura -> lecturaSscanf .)
    DELETE          reduce using rule 18 (lectura -> lecturaSscanf .)
    INTEGER         reduce using rule 18 (lectura -> lecturaSscanf .)
    STRING          reduce using rule 18 (lectura -> lecturaSscanf .)
    FLOAT           reduce using rule 18 (lectura -> lecturaSscanf .)
    $end            reduce using rule 18 (lectura -> lecturaSscanf .)
    LOCKR           reduce using rule 18 (lectura -> lecturaSscanf .)
    CASE            reduce using rule 18 (lectura -> lecturaSscanf .)
    RETURN          reduce using rule 18 (lectura -> lecturaSscanf .)


state 29

    (19) metodos -> lenSlice .

    FUNC            reduce using rule 19 (metodos -> lenSlice .)
    SWITCH          reduce using rule 19 (metodos -> lenSlice .)
    FOR             reduce using rule 19 (metodos -> lenSlice .)
    SELECT          reduce using rule 19 (metodos -> lenSlice .)
    VARIABLE        reduce using rule 19 (metodos -> lenSlice .)
    FMT             reduce using rule 19 (metodos -> lenSlice .)
    VAR             reduce using rule 19 (metodos -> lenSlice .)
    LEN             reduce using rule 19 (metodos -> lenSlice .)
    APPEND          reduce using rule 19 (metodos -> lenSlice .)
    CAP             reduce using rule 19 (metodos -> lenSlice .)
    DELETE          reduce using rule 19 (metodos -> lenSlice .)
    INTEGER         reduce using rule 19 (metodos -> lenSlice .)
    STRING          reduce using rule 19 (metodos -> lenSlice .)
    FLOAT           reduce using rule 19 (metodos -> lenSlice .)
    $end            reduce using rule 19 (metodos -> lenSlice .)
    LOCKR           reduce using rule 19 (metodos -> lenSlice .)
    CASE            reduce using rule 19 (metodos -> lenSlice .)
    RETURN          reduce using rule 19 (metodos -> lenSlice .)


state 30

    (20) metodos -> appendSlice .

    FUNC            reduce using rule 20 (metodos -> appendSlice .)
    SWITCH          reduce using rule 20 (metodos -> appendSlice .)
    FOR             reduce using rule 20 (metodos -> appendSlice .)
    SELECT          reduce using rule 20 (metodos -> appendSlice .)
    VARIABLE        reduce using rule 20 (metodos -> appendSlice .)
    FMT             reduce using rule 20 (metodos -> appendSlice .)
    VAR             reduce using rule 20 (metodos -> appendSlice .)
    LEN             reduce using rule 20 (metodos -> appendSlice .)
    APPEND          reduce using rule 20 (metodos -> appendSlice .)
    CAP             reduce using rule 20 (metodos -> appendSlice .)
    DELETE          reduce using rule 20 (metodos -> appendSlice .)
    INTEGER         reduce using rule 20 (metodos -> appendSlice .)
    STRING          reduce using rule 20 (metodos -> appendSlice .)
    FLOAT           reduce using rule 20 (metodos -> appendSlice .)
    $end            reduce using rule 20 (metodos -> appendSlice .)
    LOCKR           reduce using rule 20 (metodos -> appendSlice .)
    CASE            reduce using rule 20 (metodos -> appendSlice .)
    RETURN          reduce using rule 20 (metodos -> appendSlice .)


state 31

    (21) metodos -> capSlice .

    FUNC            reduce using rule 21 (metodos -> capSlice .)
    SWITCH          reduce using rule 21 (metodos -> capSlice .)
    FOR             reduce using rule 21 (metodos -> capSlice .)
    SELECT          reduce using rule 21 (metodos -> capSlice .)
    VARIABLE        reduce using rule 21 (metodos -> capSlice .)
    FMT             reduce using rule 21 (metodos -> capSlice .)
    VAR             reduce using rule 21 (metodos -> capSlice .)
    LEN             reduce using rule 21 (metodos -> capSlice .)
    APPEND          reduce using rule 21 (metodos -> capSlice .)
    CAP             reduce using rule 21 (metodos -> capSlice .)
    DELETE          reduce using rule 21 (metodos -> capSlice .)
    INTEGER         reduce using rule 21 (metodos -> capSlice .)
    STRING          reduce using rule 21 (metodos -> capSlice .)
    FLOAT           reduce using rule 21 (metodos -> capSlice .)
    $end            reduce using rule 21 (metodos -> capSlice .)
    LOCKR           reduce using rule 21 (metodos -> capSlice .)
    CASE            reduce using rule 21 (metodos -> capSlice .)
    RETURN          reduce using rule 21 (metodos -> capSlice .)


state 32

    (22) metodos -> listaPushBack .

    FUNC            reduce using rule 22 (metodos -> listaPushBack .)
    SWITCH          reduce using rule 22 (metodos -> listaPushBack .)
    FOR             reduce using rule 22 (metodos -> listaPushBack .)
    SELECT          reduce using rule 22 (metodos -> listaPushBack .)
    VARIABLE        reduce using rule 22 (metodos -> listaPushBack .)
    FMT             reduce using rule 22 (metodos -> listaPushBack .)
    VAR             reduce using rule 22 (metodos -> listaPushBack .)
    LEN             reduce using rule 22 (metodos -> listaPushBack .)
    APPEND          reduce using rule 22 (metodos -> listaPushBack .)
    CAP             reduce using rule 22 (metodos -> listaPushBack .)
    DELETE          reduce using rule 22 (metodos -> listaPushBack .)
    INTEGER         reduce using rule 22 (metodos -> listaPushBack .)
    STRING          reduce using rule 22 (metodos -> listaPushBack .)
    FLOAT           reduce using rule 22 (metodos -> listaPushBack .)
    $end            reduce using rule 22 (metodos -> listaPushBack .)
    LOCKR           reduce using rule 22 (metodos -> listaPushBack .)
    CASE            reduce using rule 22 (metodos -> listaPushBack .)
    RETURN          reduce using rule 22 (metodos -> listaPushBack .)


state 33

    (23) metodos -> listaFront .

    FUNC            reduce using rule 23 (metodos -> listaFront .)
    SWITCH          reduce using rule 23 (metodos -> listaFront .)
    FOR             reduce using rule 23 (metodos -> listaFront .)
    SELECT          reduce using rule 23 (metodos -> listaFront .)
    VARIABLE        reduce using rule 23 (metodos -> listaFront .)
    FMT             reduce using rule 23 (metodos -> listaFront .)
    VAR             reduce using rule 23 (metodos -> listaFront .)
    LEN             reduce using rule 23 (metodos -> listaFront .)
    APPEND          reduce using rule 23 (metodos -> listaFront .)
    CAP             reduce using rule 23 (metodos -> listaFront .)
    DELETE          reduce using rule 23 (metodos -> listaFront .)
    INTEGER         reduce using rule 23 (metodos -> listaFront .)
    STRING          reduce using rule 23 (metodos -> listaFront .)
    FLOAT           reduce using rule 23 (metodos -> listaFront .)
    $end            reduce using rule 23 (metodos -> listaFront .)
    LOCKR           reduce using rule 23 (metodos -> listaFront .)
    CASE            reduce using rule 23 (metodos -> listaFront .)
    RETURN          reduce using rule 23 (metodos -> listaFront .)


state 34

    (24) metodos -> lenMap .

    FUNC            reduce using rule 24 (metodos -> lenMap .)
    SWITCH          reduce using rule 24 (metodos -> lenMap .)
    FOR             reduce using rule 24 (metodos -> lenMap .)
    SELECT          reduce using rule 24 (metodos -> lenMap .)
    VARIABLE        reduce using rule 24 (metodos -> lenMap .)
    FMT             reduce using rule 24 (metodos -> lenMap .)
    VAR             reduce using rule 24 (metodos -> lenMap .)
    LEN             reduce using rule 24 (metodos -> lenMap .)
    APPEND          reduce using rule 24 (metodos -> lenMap .)
    CAP             reduce using rule 24 (metodos -> lenMap .)
    DELETE          reduce using rule 24 (metodos -> lenMap .)
    INTEGER         reduce using rule 24 (metodos -> lenMap .)
    STRING          reduce using rule 24 (metodos -> lenMap .)
    FLOAT           reduce using rule 24 (metodos -> lenMap .)
    $end            reduce using rule 24 (metodos -> lenMap .)
    LOCKR           reduce using rule 24 (metodos -> lenMap .)
    CASE            reduce using rule 24 (metodos -> lenMap .)
    RETURN          reduce using rule 24 (metodos -> lenMap .)


state 35

    (25) metodos -> deleteMap .

    FUNC            reduce using rule 25 (metodos -> deleteMap .)
    SWITCH          reduce using rule 25 (metodos -> deleteMap .)
    FOR             reduce using rule 25 (metodos -> deleteMap .)
    SELECT          reduce using rule 25 (metodos -> deleteMap .)
    VARIABLE        reduce using rule 25 (metodos -> deleteMap .)
    FMT             reduce using rule 25 (metodos -> deleteMap .)
    VAR             reduce using rule 25 (metodos -> deleteMap .)
    LEN             reduce using rule 25 (metodos -> deleteMap .)
    APPEND          reduce using rule 25 (metodos -> deleteMap .)
    CAP             reduce using rule 25 (metodos -> deleteMap .)
    DELETE          reduce using rule 25 (metodos -> deleteMap .)
    INTEGER         reduce using rule 25 (metodos -> deleteMap .)
    STRING          reduce using rule 25 (metodos -> deleteMap .)
    FLOAT           reduce using rule 25 (metodos -> deleteMap .)
    $end            reduce using rule 25 (metodos -> deleteMap .)
    LOCKR           reduce using rule 25 (metodos -> deleteMap .)
    CASE            reduce using rule 25 (metodos -> deleteMap .)
    RETURN          reduce using rule 25 (metodos -> deleteMap .)


state 36

    (119) expresionMatematica -> expresionSuma .

    FUNC            reduce using rule 119 (expresionMatematica -> expresionSuma .)
    SWITCH          reduce using rule 119 (expresionMatematica -> expresionSuma .)
    FOR             reduce using rule 119 (expresionMatematica -> expresionSuma .)
    SELECT          reduce using rule 119 (expresionMatematica -> expresionSuma .)
    VARIABLE        reduce using rule 119 (expresionMatematica -> expresionSuma .)
    FMT             reduce using rule 119 (expresionMatematica -> expresionSuma .)
    VAR             reduce using rule 119 (expresionMatematica -> expresionSuma .)
    LEN             reduce using rule 119 (expresionMatematica -> expresionSuma .)
    APPEND          reduce using rule 119 (expresionMatematica -> expresionSuma .)
    CAP             reduce using rule 119 (expresionMatematica -> expresionSuma .)
    DELETE          reduce using rule 119 (expresionMatematica -> expresionSuma .)
    INTEGER         reduce using rule 119 (expresionMatematica -> expresionSuma .)
    STRING          reduce using rule 119 (expresionMatematica -> expresionSuma .)
    FLOAT           reduce using rule 119 (expresionMatematica -> expresionSuma .)
    $end            reduce using rule 119 (expresionMatematica -> expresionSuma .)
    LOCKR           reduce using rule 119 (expresionMatematica -> expresionSuma .)
    CASE            reduce using rule 119 (expresionMatematica -> expresionSuma .)
    RETURN          reduce using rule 119 (expresionMatematica -> expresionSuma .)
    SEMICOLON       reduce using rule 119 (expresionMatematica -> expresionSuma .)


state 37

    (120) expresionMatematica -> expresionResta .

    FUNC            reduce using rule 120 (expresionMatematica -> expresionResta .)
    SWITCH          reduce using rule 120 (expresionMatematica -> expresionResta .)
    FOR             reduce using rule 120 (expresionMatematica -> expresionResta .)
    SELECT          reduce using rule 120 (expresionMatematica -> expresionResta .)
    VARIABLE        reduce using rule 120 (expresionMatematica -> expresionResta .)
    FMT             reduce using rule 120 (expresionMatematica -> expresionResta .)
    VAR             reduce using rule 120 (expresionMatematica -> expresionResta .)
    LEN             reduce using rule 120 (expresionMatematica -> expresionResta .)
    APPEND          reduce using rule 120 (expresionMatematica -> expresionResta .)
    CAP             reduce using rule 120 (expresionMatematica -> expresionResta .)
    DELETE          reduce using rule 120 (expresionMatematica -> expresionResta .)
    INTEGER         reduce using rule 120 (expresionMatematica -> expresionResta .)
    STRING          reduce using rule 120 (expresionMatematica -> expresionResta .)
    FLOAT           reduce using rule 120 (expresionMatematica -> expresionResta .)
    $end            reduce using rule 120 (expresionMatematica -> expresionResta .)
    LOCKR           reduce using rule 120 (expresionMatematica -> expresionResta .)
    CASE            reduce using rule 120 (expresionMatematica -> expresionResta .)
    RETURN          reduce using rule 120 (expresionMatematica -> expresionResta .)
    SEMICOLON       reduce using rule 120 (expresionMatematica -> expresionResta .)


state 38

    (121) expresionMatematica -> expresionMultiplicacion .

    FUNC            reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    SWITCH          reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    FOR             reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    SELECT          reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    VARIABLE        reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    FMT             reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    VAR             reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    LEN             reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    APPEND          reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    CAP             reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    DELETE          reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    INTEGER         reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    STRING          reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    FLOAT           reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    $end            reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    LOCKR           reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    CASE            reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    RETURN          reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)
    SEMICOLON       reduce using rule 121 (expresionMatematica -> expresionMultiplicacion .)


state 39

    (122) expresionMatematica -> expresionDivision .

    FUNC            reduce using rule 122 (expresionMatematica -> expresionDivision .)
    SWITCH          reduce using rule 122 (expresionMatematica -> expresionDivision .)
    FOR             reduce using rule 122 (expresionMatematica -> expresionDivision .)
    SELECT          reduce using rule 122 (expresionMatematica -> expresionDivision .)
    VARIABLE        reduce using rule 122 (expresionMatematica -> expresionDivision .)
    FMT             reduce using rule 122 (expresionMatematica -> expresionDivision .)
    VAR             reduce using rule 122 (expresionMatematica -> expresionDivision .)
    LEN             reduce using rule 122 (expresionMatematica -> expresionDivision .)
    APPEND          reduce using rule 122 (expresionMatematica -> expresionDivision .)
    CAP             reduce using rule 122 (expresionMatematica -> expresionDivision .)
    DELETE          reduce using rule 122 (expresionMatematica -> expresionDivision .)
    INTEGER         reduce using rule 122 (expresionMatematica -> expresionDivision .)
    STRING          reduce using rule 122 (expresionMatematica -> expresionDivision .)
    FLOAT           reduce using rule 122 (expresionMatematica -> expresionDivision .)
    $end            reduce using rule 122 (expresionMatematica -> expresionDivision .)
    LOCKR           reduce using rule 122 (expresionMatematica -> expresionDivision .)
    CASE            reduce using rule 122 (expresionMatematica -> expresionDivision .)
    RETURN          reduce using rule 122 (expresionMatematica -> expresionDivision .)
    SEMICOLON       reduce using rule 122 (expresionMatematica -> expresionDivision .)


state 40

    (123) expresionMatematica -> expresionModulo .

    FUNC            reduce using rule 123 (expresionMatematica -> expresionModulo .)
    SWITCH          reduce using rule 123 (expresionMatematica -> expresionModulo .)
    FOR             reduce using rule 123 (expresionMatematica -> expresionModulo .)
    SELECT          reduce using rule 123 (expresionMatematica -> expresionModulo .)
    VARIABLE        reduce using rule 123 (expresionMatematica -> expresionModulo .)
    FMT             reduce using rule 123 (expresionMatematica -> expresionModulo .)
    VAR             reduce using rule 123 (expresionMatematica -> expresionModulo .)
    LEN             reduce using rule 123 (expresionMatematica -> expresionModulo .)
    APPEND          reduce using rule 123 (expresionMatematica -> expresionModulo .)
    CAP             reduce using rule 123 (expresionMatematica -> expresionModulo .)
    DELETE          reduce using rule 123 (expresionMatematica -> expresionModulo .)
    INTEGER         reduce using rule 123 (expresionMatematica -> expresionModulo .)
    STRING          reduce using rule 123 (expresionMatematica -> expresionModulo .)
    FLOAT           reduce using rule 123 (expresionMatematica -> expresionModulo .)
    $end            reduce using rule 123 (expresionMatematica -> expresionModulo .)
    LOCKR           reduce using rule 123 (expresionMatematica -> expresionModulo .)
    CASE            reduce using rule 123 (expresionMatematica -> expresionModulo .)
    RETURN          reduce using rule 123 (expresionMatematica -> expresionModulo .)
    SEMICOLON       reduce using rule 123 (expresionMatematica -> expresionModulo .)


state 41

    (124) expresionMatematica -> factor . operadorMatematico factor
    (138) valor -> factor .
    (130) operadorMatematico -> . PLUS
    (131) operadorMatematico -> . MINUS
    (132) operadorMatematico -> . TIMES
    (133) operadorMatematico -> . DIVIDE
    (134) operadorMatematico -> . MODULE

    EQUAL           reduce using rule 138 (valor -> factor .)
    UNEQUAL         reduce using rule 138 (valor -> factor .)
    GREATERTHAN     reduce using rule 138 (valor -> factor .)
    SMALLERTHAN     reduce using rule 138 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 138 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 138 (valor -> factor .)
    AND             reduce using rule 138 (valor -> factor .)
    OR              reduce using rule 138 (valor -> factor .)
    NOT             reduce using rule 138 (valor -> factor .)
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101
    MODULE          shift and go to state 102

    operadorMatematico             shift and go to state 97

state 42

    (97) condicion -> valor . operadorComparacion valor
    (98) condicion -> valor . operadorLogico valor
    (106) operadorComparacion -> . EQUAL
    (107) operadorComparacion -> . UNEQUAL
    (108) operadorComparacion -> . GREATERTHAN
    (109) operadorComparacion -> . SMALLERTHAN
    (110) operadorComparacion -> . GREATEROREQUALTHAN
    (111) operadorComparacion -> . SMALLEROREQUALTHAN
    (116) operadorLogico -> . AND
    (117) operadorLogico -> . OR
    (118) operadorLogico -> . NOT

    EQUAL           shift and go to state 105
    UNEQUAL         shift and go to state 106
    GREATERTHAN     shift and go to state 107
    SMALLERTHAN     shift and go to state 108
    GREATEROREQUALTHAN shift and go to state 109
    SMALLEROREQUALTHAN shift and go to state 110
    AND             shift and go to state 111
    OR              shift and go to state 112
    NOT             shift and go to state 113

    operadorComparacion            shift and go to state 103
    operadorLogico                 shift and go to state 104

state 43

    (99) condicion -> comparaciones .

    FUNC            reduce using rule 99 (condicion -> comparaciones .)
    SWITCH          reduce using rule 99 (condicion -> comparaciones .)
    FOR             reduce using rule 99 (condicion -> comparaciones .)
    SELECT          reduce using rule 99 (condicion -> comparaciones .)
    VARIABLE        reduce using rule 99 (condicion -> comparaciones .)
    FMT             reduce using rule 99 (condicion -> comparaciones .)
    VAR             reduce using rule 99 (condicion -> comparaciones .)
    LEN             reduce using rule 99 (condicion -> comparaciones .)
    APPEND          reduce using rule 99 (condicion -> comparaciones .)
    CAP             reduce using rule 99 (condicion -> comparaciones .)
    DELETE          reduce using rule 99 (condicion -> comparaciones .)
    INTEGER         reduce using rule 99 (condicion -> comparaciones .)
    STRING          reduce using rule 99 (condicion -> comparaciones .)
    FLOAT           reduce using rule 99 (condicion -> comparaciones .)
    $end            reduce using rule 99 (condicion -> comparaciones .)
    LOCKR           reduce using rule 99 (condicion -> comparaciones .)
    CASE            reduce using rule 99 (condicion -> comparaciones .)
    LOCKL           reduce using rule 99 (condicion -> comparaciones .)
    RETURN          reduce using rule 99 (condicion -> comparaciones .)
    SEMICOLON       reduce using rule 99 (condicion -> comparaciones .)
    COLON           reduce using rule 99 (condicion -> comparaciones .)


state 44

    (75) impresionSencilla -> tipoImpresion . BRACKETL valores BRACKETR

    BRACKETL        shift and go to state 114


state 45

    (78) impresionBufio -> FMT . DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> FMT . DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (81) lecturaScanf -> FMT . DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> FMT . DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (76) tipoImpresion -> FMT . DOT PRINT
    (77) tipoImpresion -> FMT . DOT PRINTLN

    DOT             shift and go to state 115


state 46

    (137) valor -> STRING .

    EQUAL           reduce using rule 137 (valor -> STRING .)
    UNEQUAL         reduce using rule 137 (valor -> STRING .)
    GREATERTHAN     reduce using rule 137 (valor -> STRING .)
    SMALLERTHAN     reduce using rule 137 (valor -> STRING .)
    GREATEROREQUALTHAN reduce using rule 137 (valor -> STRING .)
    SMALLEROREQUALTHAN reduce using rule 137 (valor -> STRING .)
    AND             reduce using rule 137 (valor -> STRING .)
    OR              reduce using rule 137 (valor -> STRING .)
    NOT             reduce using rule 137 (valor -> STRING .)
    FUNC            reduce using rule 137 (valor -> STRING .)
    SWITCH          reduce using rule 137 (valor -> STRING .)
    FOR             reduce using rule 137 (valor -> STRING .)
    SELECT          reduce using rule 137 (valor -> STRING .)
    VARIABLE        reduce using rule 137 (valor -> STRING .)
    FMT             reduce using rule 137 (valor -> STRING .)
    VAR             reduce using rule 137 (valor -> STRING .)
    LEN             reduce using rule 137 (valor -> STRING .)
    APPEND          reduce using rule 137 (valor -> STRING .)
    CAP             reduce using rule 137 (valor -> STRING .)
    DELETE          reduce using rule 137 (valor -> STRING .)
    INTEGER         reduce using rule 137 (valor -> STRING .)
    STRING          reduce using rule 137 (valor -> STRING .)
    FLOAT           reduce using rule 137 (valor -> STRING .)
    $end            reduce using rule 137 (valor -> STRING .)
    LOCKR           reduce using rule 137 (valor -> STRING .)
    CASE            reduce using rule 137 (valor -> STRING .)
    RETURN          reduce using rule 137 (valor -> STRING .)
    SEMICOLON       reduce using rule 137 (valor -> STRING .)
    LOCKL           reduce using rule 137 (valor -> STRING .)
    COLON           reduce using rule 137 (valor -> STRING .)
    COMA            reduce using rule 137 (valor -> STRING .)
    BRACKETR        reduce using rule 137 (valor -> STRING .)


state 47

    (93) varAssign -> VAR . VARIABLE

    VARIABLE        shift and go to state 116


state 48

    (57) lenSlice -> LEN . BRACKETL VARIABLE BRACKETR
    (66) lenMap -> LEN . VARIABLE

    BRACKETL        shift and go to state 117
    VARIABLE        shift and go to state 118


state 49

    (58) appendSlice -> APPEND . BRACKETL VARIABLE valores BRACKETR

    BRACKETL        shift and go to state 119


state 50

    (60) capSlice -> CAP . BRACKETL VARIABLE BRACKETR

    BRACKETL        shift and go to state 120


state 51

    (67) deleteMap -> DELETE . BRACKETL VARIABLE COMA valor BRACKETR

    BRACKETL        shift and go to state 121


state 52

    (140) factor -> numero .

    PLUS            reduce using rule 140 (factor -> numero .)
    MINUS           reduce using rule 140 (factor -> numero .)
    TIMES           reduce using rule 140 (factor -> numero .)
    DIVIDE          reduce using rule 140 (factor -> numero .)
    MODULE          reduce using rule 140 (factor -> numero .)
    EQUAL           reduce using rule 140 (factor -> numero .)
    UNEQUAL         reduce using rule 140 (factor -> numero .)
    GREATERTHAN     reduce using rule 140 (factor -> numero .)
    SMALLERTHAN     reduce using rule 140 (factor -> numero .)
    GREATEROREQUALTHAN reduce using rule 140 (factor -> numero .)
    SMALLEROREQUALTHAN reduce using rule 140 (factor -> numero .)
    AND             reduce using rule 140 (factor -> numero .)
    OR              reduce using rule 140 (factor -> numero .)
    NOT             reduce using rule 140 (factor -> numero .)
    FUNC            reduce using rule 140 (factor -> numero .)
    SWITCH          reduce using rule 140 (factor -> numero .)
    FOR             reduce using rule 140 (factor -> numero .)
    SELECT          reduce using rule 140 (factor -> numero .)
    VARIABLE        reduce using rule 140 (factor -> numero .)
    FMT             reduce using rule 140 (factor -> numero .)
    VAR             reduce using rule 140 (factor -> numero .)
    LEN             reduce using rule 140 (factor -> numero .)
    APPEND          reduce using rule 140 (factor -> numero .)
    CAP             reduce using rule 140 (factor -> numero .)
    DELETE          reduce using rule 140 (factor -> numero .)
    INTEGER         reduce using rule 140 (factor -> numero .)
    STRING          reduce using rule 140 (factor -> numero .)
    FLOAT           reduce using rule 140 (factor -> numero .)
    $end            reduce using rule 140 (factor -> numero .)
    LOCKR           reduce using rule 140 (factor -> numero .)
    CASE            reduce using rule 140 (factor -> numero .)
    RETURN          reduce using rule 140 (factor -> numero .)
    SEMICOLON       reduce using rule 140 (factor -> numero .)
    LOCKL           reduce using rule 140 (factor -> numero .)
    COLON           reduce using rule 140 (factor -> numero .)
    COMA            reduce using rule 140 (factor -> numero .)
    BRACKETR        reduce using rule 140 (factor -> numero .)


state 53

    (141) numero -> FLOAT .

    PLUS            reduce using rule 141 (numero -> FLOAT .)
    MINUS           reduce using rule 141 (numero -> FLOAT .)
    TIMES           reduce using rule 141 (numero -> FLOAT .)
    DIVIDE          reduce using rule 141 (numero -> FLOAT .)
    MODULE          reduce using rule 141 (numero -> FLOAT .)
    EQUAL           reduce using rule 141 (numero -> FLOAT .)
    UNEQUAL         reduce using rule 141 (numero -> FLOAT .)
    GREATERTHAN     reduce using rule 141 (numero -> FLOAT .)
    SMALLERTHAN     reduce using rule 141 (numero -> FLOAT .)
    GREATEROREQUALTHAN reduce using rule 141 (numero -> FLOAT .)
    SMALLEROREQUALTHAN reduce using rule 141 (numero -> FLOAT .)
    AND             reduce using rule 141 (numero -> FLOAT .)
    OR              reduce using rule 141 (numero -> FLOAT .)
    NOT             reduce using rule 141 (numero -> FLOAT .)
    FUNC            reduce using rule 141 (numero -> FLOAT .)
    SWITCH          reduce using rule 141 (numero -> FLOAT .)
    FOR             reduce using rule 141 (numero -> FLOAT .)
    SELECT          reduce using rule 141 (numero -> FLOAT .)
    VARIABLE        reduce using rule 141 (numero -> FLOAT .)
    FMT             reduce using rule 141 (numero -> FLOAT .)
    VAR             reduce using rule 141 (numero -> FLOAT .)
    LEN             reduce using rule 141 (numero -> FLOAT .)
    APPEND          reduce using rule 141 (numero -> FLOAT .)
    CAP             reduce using rule 141 (numero -> FLOAT .)
    DELETE          reduce using rule 141 (numero -> FLOAT .)
    INTEGER         reduce using rule 141 (numero -> FLOAT .)
    STRING          reduce using rule 141 (numero -> FLOAT .)
    FLOAT           reduce using rule 141 (numero -> FLOAT .)
    $end            reduce using rule 141 (numero -> FLOAT .)
    LOCKR           reduce using rule 141 (numero -> FLOAT .)
    CASE            reduce using rule 141 (numero -> FLOAT .)
    RETURN          reduce using rule 141 (numero -> FLOAT .)
    SEMICOLON       reduce using rule 141 (numero -> FLOAT .)
    LOCKL           reduce using rule 141 (numero -> FLOAT .)
    COLON           reduce using rule 141 (numero -> FLOAT .)
    COMA            reduce using rule 141 (numero -> FLOAT .)
    BRACKETR        reduce using rule 141 (numero -> FLOAT .)


state 54

    (3) main -> ejecutable main .

    $end            reduce using rule 3 (main -> ejecutable main .)
    LOCKR           reduce using rule 3 (main -> ejecutable main .)
    CASE            reduce using rule 3 (main -> ejecutable main .)


state 55

    (34) funcion -> FUNC VARIABLE . BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR

    BRACKETL        shift and go to state 122


state 56

    (28) asignacion -> VARIABLE ASSIGN . asignable
    (59) appendSlice -> VARIABLE ASSIGN . APPEND BRACKETL VARIABLE valores BRACKETR
    (31) asignable -> . valor
    (32) asignable -> . expresionMatematica
    (33) asignable -> . condicion
    (137) valor -> . STRING
    (138) valor -> . factor
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    APPEND          shift and go to state 125
    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 53

    asignable                      shift and go to state 124
    valor                          shift and go to state 74
    expresionMatematica            shift and go to state 75
    condicion                      shift and go to state 76
    factor                         shift and go to state 78
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    comparaciones                  shift and go to state 43
    numero                         shift and go to state 52

state 57

    (92) varShortAssign -> VARIABLE SHORTASSIGN .

    BRACEL          reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    VARIABLE        reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    LIST            reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    BUFIO           reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    MAKE            reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    MAP             reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    STRING          reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    INTEGER         reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    FLOAT           reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    RANGE           reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)
    SMALLERTHAN     reduce using rule 92 (varShortAssign -> VARIABLE SHORTASSIGN .)


state 58

    (62) listaPushBack -> VARIABLE DOT . PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> VARIABLE DOT . FRONT BRACKETL BRACKETR

    PUSHBACK        shift and go to state 126
    FRONT           shift and go to state 127


state 59

    (39) estructuraControl -> SWITCH VARIABLE . LOCKL cases LOCKR

    LOCKL           shift and go to state 128


state 60

    (40) estructuraControl -> FOR condicion . LOCKL main LOCKR

    LOCKL           shift and go to state 129


state 61

    (41) estructuraControl -> FOR asignacion . SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 130


state 62

    (42) estructuraControl -> FOR VARIABLE . COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (28) asignacion -> VARIABLE . ASSIGN asignable
    (92) varShortAssign -> VARIABLE . SHORTASSIGN
    (139) factor -> VARIABLE .

    COMA            shift and go to state 131
    ASSIGN          shift and go to state 132
    SHORTASSIGN     shift and go to state 57
    EQUAL           reduce using rule 139 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 139 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    AND             reduce using rule 139 (factor -> VARIABLE .)
    OR              reduce using rule 139 (factor -> VARIABLE .)
    NOT             reduce using rule 139 (factor -> VARIABLE .)


state 63

    (43) estructuraControl -> FOR varShortAssign . RANGE VARIABLE LOCKL main LOCKR
    (26) asignacion -> varShortAssign . asignable
    (31) asignable -> . valor
    (32) asignable -> . expresionMatematica
    (33) asignable -> . condicion
    (137) valor -> . STRING
    (138) valor -> . factor
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    RANGE           shift and go to state 133
    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 53

    asignable                      shift and go to state 71
    valor                          shift and go to state 74
    expresionMatematica            shift and go to state 75
    condicion                      shift and go to state 76
    factor                         shift and go to state 78
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    comparaciones                  shift and go to state 43
    numero                         shift and go to state 52

state 64

    (27) asignacion -> varAssign . ASSIGN asignable
    (29) asignacion -> varAssign . tipoDato ASSIGN asignable
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    ASSIGN          shift and go to state 92
    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 134

state 65

    (138) valor -> factor .

    EQUAL           reduce using rule 138 (valor -> factor .)
    UNEQUAL         reduce using rule 138 (valor -> factor .)
    GREATERTHAN     reduce using rule 138 (valor -> factor .)
    SMALLERTHAN     reduce using rule 138 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 138 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 138 (valor -> factor .)
    AND             reduce using rule 138 (valor -> factor .)
    OR              reduce using rule 138 (valor -> factor .)
    NOT             reduce using rule 138 (valor -> factor .)
    FUNC            reduce using rule 138 (valor -> factor .)
    SWITCH          reduce using rule 138 (valor -> factor .)
    FOR             reduce using rule 138 (valor -> factor .)
    SELECT          reduce using rule 138 (valor -> factor .)
    VARIABLE        reduce using rule 138 (valor -> factor .)
    FMT             reduce using rule 138 (valor -> factor .)
    VAR             reduce using rule 138 (valor -> factor .)
    LEN             reduce using rule 138 (valor -> factor .)
    APPEND          reduce using rule 138 (valor -> factor .)
    CAP             reduce using rule 138 (valor -> factor .)
    DELETE          reduce using rule 138 (valor -> factor .)
    INTEGER         reduce using rule 138 (valor -> factor .)
    STRING          reduce using rule 138 (valor -> factor .)
    FLOAT           reduce using rule 138 (valor -> factor .)
    $end            reduce using rule 138 (valor -> factor .)
    LOCKR           reduce using rule 138 (valor -> factor .)
    CASE            reduce using rule 138 (valor -> factor .)
    LOCKL           reduce using rule 138 (valor -> factor .)
    RETURN          reduce using rule 138 (valor -> factor .)
    SEMICOLON       reduce using rule 138 (valor -> factor .)
    COLON           reduce using rule 138 (valor -> factor .)
    COMA            reduce using rule 138 (valor -> factor .)
    BRACKETR        reduce using rule 138 (valor -> factor .)


state 66

    (100) comparaciones -> INTEGER . EQUAL INTEGER
    (101) comparaciones -> INTEGER . UNEQUAL INTEGER
    (102) comparaciones -> INTEGER . GREATERTHAN INTEGER
    (103) comparaciones -> INTEGER . SMALLERTHAN INTEGER
    (104) comparaciones -> INTEGER . GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> INTEGER . SMALLEROREQUALTHAN INTEGER
    (142) numero -> INTEGER .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for UNEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for SMALLERTHAN resolved as shift
  ! shift/reduce conflict for GREATEROREQUALTHAN resolved as shift
  ! shift/reduce conflict for SMALLEROREQUALTHAN resolved as shift
    EQUAL           shift and go to state 85
    UNEQUAL         shift and go to state 86
    GREATERTHAN     shift and go to state 87
    SMALLERTHAN     shift and go to state 88
    GREATEROREQUALTHAN shift and go to state 89
    SMALLEROREQUALTHAN shift and go to state 90
    AND             reduce using rule 142 (numero -> INTEGER .)
    OR              reduce using rule 142 (numero -> INTEGER .)
    NOT             reduce using rule 142 (numero -> INTEGER .)

  ! EQUAL           [ reduce using rule 142 (numero -> INTEGER .) ]
  ! UNEQUAL         [ reduce using rule 142 (numero -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 142 (numero -> INTEGER .) ]
  ! SMALLERTHAN     [ reduce using rule 142 (numero -> INTEGER .) ]
  ! GREATEROREQUALTHAN [ reduce using rule 142 (numero -> INTEGER .) ]
  ! SMALLEROREQUALTHAN [ reduce using rule 142 (numero -> INTEGER .) ]


state 67

    (51) estructuraDatos -> varShortAssign BRACEL . INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> varShortAssign BRACEL . BRACER tipoDato LOCKL valores LOCKR

    INTEGER         shift and go to state 135
    BRACER          shift and go to state 136


state 68

    (53) estructuraDatos -> varShortAssign VARIABLE . BRACEL COLON BRACER
    (54) estructuraDatos -> varShortAssign VARIABLE . BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> varShortAssign VARIABLE . BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> varShortAssign VARIABLE . BRACEL INTEGER COLON INTEGER BRACER
    (80) lecturaReader -> varShortAssign VARIABLE . DOT READSTRING BRACKETL STRING BRACKETR
    (139) factor -> VARIABLE .

    BRACEL          shift and go to state 137
    DOT             shift and go to state 138
    PLUS            reduce using rule 139 (factor -> VARIABLE .)
    MINUS           reduce using rule 139 (factor -> VARIABLE .)
    TIMES           reduce using rule 139 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 139 (factor -> VARIABLE .)
    MODULE          reduce using rule 139 (factor -> VARIABLE .)
    EQUAL           reduce using rule 139 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 139 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    AND             reduce using rule 139 (factor -> VARIABLE .)
    OR              reduce using rule 139 (factor -> VARIABLE .)
    NOT             reduce using rule 139 (factor -> VARIABLE .)
    FUNC            reduce using rule 139 (factor -> VARIABLE .)
    SWITCH          reduce using rule 139 (factor -> VARIABLE .)
    FOR             reduce using rule 139 (factor -> VARIABLE .)
    SELECT          reduce using rule 139 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 139 (factor -> VARIABLE .)
    FMT             reduce using rule 139 (factor -> VARIABLE .)
    VAR             reduce using rule 139 (factor -> VARIABLE .)
    LEN             reduce using rule 139 (factor -> VARIABLE .)
    APPEND          reduce using rule 139 (factor -> VARIABLE .)
    CAP             reduce using rule 139 (factor -> VARIABLE .)
    DELETE          reduce using rule 139 (factor -> VARIABLE .)
    INTEGER         reduce using rule 139 (factor -> VARIABLE .)
    STRING          reduce using rule 139 (factor -> VARIABLE .)
    FLOAT           reduce using rule 139 (factor -> VARIABLE .)
    $end            reduce using rule 139 (factor -> VARIABLE .)
    LOCKR           reduce using rule 139 (factor -> VARIABLE .)
    CASE            reduce using rule 139 (factor -> VARIABLE .)
    RETURN          reduce using rule 139 (factor -> VARIABLE .)


state 69

    (61) estructuraDatos -> varShortAssign LIST . DOT NEW BRACKETL BRACKETR

    DOT             shift and go to state 139


state 70

    (90) declaracion -> varShortAssign BUFIO . DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> varShortAssign BUFIO . DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    DOT             shift and go to state 140


state 71

    (26) asignacion -> varShortAssign asignable .

    FUNC            reduce using rule 26 (asignacion -> varShortAssign asignable .)
    SWITCH          reduce using rule 26 (asignacion -> varShortAssign asignable .)
    FOR             reduce using rule 26 (asignacion -> varShortAssign asignable .)
    SELECT          reduce using rule 26 (asignacion -> varShortAssign asignable .)
    VARIABLE        reduce using rule 26 (asignacion -> varShortAssign asignable .)
    FMT             reduce using rule 26 (asignacion -> varShortAssign asignable .)
    VAR             reduce using rule 26 (asignacion -> varShortAssign asignable .)
    LEN             reduce using rule 26 (asignacion -> varShortAssign asignable .)
    APPEND          reduce using rule 26 (asignacion -> varShortAssign asignable .)
    CAP             reduce using rule 26 (asignacion -> varShortAssign asignable .)
    DELETE          reduce using rule 26 (asignacion -> varShortAssign asignable .)
    INTEGER         reduce using rule 26 (asignacion -> varShortAssign asignable .)
    STRING          reduce using rule 26 (asignacion -> varShortAssign asignable .)
    FLOAT           reduce using rule 26 (asignacion -> varShortAssign asignable .)
    $end            reduce using rule 26 (asignacion -> varShortAssign asignable .)
    LOCKR           reduce using rule 26 (asignacion -> varShortAssign asignable .)
    CASE            reduce using rule 26 (asignacion -> varShortAssign asignable .)
    SEMICOLON       reduce using rule 26 (asignacion -> varShortAssign asignable .)
    RETURN          reduce using rule 26 (asignacion -> varShortAssign asignable .)


state 72

    (68) initmapvalue -> varShortAssign createmap .

    FUNC            reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    SWITCH          reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    FOR             reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    SELECT          reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    VARIABLE        reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    FMT             reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    VAR             reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    LEN             reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    APPEND          reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    CAP             reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    DELETE          reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    INTEGER         reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    STRING          reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    FLOAT           reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    $end            reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    LOCKR           reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    CASE            reduce using rule 68 (initmapvalue -> varShortAssign createmap .)
    RETURN          reduce using rule 68 (initmapvalue -> varShortAssign createmap .)


state 73

    (70) initmap -> varShortAssign MAKE . BRACKETL createemptymap BRACKETR

    BRACKETL        shift and go to state 141


state 74

    (31) asignable -> valor .
    (97) condicion -> valor . operadorComparacion valor
    (98) condicion -> valor . operadorLogico valor
    (106) operadorComparacion -> . EQUAL
    (107) operadorComparacion -> . UNEQUAL
    (108) operadorComparacion -> . GREATERTHAN
    (109) operadorComparacion -> . SMALLERTHAN
    (110) operadorComparacion -> . GREATEROREQUALTHAN
    (111) operadorComparacion -> . SMALLEROREQUALTHAN
    (116) operadorLogico -> . AND
    (117) operadorLogico -> . OR
    (118) operadorLogico -> . NOT

    FUNC            reduce using rule 31 (asignable -> valor .)
    SWITCH          reduce using rule 31 (asignable -> valor .)
    FOR             reduce using rule 31 (asignable -> valor .)
    SELECT          reduce using rule 31 (asignable -> valor .)
    VARIABLE        reduce using rule 31 (asignable -> valor .)
    FMT             reduce using rule 31 (asignable -> valor .)
    VAR             reduce using rule 31 (asignable -> valor .)
    LEN             reduce using rule 31 (asignable -> valor .)
    APPEND          reduce using rule 31 (asignable -> valor .)
    CAP             reduce using rule 31 (asignable -> valor .)
    DELETE          reduce using rule 31 (asignable -> valor .)
    INTEGER         reduce using rule 31 (asignable -> valor .)
    STRING          reduce using rule 31 (asignable -> valor .)
    FLOAT           reduce using rule 31 (asignable -> valor .)
    $end            reduce using rule 31 (asignable -> valor .)
    LOCKR           reduce using rule 31 (asignable -> valor .)
    CASE            reduce using rule 31 (asignable -> valor .)
    RETURN          reduce using rule 31 (asignable -> valor .)
    SEMICOLON       reduce using rule 31 (asignable -> valor .)
    EQUAL           shift and go to state 105
    UNEQUAL         shift and go to state 106
    GREATERTHAN     shift and go to state 107
    SMALLERTHAN     shift and go to state 108
    GREATEROREQUALTHAN shift and go to state 109
    SMALLEROREQUALTHAN shift and go to state 110
    AND             shift and go to state 111
    OR              shift and go to state 112
    NOT             shift and go to state 113

    operadorComparacion            shift and go to state 103
    operadorLogico                 shift and go to state 104

state 75

    (32) asignable -> expresionMatematica .

    FUNC            reduce using rule 32 (asignable -> expresionMatematica .)
    SWITCH          reduce using rule 32 (asignable -> expresionMatematica .)
    FOR             reduce using rule 32 (asignable -> expresionMatematica .)
    SELECT          reduce using rule 32 (asignable -> expresionMatematica .)
    VARIABLE        reduce using rule 32 (asignable -> expresionMatematica .)
    FMT             reduce using rule 32 (asignable -> expresionMatematica .)
    VAR             reduce using rule 32 (asignable -> expresionMatematica .)
    LEN             reduce using rule 32 (asignable -> expresionMatematica .)
    APPEND          reduce using rule 32 (asignable -> expresionMatematica .)
    CAP             reduce using rule 32 (asignable -> expresionMatematica .)
    DELETE          reduce using rule 32 (asignable -> expresionMatematica .)
    INTEGER         reduce using rule 32 (asignable -> expresionMatematica .)
    STRING          reduce using rule 32 (asignable -> expresionMatematica .)
    FLOAT           reduce using rule 32 (asignable -> expresionMatematica .)
    $end            reduce using rule 32 (asignable -> expresionMatematica .)
    LOCKR           reduce using rule 32 (asignable -> expresionMatematica .)
    CASE            reduce using rule 32 (asignable -> expresionMatematica .)
    RETURN          reduce using rule 32 (asignable -> expresionMatematica .)
    SEMICOLON       reduce using rule 32 (asignable -> expresionMatematica .)


state 76

    (33) asignable -> condicion .

    FUNC            reduce using rule 33 (asignable -> condicion .)
    SWITCH          reduce using rule 33 (asignable -> condicion .)
    FOR             reduce using rule 33 (asignable -> condicion .)
    SELECT          reduce using rule 33 (asignable -> condicion .)
    VARIABLE        reduce using rule 33 (asignable -> condicion .)
    FMT             reduce using rule 33 (asignable -> condicion .)
    VAR             reduce using rule 33 (asignable -> condicion .)
    LEN             reduce using rule 33 (asignable -> condicion .)
    APPEND          reduce using rule 33 (asignable -> condicion .)
    CAP             reduce using rule 33 (asignable -> condicion .)
    DELETE          reduce using rule 33 (asignable -> condicion .)
    INTEGER         reduce using rule 33 (asignable -> condicion .)
    STRING          reduce using rule 33 (asignable -> condicion .)
    FLOAT           reduce using rule 33 (asignable -> condicion .)
    $end            reduce using rule 33 (asignable -> condicion .)
    LOCKR           reduce using rule 33 (asignable -> condicion .)
    CASE            reduce using rule 33 (asignable -> condicion .)
    RETURN          reduce using rule 33 (asignable -> condicion .)
    SEMICOLON       reduce using rule 33 (asignable -> condicion .)


state 77

    (69) createmap -> MAP . BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR

    BRACEL          shift and go to state 142


state 78

    (138) valor -> factor .
    (124) expresionMatematica -> factor . operadorMatematico factor
    (130) operadorMatematico -> . PLUS
    (131) operadorMatematico -> . MINUS
    (132) operadorMatematico -> . TIMES
    (133) operadorMatematico -> . DIVIDE
    (134) operadorMatematico -> . MODULE

    EQUAL           reduce using rule 138 (valor -> factor .)
    UNEQUAL         reduce using rule 138 (valor -> factor .)
    GREATERTHAN     reduce using rule 138 (valor -> factor .)
    SMALLERTHAN     reduce using rule 138 (valor -> factor .)
    GREATEROREQUALTHAN reduce using rule 138 (valor -> factor .)
    SMALLEROREQUALTHAN reduce using rule 138 (valor -> factor .)
    AND             reduce using rule 138 (valor -> factor .)
    OR              reduce using rule 138 (valor -> factor .)
    NOT             reduce using rule 138 (valor -> factor .)
    FUNC            reduce using rule 138 (valor -> factor .)
    SWITCH          reduce using rule 138 (valor -> factor .)
    FOR             reduce using rule 138 (valor -> factor .)
    SELECT          reduce using rule 138 (valor -> factor .)
    VARIABLE        reduce using rule 138 (valor -> factor .)
    FMT             reduce using rule 138 (valor -> factor .)
    VAR             reduce using rule 138 (valor -> factor .)
    LEN             reduce using rule 138 (valor -> factor .)
    APPEND          reduce using rule 138 (valor -> factor .)
    CAP             reduce using rule 138 (valor -> factor .)
    DELETE          reduce using rule 138 (valor -> factor .)
    INTEGER         reduce using rule 138 (valor -> factor .)
    STRING          reduce using rule 138 (valor -> factor .)
    FLOAT           reduce using rule 138 (valor -> factor .)
    $end            reduce using rule 138 (valor -> factor .)
    LOCKR           reduce using rule 138 (valor -> factor .)
    CASE            reduce using rule 138 (valor -> factor .)
    RETURN          reduce using rule 138 (valor -> factor .)
    SEMICOLON       reduce using rule 138 (valor -> factor .)
    PLUS            shift and go to state 98
    MINUS           shift and go to state 99
    TIMES           shift and go to state 100
    DIVIDE          shift and go to state 101
    MODULE          shift and go to state 102

    operadorMatematico             shift and go to state 97

state 79

    (44) estructuraControl -> SELECT LOCKL . casesSelect LOCKR
    (45) casesSelect -> . caseSelect
    (46) casesSelect -> . caseSelect casesSelect
    (47) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    CASE            shift and go to state 145

    casesSelect                    shift and go to state 143
    caseSelect                     shift and go to state 144

state 80

    (125) expresionSuma -> INTEGER PLUS . INTEGER

    INTEGER         shift and go to state 146


state 81

    (126) expresionResta -> INTEGER MINUS . INTEGER

    INTEGER         shift and go to state 147


state 82

    (127) expresionMultiplicacion -> INTEGER TIMES . INTEGER

    INTEGER         shift and go to state 148


state 83

    (128) expresionDivision -> INTEGER DIVIDE . INTEGER

    INTEGER         shift and go to state 149


state 84

    (129) expresionModulo -> INTEGER MODULE . INTEGER

    INTEGER         shift and go to state 150


state 85

    (100) comparaciones -> INTEGER EQUAL . INTEGER

    INTEGER         shift and go to state 151


state 86

    (101) comparaciones -> INTEGER UNEQUAL . INTEGER

    INTEGER         shift and go to state 152


state 87

    (102) comparaciones -> INTEGER GREATERTHAN . INTEGER

    INTEGER         shift and go to state 153


state 88

    (103) comparaciones -> INTEGER SMALLERTHAN . INTEGER

    INTEGER         shift and go to state 154


state 89

    (104) comparaciones -> INTEGER GREATEROREQUALTHAN . INTEGER

    INTEGER         shift and go to state 155


state 90

    (105) comparaciones -> INTEGER SMALLEROREQUALTHAN . INTEGER

    INTEGER         shift and go to state 156


state 91

    (30) declaracion -> varAssign tipoDato .
    (29) asignacion -> varAssign tipoDato . ASSIGN asignable

    FUNC            reduce using rule 30 (declaracion -> varAssign tipoDato .)
    SWITCH          reduce using rule 30 (declaracion -> varAssign tipoDato .)
    FOR             reduce using rule 30 (declaracion -> varAssign tipoDato .)
    SELECT          reduce using rule 30 (declaracion -> varAssign tipoDato .)
    VARIABLE        reduce using rule 30 (declaracion -> varAssign tipoDato .)
    FMT             reduce using rule 30 (declaracion -> varAssign tipoDato .)
    VAR             reduce using rule 30 (declaracion -> varAssign tipoDato .)
    LEN             reduce using rule 30 (declaracion -> varAssign tipoDato .)
    APPEND          reduce using rule 30 (declaracion -> varAssign tipoDato .)
    CAP             reduce using rule 30 (declaracion -> varAssign tipoDato .)
    DELETE          reduce using rule 30 (declaracion -> varAssign tipoDato .)
    INTEGER         reduce using rule 30 (declaracion -> varAssign tipoDato .)
    STRING          reduce using rule 30 (declaracion -> varAssign tipoDato .)
    FLOAT           reduce using rule 30 (declaracion -> varAssign tipoDato .)
    $end            reduce using rule 30 (declaracion -> varAssign tipoDato .)
    LOCKR           reduce using rule 30 (declaracion -> varAssign tipoDato .)
    CASE            reduce using rule 30 (declaracion -> varAssign tipoDato .)
    RETURN          reduce using rule 30 (declaracion -> varAssign tipoDato .)
    ASSIGN          shift and go to state 157


state 92

    (27) asignacion -> varAssign ASSIGN . asignable
    (31) asignable -> . valor
    (32) asignable -> . expresionMatematica
    (33) asignable -> . condicion
    (137) valor -> . STRING
    (138) valor -> . factor
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 53

    asignable                      shift and go to state 158
    valor                          shift and go to state 74
    expresionMatematica            shift and go to state 75
    condicion                      shift and go to state 76
    factor                         shift and go to state 78
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    comparaciones                  shift and go to state 43
    numero                         shift and go to state 52

state 93

    (112) tipoDato -> INTTYPE .

    ASSIGN          reduce using rule 112 (tipoDato -> INTTYPE .)
    FUNC            reduce using rule 112 (tipoDato -> INTTYPE .)
    SWITCH          reduce using rule 112 (tipoDato -> INTTYPE .)
    FOR             reduce using rule 112 (tipoDato -> INTTYPE .)
    SELECT          reduce using rule 112 (tipoDato -> INTTYPE .)
    VARIABLE        reduce using rule 112 (tipoDato -> INTTYPE .)
    FMT             reduce using rule 112 (tipoDato -> INTTYPE .)
    VAR             reduce using rule 112 (tipoDato -> INTTYPE .)
    LEN             reduce using rule 112 (tipoDato -> INTTYPE .)
    APPEND          reduce using rule 112 (tipoDato -> INTTYPE .)
    CAP             reduce using rule 112 (tipoDato -> INTTYPE .)
    DELETE          reduce using rule 112 (tipoDato -> INTTYPE .)
    INTEGER         reduce using rule 112 (tipoDato -> INTTYPE .)
    STRING          reduce using rule 112 (tipoDato -> INTTYPE .)
    FLOAT           reduce using rule 112 (tipoDato -> INTTYPE .)
    $end            reduce using rule 112 (tipoDato -> INTTYPE .)
    LOCKR           reduce using rule 112 (tipoDato -> INTTYPE .)
    CASE            reduce using rule 112 (tipoDato -> INTTYPE .)
    RETURN          reduce using rule 112 (tipoDato -> INTTYPE .)
    LOCKL           reduce using rule 112 (tipoDato -> INTTYPE .)
    BRACER          reduce using rule 112 (tipoDato -> INTTYPE .)
    BRACKETR        reduce using rule 112 (tipoDato -> INTTYPE .)


state 94

    (113) tipoDato -> FLOATTYPE .

    ASSIGN          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    FUNC            reduce using rule 113 (tipoDato -> FLOATTYPE .)
    SWITCH          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    FOR             reduce using rule 113 (tipoDato -> FLOATTYPE .)
    SELECT          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    VARIABLE        reduce using rule 113 (tipoDato -> FLOATTYPE .)
    FMT             reduce using rule 113 (tipoDato -> FLOATTYPE .)
    VAR             reduce using rule 113 (tipoDato -> FLOATTYPE .)
    LEN             reduce using rule 113 (tipoDato -> FLOATTYPE .)
    APPEND          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    CAP             reduce using rule 113 (tipoDato -> FLOATTYPE .)
    DELETE          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    INTEGER         reduce using rule 113 (tipoDato -> FLOATTYPE .)
    STRING          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    FLOAT           reduce using rule 113 (tipoDato -> FLOATTYPE .)
    $end            reduce using rule 113 (tipoDato -> FLOATTYPE .)
    LOCKR           reduce using rule 113 (tipoDato -> FLOATTYPE .)
    CASE            reduce using rule 113 (tipoDato -> FLOATTYPE .)
    RETURN          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    LOCKL           reduce using rule 113 (tipoDato -> FLOATTYPE .)
    BRACER          reduce using rule 113 (tipoDato -> FLOATTYPE .)
    BRACKETR        reduce using rule 113 (tipoDato -> FLOATTYPE .)


state 95

    (114) tipoDato -> BOOLEANTYPE .

    ASSIGN          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    FUNC            reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    SWITCH          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    FOR             reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    SELECT          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    VARIABLE        reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    FMT             reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    VAR             reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    LEN             reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    APPEND          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    CAP             reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    DELETE          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    INTEGER         reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    STRING          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    FLOAT           reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    $end            reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    LOCKR           reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    CASE            reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    RETURN          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    LOCKL           reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    BRACER          reduce using rule 114 (tipoDato -> BOOLEANTYPE .)
    BRACKETR        reduce using rule 114 (tipoDato -> BOOLEANTYPE .)


state 96

    (115) tipoDato -> STRINGTYPE .

    ASSIGN          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    FUNC            reduce using rule 115 (tipoDato -> STRINGTYPE .)
    SWITCH          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    FOR             reduce using rule 115 (tipoDato -> STRINGTYPE .)
    SELECT          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    VARIABLE        reduce using rule 115 (tipoDato -> STRINGTYPE .)
    FMT             reduce using rule 115 (tipoDato -> STRINGTYPE .)
    VAR             reduce using rule 115 (tipoDato -> STRINGTYPE .)
    LEN             reduce using rule 115 (tipoDato -> STRINGTYPE .)
    APPEND          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    CAP             reduce using rule 115 (tipoDato -> STRINGTYPE .)
    DELETE          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    INTEGER         reduce using rule 115 (tipoDato -> STRINGTYPE .)
    STRING          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    FLOAT           reduce using rule 115 (tipoDato -> STRINGTYPE .)
    $end            reduce using rule 115 (tipoDato -> STRINGTYPE .)
    LOCKR           reduce using rule 115 (tipoDato -> STRINGTYPE .)
    CASE            reduce using rule 115 (tipoDato -> STRINGTYPE .)
    RETURN          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    LOCKL           reduce using rule 115 (tipoDato -> STRINGTYPE .)
    BRACER          reduce using rule 115 (tipoDato -> STRINGTYPE .)
    BRACKETR        reduce using rule 115 (tipoDato -> STRINGTYPE .)


state 97

    (124) expresionMatematica -> factor operadorMatematico . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    factor                         shift and go to state 159
    numero                         shift and go to state 52

state 98

    (130) operadorMatematico -> PLUS .

    VARIABLE        reduce using rule 130 (operadorMatematico -> PLUS .)
    FLOAT           reduce using rule 130 (operadorMatematico -> PLUS .)
    INTEGER         reduce using rule 130 (operadorMatematico -> PLUS .)


state 99

    (131) operadorMatematico -> MINUS .

    VARIABLE        reduce using rule 131 (operadorMatematico -> MINUS .)
    FLOAT           reduce using rule 131 (operadorMatematico -> MINUS .)
    INTEGER         reduce using rule 131 (operadorMatematico -> MINUS .)


state 100

    (132) operadorMatematico -> TIMES .

    VARIABLE        reduce using rule 132 (operadorMatematico -> TIMES .)
    FLOAT           reduce using rule 132 (operadorMatematico -> TIMES .)
    INTEGER         reduce using rule 132 (operadorMatematico -> TIMES .)


state 101

    (133) operadorMatematico -> DIVIDE .

    VARIABLE        reduce using rule 133 (operadorMatematico -> DIVIDE .)
    FLOAT           reduce using rule 133 (operadorMatematico -> DIVIDE .)
    INTEGER         reduce using rule 133 (operadorMatematico -> DIVIDE .)


state 102

    (134) operadorMatematico -> MODULE .

    VARIABLE        reduce using rule 134 (operadorMatematico -> MODULE .)
    FLOAT           reduce using rule 134 (operadorMatematico -> MODULE .)
    INTEGER         reduce using rule 134 (operadorMatematico -> MODULE .)


state 103

    (97) condicion -> valor operadorComparacion . valor
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valor                          shift and go to state 161
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 104

    (98) condicion -> valor operadorLogico . valor
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valor                          shift and go to state 162
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 105

    (106) operadorComparacion -> EQUAL .

    STRING          reduce using rule 106 (operadorComparacion -> EQUAL .)
    VARIABLE        reduce using rule 106 (operadorComparacion -> EQUAL .)
    FLOAT           reduce using rule 106 (operadorComparacion -> EQUAL .)
    INTEGER         reduce using rule 106 (operadorComparacion -> EQUAL .)


state 106

    (107) operadorComparacion -> UNEQUAL .

    STRING          reduce using rule 107 (operadorComparacion -> UNEQUAL .)
    VARIABLE        reduce using rule 107 (operadorComparacion -> UNEQUAL .)
    FLOAT           reduce using rule 107 (operadorComparacion -> UNEQUAL .)
    INTEGER         reduce using rule 107 (operadorComparacion -> UNEQUAL .)


state 107

    (108) operadorComparacion -> GREATERTHAN .

    STRING          reduce using rule 108 (operadorComparacion -> GREATERTHAN .)
    VARIABLE        reduce using rule 108 (operadorComparacion -> GREATERTHAN .)
    FLOAT           reduce using rule 108 (operadorComparacion -> GREATERTHAN .)
    INTEGER         reduce using rule 108 (operadorComparacion -> GREATERTHAN .)


state 108

    (109) operadorComparacion -> SMALLERTHAN .

    STRING          reduce using rule 109 (operadorComparacion -> SMALLERTHAN .)
    VARIABLE        reduce using rule 109 (operadorComparacion -> SMALLERTHAN .)
    FLOAT           reduce using rule 109 (operadorComparacion -> SMALLERTHAN .)
    INTEGER         reduce using rule 109 (operadorComparacion -> SMALLERTHAN .)


state 109

    (110) operadorComparacion -> GREATEROREQUALTHAN .

    STRING          reduce using rule 110 (operadorComparacion -> GREATEROREQUALTHAN .)
    VARIABLE        reduce using rule 110 (operadorComparacion -> GREATEROREQUALTHAN .)
    FLOAT           reduce using rule 110 (operadorComparacion -> GREATEROREQUALTHAN .)
    INTEGER         reduce using rule 110 (operadorComparacion -> GREATEROREQUALTHAN .)


state 110

    (111) operadorComparacion -> SMALLEROREQUALTHAN .

    STRING          reduce using rule 111 (operadorComparacion -> SMALLEROREQUALTHAN .)
    VARIABLE        reduce using rule 111 (operadorComparacion -> SMALLEROREQUALTHAN .)
    FLOAT           reduce using rule 111 (operadorComparacion -> SMALLEROREQUALTHAN .)
    INTEGER         reduce using rule 111 (operadorComparacion -> SMALLEROREQUALTHAN .)


state 111

    (116) operadorLogico -> AND .

    STRING          reduce using rule 116 (operadorLogico -> AND .)
    VARIABLE        reduce using rule 116 (operadorLogico -> AND .)
    FLOAT           reduce using rule 116 (operadorLogico -> AND .)
    INTEGER         reduce using rule 116 (operadorLogico -> AND .)


state 112

    (117) operadorLogico -> OR .

    STRING          reduce using rule 117 (operadorLogico -> OR .)
    VARIABLE        reduce using rule 117 (operadorLogico -> OR .)
    FLOAT           reduce using rule 117 (operadorLogico -> OR .)
    INTEGER         reduce using rule 117 (operadorLogico -> OR .)


state 113

    (118) operadorLogico -> NOT .

    STRING          reduce using rule 118 (operadorLogico -> NOT .)
    VARIABLE        reduce using rule 118 (operadorLogico -> NOT .)
    FLOAT           reduce using rule 118 (operadorLogico -> NOT .)
    INTEGER         reduce using rule 118 (operadorLogico -> NOT .)


state 114

    (75) impresionSencilla -> tipoImpresion BRACKETL . valores BRACKETR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 163
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 115

    (78) impresionBufio -> FMT DOT . FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> FMT DOT . PRINTF BRACKETL STRING COMA valores BRACKETR
    (81) lecturaScanf -> FMT DOT . SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> FMT DOT . SSCANF BRACKETL opcionesLectura BRACKETR
    (76) tipoImpresion -> FMT DOT . PRINT
    (77) tipoImpresion -> FMT DOT . PRINTLN

    FPRINT          shift and go to state 165
    PRINTF          shift and go to state 166
    SCANF           shift and go to state 167
    SSCANF          shift and go to state 168
    PRINT           shift and go to state 169
    PRINTLN         shift and go to state 170


state 116

    (93) varAssign -> VAR VARIABLE .

    ASSIGN          reduce using rule 93 (varAssign -> VAR VARIABLE .)
    INTTYPE         reduce using rule 93 (varAssign -> VAR VARIABLE .)
    FLOATTYPE       reduce using rule 93 (varAssign -> VAR VARIABLE .)
    BOOLEANTYPE     reduce using rule 93 (varAssign -> VAR VARIABLE .)
    STRINGTYPE      reduce using rule 93 (varAssign -> VAR VARIABLE .)


state 117

    (57) lenSlice -> LEN BRACKETL . VARIABLE BRACKETR

    VARIABLE        shift and go to state 171


state 118

    (66) lenMap -> LEN VARIABLE .

    FUNC            reduce using rule 66 (lenMap -> LEN VARIABLE .)
    SWITCH          reduce using rule 66 (lenMap -> LEN VARIABLE .)
    FOR             reduce using rule 66 (lenMap -> LEN VARIABLE .)
    SELECT          reduce using rule 66 (lenMap -> LEN VARIABLE .)
    VARIABLE        reduce using rule 66 (lenMap -> LEN VARIABLE .)
    FMT             reduce using rule 66 (lenMap -> LEN VARIABLE .)
    VAR             reduce using rule 66 (lenMap -> LEN VARIABLE .)
    LEN             reduce using rule 66 (lenMap -> LEN VARIABLE .)
    APPEND          reduce using rule 66 (lenMap -> LEN VARIABLE .)
    CAP             reduce using rule 66 (lenMap -> LEN VARIABLE .)
    DELETE          reduce using rule 66 (lenMap -> LEN VARIABLE .)
    INTEGER         reduce using rule 66 (lenMap -> LEN VARIABLE .)
    STRING          reduce using rule 66 (lenMap -> LEN VARIABLE .)
    FLOAT           reduce using rule 66 (lenMap -> LEN VARIABLE .)
    $end            reduce using rule 66 (lenMap -> LEN VARIABLE .)
    LOCKR           reduce using rule 66 (lenMap -> LEN VARIABLE .)
    CASE            reduce using rule 66 (lenMap -> LEN VARIABLE .)
    RETURN          reduce using rule 66 (lenMap -> LEN VARIABLE .)


state 119

    (58) appendSlice -> APPEND BRACKETL . VARIABLE valores BRACKETR

    VARIABLE        shift and go to state 172


state 120

    (60) capSlice -> CAP BRACKETL . VARIABLE BRACKETR

    VARIABLE        shift and go to state 173


state 121

    (67) deleteMap -> DELETE BRACKETL . VARIABLE COMA valor BRACKETR

    VARIABLE        shift and go to state 174


state 122

    (34) funcion -> FUNC VARIABLE BRACKETL . valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 175
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 123

    (139) factor -> VARIABLE .

    PLUS            reduce using rule 139 (factor -> VARIABLE .)
    MINUS           reduce using rule 139 (factor -> VARIABLE .)
    TIMES           reduce using rule 139 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 139 (factor -> VARIABLE .)
    MODULE          reduce using rule 139 (factor -> VARIABLE .)
    EQUAL           reduce using rule 139 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 139 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    AND             reduce using rule 139 (factor -> VARIABLE .)
    OR              reduce using rule 139 (factor -> VARIABLE .)
    NOT             reduce using rule 139 (factor -> VARIABLE .)
    FUNC            reduce using rule 139 (factor -> VARIABLE .)
    SWITCH          reduce using rule 139 (factor -> VARIABLE .)
    FOR             reduce using rule 139 (factor -> VARIABLE .)
    SELECT          reduce using rule 139 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 139 (factor -> VARIABLE .)
    FMT             reduce using rule 139 (factor -> VARIABLE .)
    VAR             reduce using rule 139 (factor -> VARIABLE .)
    LEN             reduce using rule 139 (factor -> VARIABLE .)
    APPEND          reduce using rule 139 (factor -> VARIABLE .)
    CAP             reduce using rule 139 (factor -> VARIABLE .)
    DELETE          reduce using rule 139 (factor -> VARIABLE .)
    INTEGER         reduce using rule 139 (factor -> VARIABLE .)
    STRING          reduce using rule 139 (factor -> VARIABLE .)
    FLOAT           reduce using rule 139 (factor -> VARIABLE .)
    $end            reduce using rule 139 (factor -> VARIABLE .)
    LOCKR           reduce using rule 139 (factor -> VARIABLE .)
    CASE            reduce using rule 139 (factor -> VARIABLE .)
    RETURN          reduce using rule 139 (factor -> VARIABLE .)
    SEMICOLON       reduce using rule 139 (factor -> VARIABLE .)
    LOCKL           reduce using rule 139 (factor -> VARIABLE .)
    COLON           reduce using rule 139 (factor -> VARIABLE .)
    COMA            reduce using rule 139 (factor -> VARIABLE .)
    BRACKETR        reduce using rule 139 (factor -> VARIABLE .)


state 124

    (28) asignacion -> VARIABLE ASSIGN asignable .

    FUNC            reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    SWITCH          reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    FOR             reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    SELECT          reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    VARIABLE        reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    FMT             reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    VAR             reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    LEN             reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    APPEND          reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    CAP             reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    DELETE          reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    INTEGER         reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    STRING          reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    FLOAT           reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    $end            reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    LOCKR           reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    CASE            reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    SEMICOLON       reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)
    RETURN          reduce using rule 28 (asignacion -> VARIABLE ASSIGN asignable .)


state 125

    (59) appendSlice -> VARIABLE ASSIGN APPEND . BRACKETL VARIABLE valores BRACKETR

    BRACKETL        shift and go to state 176


state 126

    (62) listaPushBack -> VARIABLE DOT PUSHBACK . BRACKETL INTEGER BRACKETR

    BRACKETL        shift and go to state 177


state 127

    (63) listaFront -> VARIABLE DOT FRONT . BRACKETL BRACKETR

    BRACKETL        shift and go to state 178


state 128

    (39) estructuraControl -> SWITCH VARIABLE LOCKL . cases LOCKR
    (48) cases -> . case
    (49) cases -> . case cases
    (50) case -> . CASE condicionCase COLON main

    CASE            shift and go to state 181

    cases                          shift and go to state 179
    case                           shift and go to state 180

state 129

    (40) estructuraControl -> FOR condicion LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    condicion                      shift and go to state 12
    main                           shift and go to state 182
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 130

    (41) estructuraControl -> FOR asignacion SEMICOLON . condicion SEMICOLON iterador LOCKL main LOCKR
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    INTEGER         shift and go to state 66
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53

    condicion                      shift and go to state 183
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 131

    (42) estructuraControl -> FOR VARIABLE COMA . varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (92) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 184

    varShortAssign                 shift and go to state 185

state 132

    (28) asignacion -> VARIABLE ASSIGN . asignable
    (31) asignable -> . valor
    (32) asignable -> . expresionMatematica
    (33) asignable -> . condicion
    (137) valor -> . STRING
    (138) valor -> . factor
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 53

    asignable                      shift and go to state 124
    valor                          shift and go to state 74
    expresionMatematica            shift and go to state 75
    condicion                      shift and go to state 76
    factor                         shift and go to state 78
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    comparaciones                  shift and go to state 43
    numero                         shift and go to state 52

state 133

    (43) estructuraControl -> FOR varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 186


state 134

    (29) asignacion -> varAssign tipoDato . ASSIGN asignable

    ASSIGN          shift and go to state 157


state 135

    (51) estructuraDatos -> varShortAssign BRACEL INTEGER . BRACER tipoDato LOCKL valores LOCKR

    BRACER          shift and go to state 187


state 136

    (52) estructuraDatos -> varShortAssign BRACEL BRACER . tipoDato LOCKL valores LOCKR
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 188

state 137

    (53) estructuraDatos -> varShortAssign VARIABLE BRACEL . COLON BRACER
    (54) estructuraDatos -> varShortAssign VARIABLE BRACEL . INTEGER COLON BRACER
    (55) estructuraDatos -> varShortAssign VARIABLE BRACEL . COLON INTEGER BRACER
    (56) estructuraDatos -> varShortAssign VARIABLE BRACEL . INTEGER COLON INTEGER BRACER

    COLON           shift and go to state 189
    INTEGER         shift and go to state 190


state 138

    (80) lecturaReader -> varShortAssign VARIABLE DOT . READSTRING BRACKETL STRING BRACKETR

    READSTRING      shift and go to state 191


state 139

    (61) estructuraDatos -> varShortAssign LIST DOT . NEW BRACKETL BRACKETR

    NEW             shift and go to state 192


state 140

    (90) declaracion -> varShortAssign BUFIO DOT . NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> varShortAssign BUFIO DOT . NEWWRITER BRACKETL OS DOT STDOUT BRACKETR

    NEWREADER       shift and go to state 193
    NEWWRITER       shift and go to state 194


state 141

    (70) initmap -> varShortAssign MAKE BRACKETL . createemptymap BRACKETR
    (71) createemptymap -> . MAP BRACEL tipoDato BRACER tipoDato

    MAP             shift and go to state 196

    createemptymap                 shift and go to state 195

state 142

    (69) createmap -> MAP BRACEL . tipoDato BRACER tipoDato LOCKL mapvalues LOCKR
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 197

state 143

    (44) estructuraControl -> SELECT LOCKL casesSelect . LOCKR

    LOCKR           shift and go to state 198


state 144

    (45) casesSelect -> caseSelect .
    (46) casesSelect -> caseSelect . casesSelect
    (45) casesSelect -> . caseSelect
    (46) casesSelect -> . caseSelect casesSelect
    (47) caseSelect -> . CASE varShortAssign SMALLERTHAN MINUS COLON main

    LOCKR           reduce using rule 45 (casesSelect -> caseSelect .)
    CASE            shift and go to state 145

    caseSelect                     shift and go to state 144
    casesSelect                    shift and go to state 199

state 145

    (47) caseSelect -> CASE . varShortAssign SMALLERTHAN MINUS COLON main
    (92) varShortAssign -> . VARIABLE SHORTASSIGN

    VARIABLE        shift and go to state 184

    varShortAssign                 shift and go to state 200

state 146

    (125) expresionSuma -> INTEGER PLUS INTEGER .

    FUNC            reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    SWITCH          reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    FOR             reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    SELECT          reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    VARIABLE        reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    FMT             reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    VAR             reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    LEN             reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    APPEND          reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    CAP             reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    DELETE          reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    INTEGER         reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    STRING          reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    FLOAT           reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    $end            reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    LOCKR           reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    CASE            reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    RETURN          reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)
    SEMICOLON       reduce using rule 125 (expresionSuma -> INTEGER PLUS INTEGER .)


state 147

    (126) expresionResta -> INTEGER MINUS INTEGER .

    FUNC            reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    SWITCH          reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    FOR             reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    SELECT          reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    VARIABLE        reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    FMT             reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    VAR             reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    LEN             reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    APPEND          reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    CAP             reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    DELETE          reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    INTEGER         reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    STRING          reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    FLOAT           reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    $end            reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    LOCKR           reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    CASE            reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    RETURN          reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)
    SEMICOLON       reduce using rule 126 (expresionResta -> INTEGER MINUS INTEGER .)


state 148

    (127) expresionMultiplicacion -> INTEGER TIMES INTEGER .

    FUNC            reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SWITCH          reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FOR             reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SELECT          reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    VARIABLE        reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FMT             reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    VAR             reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    LEN             reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    APPEND          reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    CAP             reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    DELETE          reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    INTEGER         reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    STRING          reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    FLOAT           reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    $end            reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    LOCKR           reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    CASE            reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    RETURN          reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)
    SEMICOLON       reduce using rule 127 (expresionMultiplicacion -> INTEGER TIMES INTEGER .)


state 149

    (128) expresionDivision -> INTEGER DIVIDE INTEGER .

    FUNC            reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SWITCH          reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FOR             reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SELECT          reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    VARIABLE        reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FMT             reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    VAR             reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    LEN             reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    APPEND          reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    CAP             reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    DELETE          reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    INTEGER         reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    STRING          reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    FLOAT           reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    $end            reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    LOCKR           reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    CASE            reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    RETURN          reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)
    SEMICOLON       reduce using rule 128 (expresionDivision -> INTEGER DIVIDE INTEGER .)


state 150

    (129) expresionModulo -> INTEGER MODULE INTEGER .

    FUNC            reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    SWITCH          reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    FOR             reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    SELECT          reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    VARIABLE        reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    FMT             reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    VAR             reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    LEN             reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    APPEND          reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    CAP             reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    DELETE          reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    INTEGER         reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    STRING          reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    FLOAT           reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    $end            reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    LOCKR           reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    CASE            reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    RETURN          reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)
    SEMICOLON       reduce using rule 129 (expresionModulo -> INTEGER MODULE INTEGER .)


state 151

    (100) comparaciones -> INTEGER EQUAL INTEGER .

    FUNC            reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    SWITCH          reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    FOR             reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    SELECT          reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    VARIABLE        reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    FMT             reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    VAR             reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    LEN             reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    APPEND          reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    CAP             reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    DELETE          reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    INTEGER         reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    STRING          reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    FLOAT           reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    $end            reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    LOCKR           reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    CASE            reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    LOCKL           reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    RETURN          reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    SEMICOLON       reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)
    COLON           reduce using rule 100 (comparaciones -> INTEGER EQUAL INTEGER .)


state 152

    (101) comparaciones -> INTEGER UNEQUAL INTEGER .

    FUNC            reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    SWITCH          reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    FOR             reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    SELECT          reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    VARIABLE        reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    FMT             reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    VAR             reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    LEN             reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    APPEND          reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    CAP             reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    DELETE          reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    INTEGER         reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    STRING          reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    FLOAT           reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    $end            reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    LOCKR           reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    CASE            reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    LOCKL           reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    RETURN          reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    SEMICOLON       reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)
    COLON           reduce using rule 101 (comparaciones -> INTEGER UNEQUAL INTEGER .)


state 153

    (102) comparaciones -> INTEGER GREATERTHAN INTEGER .

    FUNC            reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    SWITCH          reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    FOR             reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    SELECT          reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    VARIABLE        reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    FMT             reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    VAR             reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    LEN             reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    APPEND          reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    CAP             reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    DELETE          reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    INTEGER         reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    STRING          reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    FLOAT           reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    $end            reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    LOCKR           reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    CASE            reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    LOCKL           reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    RETURN          reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    SEMICOLON       reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)
    COLON           reduce using rule 102 (comparaciones -> INTEGER GREATERTHAN INTEGER .)


state 154

    (103) comparaciones -> INTEGER SMALLERTHAN INTEGER .

    FUNC            reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    SWITCH          reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    FOR             reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    SELECT          reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    VARIABLE        reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    FMT             reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    VAR             reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    LEN             reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    APPEND          reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    CAP             reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    DELETE          reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    INTEGER         reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    STRING          reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    FLOAT           reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    $end            reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    LOCKR           reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    CASE            reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    LOCKL           reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    RETURN          reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    SEMICOLON       reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)
    COLON           reduce using rule 103 (comparaciones -> INTEGER SMALLERTHAN INTEGER .)


state 155

    (104) comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .

    FUNC            reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    SWITCH          reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    FOR             reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    SELECT          reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    VARIABLE        reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    FMT             reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    VAR             reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    LEN             reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    APPEND          reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    CAP             reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    DELETE          reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    INTEGER         reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    STRING          reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    FLOAT           reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    $end            reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    LOCKR           reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    CASE            reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    LOCKL           reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    RETURN          reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    SEMICOLON       reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)
    COLON           reduce using rule 104 (comparaciones -> INTEGER GREATEROREQUALTHAN INTEGER .)


state 156

    (105) comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .

    FUNC            reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    SWITCH          reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    FOR             reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    SELECT          reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    VARIABLE        reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    FMT             reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    VAR             reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    LEN             reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    APPEND          reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    CAP             reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    DELETE          reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    INTEGER         reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    STRING          reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    FLOAT           reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    $end            reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    LOCKR           reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    CASE            reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    LOCKL           reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    RETURN          reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    SEMICOLON       reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)
    COLON           reduce using rule 105 (comparaciones -> INTEGER SMALLEROREQUALTHAN INTEGER .)


state 157

    (29) asignacion -> varAssign tipoDato ASSIGN . asignable
    (31) asignable -> . valor
    (32) asignable -> . expresionMatematica
    (33) asignable -> . condicion
    (137) valor -> . STRING
    (138) valor -> . factor
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    INTEGER         shift and go to state 19
    FLOAT           shift and go to state 53

    asignable                      shift and go to state 201
    valor                          shift and go to state 74
    expresionMatematica            shift and go to state 75
    condicion                      shift and go to state 76
    factor                         shift and go to state 78
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    comparaciones                  shift and go to state 43
    numero                         shift and go to state 52

state 158

    (27) asignacion -> varAssign ASSIGN asignable .

    FUNC            reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    SWITCH          reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    FOR             reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    SELECT          reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    VARIABLE        reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    FMT             reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    VAR             reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    LEN             reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    APPEND          reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    CAP             reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    DELETE          reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    INTEGER         reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    STRING          reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    FLOAT           reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    $end            reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    LOCKR           reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    CASE            reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    SEMICOLON       reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)
    RETURN          reduce using rule 27 (asignacion -> varAssign ASSIGN asignable .)


state 159

    (124) expresionMatematica -> factor operadorMatematico factor .

    FUNC            reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    SWITCH          reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    FOR             reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    SELECT          reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    VARIABLE        reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    FMT             reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    VAR             reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    LEN             reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    APPEND          reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    CAP             reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    DELETE          reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    INTEGER         reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    STRING          reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    FLOAT           reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    $end            reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    LOCKR           reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    CASE            reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    RETURN          reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)
    SEMICOLON       reduce using rule 124 (expresionMatematica -> factor operadorMatematico factor .)


state 160

    (142) numero -> INTEGER .

    FUNC            reduce using rule 142 (numero -> INTEGER .)
    SWITCH          reduce using rule 142 (numero -> INTEGER .)
    FOR             reduce using rule 142 (numero -> INTEGER .)
    SELECT          reduce using rule 142 (numero -> INTEGER .)
    VARIABLE        reduce using rule 142 (numero -> INTEGER .)
    FMT             reduce using rule 142 (numero -> INTEGER .)
    VAR             reduce using rule 142 (numero -> INTEGER .)
    LEN             reduce using rule 142 (numero -> INTEGER .)
    APPEND          reduce using rule 142 (numero -> INTEGER .)
    CAP             reduce using rule 142 (numero -> INTEGER .)
    DELETE          reduce using rule 142 (numero -> INTEGER .)
    INTEGER         reduce using rule 142 (numero -> INTEGER .)
    STRING          reduce using rule 142 (numero -> INTEGER .)
    FLOAT           reduce using rule 142 (numero -> INTEGER .)
    $end            reduce using rule 142 (numero -> INTEGER .)
    LOCKR           reduce using rule 142 (numero -> INTEGER .)
    CASE            reduce using rule 142 (numero -> INTEGER .)
    RETURN          reduce using rule 142 (numero -> INTEGER .)
    SEMICOLON       reduce using rule 142 (numero -> INTEGER .)
    LOCKL           reduce using rule 142 (numero -> INTEGER .)
    COLON           reduce using rule 142 (numero -> INTEGER .)
    COMA            reduce using rule 142 (numero -> INTEGER .)
    BRACKETR        reduce using rule 142 (numero -> INTEGER .)


state 161

    (97) condicion -> valor operadorComparacion valor .

    FUNC            reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    SWITCH          reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    FOR             reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    SELECT          reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    VARIABLE        reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    FMT             reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    VAR             reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    LEN             reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    APPEND          reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    CAP             reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    DELETE          reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    INTEGER         reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    STRING          reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    FLOAT           reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    $end            reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    LOCKR           reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    CASE            reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    LOCKL           reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    RETURN          reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    SEMICOLON       reduce using rule 97 (condicion -> valor operadorComparacion valor .)
    COLON           reduce using rule 97 (condicion -> valor operadorComparacion valor .)


state 162

    (98) condicion -> valor operadorLogico valor .

    FUNC            reduce using rule 98 (condicion -> valor operadorLogico valor .)
    SWITCH          reduce using rule 98 (condicion -> valor operadorLogico valor .)
    FOR             reduce using rule 98 (condicion -> valor operadorLogico valor .)
    SELECT          reduce using rule 98 (condicion -> valor operadorLogico valor .)
    VARIABLE        reduce using rule 98 (condicion -> valor operadorLogico valor .)
    FMT             reduce using rule 98 (condicion -> valor operadorLogico valor .)
    VAR             reduce using rule 98 (condicion -> valor operadorLogico valor .)
    LEN             reduce using rule 98 (condicion -> valor operadorLogico valor .)
    APPEND          reduce using rule 98 (condicion -> valor operadorLogico valor .)
    CAP             reduce using rule 98 (condicion -> valor operadorLogico valor .)
    DELETE          reduce using rule 98 (condicion -> valor operadorLogico valor .)
    INTEGER         reduce using rule 98 (condicion -> valor operadorLogico valor .)
    STRING          reduce using rule 98 (condicion -> valor operadorLogico valor .)
    FLOAT           reduce using rule 98 (condicion -> valor operadorLogico valor .)
    $end            reduce using rule 98 (condicion -> valor operadorLogico valor .)
    LOCKR           reduce using rule 98 (condicion -> valor operadorLogico valor .)
    CASE            reduce using rule 98 (condicion -> valor operadorLogico valor .)
    LOCKL           reduce using rule 98 (condicion -> valor operadorLogico valor .)
    RETURN          reduce using rule 98 (condicion -> valor operadorLogico valor .)
    SEMICOLON       reduce using rule 98 (condicion -> valor operadorLogico valor .)
    COLON           reduce using rule 98 (condicion -> valor operadorLogico valor .)


state 163

    (75) impresionSencilla -> tipoImpresion BRACKETL valores . BRACKETR

    BRACKETR        shift and go to state 202


state 164

    (135) valores -> valor .
    (136) valores -> valor . COMA valores

    BRACKETR        reduce using rule 135 (valores -> valor .)
    LOCKR           reduce using rule 135 (valores -> valor .)
    COMA            shift and go to state 203


state 165

    (78) impresionBufio -> FMT DOT FPRINT . BRACKETL VARIABLE COMA STRING BRACKETR

    BRACKETL        shift and go to state 204


state 166

    (79) impresionFormato -> FMT DOT PRINTF . BRACKETL STRING COMA valores BRACKETR

    BRACKETL        shift and go to state 205


state 167

    (81) lecturaScanf -> FMT DOT SCANF . BRACKETL STRING opcionLectura BRACKETR

    BRACKETL        shift and go to state 206


state 168

    (85) lecturaSscanf -> FMT DOT SSCANF . BRACKETL opcionesLectura BRACKETR

    BRACKETL        shift and go to state 207


state 169

    (76) tipoImpresion -> FMT DOT PRINT .

    BRACKETL        reduce using rule 76 (tipoImpresion -> FMT DOT PRINT .)


state 170

    (77) tipoImpresion -> FMT DOT PRINTLN .

    BRACKETL        reduce using rule 77 (tipoImpresion -> FMT DOT PRINTLN .)


state 171

    (57) lenSlice -> LEN BRACKETL VARIABLE . BRACKETR

    BRACKETR        shift and go to state 208


state 172

    (58) appendSlice -> APPEND BRACKETL VARIABLE . valores BRACKETR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 209
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 173

    (60) capSlice -> CAP BRACKETL VARIABLE . BRACKETR

    BRACKETR        shift and go to state 210


state 174

    (67) deleteMap -> DELETE BRACKETL VARIABLE . COMA valor BRACKETR

    COMA            shift and go to state 211


state 175

    (34) funcion -> FUNC VARIABLE BRACKETL valores . BRACKETR tipoDato LOCKL cuerpos LOCKR

    BRACKETR        shift and go to state 212


state 176

    (59) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL . VARIABLE valores BRACKETR

    VARIABLE        shift and go to state 213


state 177

    (62) listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL . INTEGER BRACKETR

    INTEGER         shift and go to state 214


state 178

    (63) listaFront -> VARIABLE DOT FRONT BRACKETL . BRACKETR

    BRACKETR        shift and go to state 215


state 179

    (39) estructuraControl -> SWITCH VARIABLE LOCKL cases . LOCKR

    LOCKR           shift and go to state 216


state 180

    (48) cases -> case .
    (49) cases -> case . cases
    (48) cases -> . case
    (49) cases -> . case cases
    (50) case -> . CASE condicionCase COLON main

    LOCKR           reduce using rule 48 (cases -> case .)
    CASE            shift and go to state 181

    case                           shift and go to state 180
    cases                          shift and go to state 217

state 181

    (50) case -> CASE . condicionCase COLON main
    (94) condicionCase -> . INTEGER
    (95) condicionCase -> . VARIABLE
    (96) condicionCase -> . condicion
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    INTEGER         shift and go to state 219
    VARIABLE        shift and go to state 220
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    condicionCase                  shift and go to state 218
    condicion                      shift and go to state 221
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 182

    (40) estructuraControl -> FOR condicion LOCKL main . LOCKR

    LOCKR           shift and go to state 222


state 183

    (41) estructuraControl -> FOR asignacion SEMICOLON condicion . SEMICOLON iterador LOCKL main LOCKR

    SEMICOLON       shift and go to state 223


state 184

    (92) varShortAssign -> VARIABLE . SHORTASSIGN

    SHORTASSIGN     shift and go to state 57


state 185

    (42) estructuraControl -> FOR VARIABLE COMA varShortAssign . RANGE VARIABLE LOCKL main LOCKR

    RANGE           shift and go to state 224


state 186

    (43) estructuraControl -> FOR varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 225


state 187

    (51) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER . tipoDato LOCKL valores LOCKR
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 226

state 188

    (52) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato . LOCKL valores LOCKR

    LOCKL           shift and go to state 227


state 189

    (53) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON . BRACER
    (55) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON . INTEGER BRACER

    BRACER          shift and go to state 228
    INTEGER         shift and go to state 229


state 190

    (54) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER . COLON BRACER
    (56) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER . COLON INTEGER BRACER

    COLON           shift and go to state 230


state 191

    (80) lecturaReader -> varShortAssign VARIABLE DOT READSTRING . BRACKETL STRING BRACKETR

    BRACKETL        shift and go to state 231


state 192

    (61) estructuraDatos -> varShortAssign LIST DOT NEW . BRACKETL BRACKETR

    BRACKETL        shift and go to state 232


state 193

    (90) declaracion -> varShortAssign BUFIO DOT NEWREADER . BRACKETL OS DOT STDIN BRACKETR

    BRACKETL        shift and go to state 233


state 194

    (91) declaracion -> varShortAssign BUFIO DOT NEWWRITER . BRACKETL OS DOT STDOUT BRACKETR

    BRACKETL        shift and go to state 234


state 195

    (70) initmap -> varShortAssign MAKE BRACKETL createemptymap . BRACKETR

    BRACKETR        shift and go to state 235


state 196

    (71) createemptymap -> MAP . BRACEL tipoDato BRACER tipoDato

    BRACEL          shift and go to state 236


state 197

    (69) createmap -> MAP BRACEL tipoDato . BRACER tipoDato LOCKL mapvalues LOCKR

    BRACER          shift and go to state 237


state 198

    (44) estructuraControl -> SELECT LOCKL casesSelect LOCKR .

    FUNC            reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SWITCH          reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FOR             reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    SELECT          reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VARIABLE        reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FMT             reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    VAR             reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    LEN             reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    APPEND          reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    CAP             reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    DELETE          reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    INTEGER         reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    STRING          reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    FLOAT           reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    $end            reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    LOCKR           reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    CASE            reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)
    RETURN          reduce using rule 44 (estructuraControl -> SELECT LOCKL casesSelect LOCKR .)


state 199

    (46) casesSelect -> caseSelect casesSelect .

    LOCKR           reduce using rule 46 (casesSelect -> caseSelect casesSelect .)


state 200

    (47) caseSelect -> CASE varShortAssign . SMALLERTHAN MINUS COLON main

    SMALLERTHAN     shift and go to state 238


state 201

    (29) asignacion -> varAssign tipoDato ASSIGN asignable .

    FUNC            reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SWITCH          reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FOR             reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SELECT          reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VARIABLE        reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FMT             reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    VAR             reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    LEN             reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    APPEND          reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    CAP             reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    DELETE          reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    INTEGER         reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    STRING          reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    FLOAT           reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    $end            reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    LOCKR           reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    CASE            reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    SEMICOLON       reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)
    RETURN          reduce using rule 29 (asignacion -> varAssign tipoDato ASSIGN asignable .)


state 202

    (75) impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .

    FUNC            reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SWITCH          reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FOR             reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    SELECT          reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VARIABLE        reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FMT             reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    VAR             reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    LEN             reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    APPEND          reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    CAP             reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    DELETE          reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    INTEGER         reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    STRING          reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    FLOAT           reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    $end            reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    LOCKR           reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    CASE            reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)
    RETURN          reduce using rule 75 (impresionSencilla -> tipoImpresion BRACKETL valores BRACKETR .)


state 203

    (136) valores -> valor COMA . valores
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valor                          shift and go to state 164
    valores                        shift and go to state 239
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 204

    (78) impresionBufio -> FMT DOT FPRINT BRACKETL . VARIABLE COMA STRING BRACKETR

    VARIABLE        shift and go to state 240


state 205

    (79) impresionFormato -> FMT DOT PRINTF BRACKETL . STRING COMA valores BRACKETR

    STRING          shift and go to state 241


state 206

    (81) lecturaScanf -> FMT DOT SCANF BRACKETL . STRING opcionLectura BRACKETR

    STRING          shift and go to state 242


state 207

    (85) lecturaSscanf -> FMT DOT SSCANF BRACKETL . opcionesLectura BRACKETR
    (86) opcionesLectura -> . opciones
    (87) opcionesLectura -> . opciones COMA opcionesLectura
    (88) opciones -> . STRING
    (89) opciones -> . ampersand
    (84) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 245
    AMPERSON        shift and go to state 247

    opcionesLectura                shift and go to state 243
    opciones                       shift and go to state 244
    ampersand                      shift and go to state 246

state 208

    (57) lenSlice -> LEN BRACKETL VARIABLE BRACKETR .

    FUNC            reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    SWITCH          reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    FOR             reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    SELECT          reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    VARIABLE        reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    FMT             reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    VAR             reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    LEN             reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    APPEND          reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    CAP             reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    DELETE          reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    INTEGER         reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    STRING          reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    FLOAT           reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    $end            reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    LOCKR           reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    CASE            reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)
    RETURN          reduce using rule 57 (lenSlice -> LEN BRACKETL VARIABLE BRACKETR .)


state 209

    (58) appendSlice -> APPEND BRACKETL VARIABLE valores . BRACKETR

    BRACKETR        shift and go to state 248


state 210

    (60) capSlice -> CAP BRACKETL VARIABLE BRACKETR .

    FUNC            reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    SWITCH          reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    FOR             reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    SELECT          reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    VARIABLE        reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    FMT             reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    VAR             reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    LEN             reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    APPEND          reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    CAP             reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    DELETE          reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    INTEGER         reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    STRING          reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    FLOAT           reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    $end            reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    LOCKR           reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    CASE            reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)
    RETURN          reduce using rule 60 (capSlice -> CAP BRACKETL VARIABLE BRACKETR .)


state 211

    (67) deleteMap -> DELETE BRACKETL VARIABLE COMA . valor BRACKETR
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valor                          shift and go to state 249
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 212

    (34) funcion -> FUNC VARIABLE BRACKETL valores BRACKETR . tipoDato LOCKL cuerpos LOCKR
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 250

state 213

    (59) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE . valores BRACKETR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 251
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 214

    (62) listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER . BRACKETR

    BRACKETR        shift and go to state 252


state 215

    (63) listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .

    FUNC            reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    SWITCH          reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    FOR             reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    SELECT          reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    VARIABLE        reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    FMT             reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    VAR             reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    LEN             reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    APPEND          reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    CAP             reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    DELETE          reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    INTEGER         reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    STRING          reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    FLOAT           reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    $end            reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    LOCKR           reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    CASE            reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)
    RETURN          reduce using rule 63 (listaFront -> VARIABLE DOT FRONT BRACKETL BRACKETR .)


state 216

    (39) estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .

    FUNC            reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SWITCH          reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FOR             reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    SELECT          reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VARIABLE        reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FMT             reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    VAR             reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    LEN             reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    APPEND          reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    CAP             reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    DELETE          reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    INTEGER         reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    STRING          reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    FLOAT           reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    $end            reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    LOCKR           reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    CASE            reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)
    RETURN          reduce using rule 39 (estructuraControl -> SWITCH VARIABLE LOCKL cases LOCKR .)


state 217

    (49) cases -> case cases .

    LOCKR           reduce using rule 49 (cases -> case cases .)


state 218

    (50) case -> CASE condicionCase . COLON main

    COLON           shift and go to state 253


state 219

    (94) condicionCase -> INTEGER .
    (100) comparaciones -> INTEGER . EQUAL INTEGER
    (101) comparaciones -> INTEGER . UNEQUAL INTEGER
    (102) comparaciones -> INTEGER . GREATERTHAN INTEGER
    (103) comparaciones -> INTEGER . SMALLERTHAN INTEGER
    (104) comparaciones -> INTEGER . GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> INTEGER . SMALLEROREQUALTHAN INTEGER
    (142) numero -> INTEGER .

  ! shift/reduce conflict for EQUAL resolved as shift
  ! shift/reduce conflict for UNEQUAL resolved as shift
  ! shift/reduce conflict for GREATERTHAN resolved as shift
  ! shift/reduce conflict for SMALLERTHAN resolved as shift
  ! shift/reduce conflict for GREATEROREQUALTHAN resolved as shift
  ! shift/reduce conflict for SMALLEROREQUALTHAN resolved as shift
    COLON           reduce using rule 94 (condicionCase -> INTEGER .)
    EQUAL           shift and go to state 85
    UNEQUAL         shift and go to state 86
    GREATERTHAN     shift and go to state 87
    SMALLERTHAN     shift and go to state 88
    GREATEROREQUALTHAN shift and go to state 89
    SMALLEROREQUALTHAN shift and go to state 90
    AND             reduce using rule 142 (numero -> INTEGER .)
    OR              reduce using rule 142 (numero -> INTEGER .)
    NOT             reduce using rule 142 (numero -> INTEGER .)

  ! EQUAL           [ reduce using rule 142 (numero -> INTEGER .) ]
  ! UNEQUAL         [ reduce using rule 142 (numero -> INTEGER .) ]
  ! GREATERTHAN     [ reduce using rule 142 (numero -> INTEGER .) ]
  ! SMALLERTHAN     [ reduce using rule 142 (numero -> INTEGER .) ]
  ! GREATEROREQUALTHAN [ reduce using rule 142 (numero -> INTEGER .) ]
  ! SMALLEROREQUALTHAN [ reduce using rule 142 (numero -> INTEGER .) ]


state 220

    (95) condicionCase -> VARIABLE .
    (139) factor -> VARIABLE .

    COLON           reduce using rule 95 (condicionCase -> VARIABLE .)
    EQUAL           reduce using rule 139 (factor -> VARIABLE .)
    UNEQUAL         reduce using rule 139 (factor -> VARIABLE .)
    GREATERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    SMALLERTHAN     reduce using rule 139 (factor -> VARIABLE .)
    GREATEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    SMALLEROREQUALTHAN reduce using rule 139 (factor -> VARIABLE .)
    AND             reduce using rule 139 (factor -> VARIABLE .)
    OR              reduce using rule 139 (factor -> VARIABLE .)
    NOT             reduce using rule 139 (factor -> VARIABLE .)


state 221

    (96) condicionCase -> condicion .

    COLON           reduce using rule 96 (condicionCase -> condicion .)


state 222

    (40) estructuraControl -> FOR condicion LOCKL main LOCKR .

    FUNC            reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SWITCH          reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FOR             reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    SELECT          reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VARIABLE        reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FMT             reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    VAR             reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    LEN             reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    APPEND          reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    CAP             reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    DELETE          reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    INTEGER         reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    STRING          reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    FLOAT           reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    $end            reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    LOCKR           reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    CASE            reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)
    RETURN          reduce using rule 40 (estructuraControl -> FOR condicion LOCKL main LOCKR .)


state 223

    (41) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON . iterador LOCKL main LOCKR
    (143) iterador -> . VARIABLE INCREMENT
    (144) iterador -> . VARIABLE DECREMENT

    VARIABLE        shift and go to state 255

    iterador                       shift and go to state 254

state 224

    (42) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE . VARIABLE LOCKL main LOCKR

    VARIABLE        shift and go to state 256


state 225

    (43) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    varShortAssign                 shift and go to state 17
    main                           shift and go to state 257
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 226

    (51) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato . LOCKL valores LOCKR

    LOCKL           shift and go to state 258


state 227

    (52) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL . valores LOCKR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 259
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 228

    (53) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .

    FUNC            reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    SWITCH          reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    FOR             reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    SELECT          reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    VARIABLE        reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    FMT             reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    VAR             reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    LEN             reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    APPEND          reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    CAP             reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    DELETE          reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    INTEGER         reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    STRING          reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    FLOAT           reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    $end            reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    LOCKR           reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    CASE            reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)
    RETURN          reduce using rule 53 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON BRACER .)


state 229

    (55) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER . BRACER

    BRACER          shift and go to state 260


state 230

    (54) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON . BRACER
    (56) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON . INTEGER BRACER

    BRACER          shift and go to state 262
    INTEGER         shift and go to state 261


state 231

    (80) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL . STRING BRACKETR

    STRING          shift and go to state 263


state 232

    (61) estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL . BRACKETR

    BRACKETR        shift and go to state 264


state 233

    (90) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL . OS DOT STDIN BRACKETR

    OS              shift and go to state 265


state 234

    (91) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL . OS DOT STDOUT BRACKETR

    OS              shift and go to state 266


state 235

    (70) initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .

    FUNC            reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    SWITCH          reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    FOR             reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    SELECT          reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    VARIABLE        reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    FMT             reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    VAR             reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    LEN             reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    APPEND          reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    CAP             reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    DELETE          reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    INTEGER         reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    STRING          reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    FLOAT           reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    $end            reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    LOCKR           reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    CASE            reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)
    RETURN          reduce using rule 70 (initmap -> varShortAssign MAKE BRACKETL createemptymap BRACKETR .)


state 236

    (71) createemptymap -> MAP BRACEL . tipoDato BRACER tipoDato
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 267

state 237

    (69) createmap -> MAP BRACEL tipoDato BRACER . tipoDato LOCKL mapvalues LOCKR
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 268

state 238

    (47) caseSelect -> CASE varShortAssign SMALLERTHAN . MINUS COLON main

    MINUS           shift and go to state 269


state 239

    (136) valores -> valor COMA valores .

    BRACKETR        reduce using rule 136 (valores -> valor COMA valores .)
    LOCKR           reduce using rule 136 (valores -> valor COMA valores .)


state 240

    (78) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE . COMA STRING BRACKETR

    COMA            shift and go to state 270


state 241

    (79) impresionFormato -> FMT DOT PRINTF BRACKETL STRING . COMA valores BRACKETR

    COMA            shift and go to state 271


state 242

    (81) lecturaScanf -> FMT DOT SCANF BRACKETL STRING . opcionLectura BRACKETR
    (82) opcionLectura -> . COMA opciones
    (83) opcionLectura -> . COMA opciones opcionLectura

    COMA            shift and go to state 273

    opcionLectura                  shift and go to state 272

state 243

    (85) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura . BRACKETR

    BRACKETR        shift and go to state 274


state 244

    (86) opcionesLectura -> opciones .
    (87) opcionesLectura -> opciones . COMA opcionesLectura

    BRACKETR        reduce using rule 86 (opcionesLectura -> opciones .)
    COMA            shift and go to state 275


state 245

    (88) opciones -> STRING .

    COMA            reduce using rule 88 (opciones -> STRING .)
    BRACKETR        reduce using rule 88 (opciones -> STRING .)


state 246

    (89) opciones -> ampersand .

    COMA            reduce using rule 89 (opciones -> ampersand .)
    BRACKETR        reduce using rule 89 (opciones -> ampersand .)


state 247

    (84) ampersand -> AMPERSON . VARIABLE

    VARIABLE        shift and go to state 276


state 248

    (58) appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .

    FUNC            reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    SWITCH          reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    FOR             reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    SELECT          reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    VARIABLE        reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    FMT             reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    VAR             reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    LEN             reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    APPEND          reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    CAP             reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    DELETE          reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    INTEGER         reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    STRING          reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    FLOAT           reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    $end            reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    LOCKR           reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    CASE            reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)
    RETURN          reduce using rule 58 (appendSlice -> APPEND BRACKETL VARIABLE valores BRACKETR .)


state 249

    (67) deleteMap -> DELETE BRACKETL VARIABLE COMA valor . BRACKETR

    BRACKETR        shift and go to state 277


state 250

    (34) funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato . LOCKL cuerpos LOCKR

    LOCKL           shift and go to state 278


state 251

    (59) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores . BRACKETR

    BRACKETR        shift and go to state 279


state 252

    (62) listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .

    FUNC            reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    SWITCH          reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    FOR             reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    SELECT          reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    VARIABLE        reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    FMT             reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    VAR             reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    LEN             reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    APPEND          reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    CAP             reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    DELETE          reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    INTEGER         reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    STRING          reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    FLOAT           reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    $end            reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    LOCKR           reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    CASE            reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)
    RETURN          reduce using rule 62 (listaPushBack -> VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR .)


state 253

    (50) case -> CASE condicionCase COLON . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    main                           shift and go to state 280
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 254

    (41) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador . LOCKL main LOCKR

    LOCKL           shift and go to state 281


state 255

    (143) iterador -> VARIABLE . INCREMENT
    (144) iterador -> VARIABLE . DECREMENT

    INCREMENT       shift and go to state 282
    DECREMENT       shift and go to state 283


state 256

    (42) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE . LOCKL main LOCKR

    LOCKL           shift and go to state 284


state 257

    (43) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 285


state 258

    (51) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL . valores LOCKR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 286
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 259

    (52) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores . LOCKR

    LOCKR           shift and go to state 287


state 260

    (55) estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .

    FUNC            reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    SWITCH          reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    FOR             reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    SELECT          reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    VARIABLE        reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    FMT             reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    VAR             reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    LEN             reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    APPEND          reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    CAP             reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    DELETE          reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    INTEGER         reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    STRING          reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    FLOAT           reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    $end            reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    LOCKR           reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    CASE            reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)
    RETURN          reduce using rule 55 (estructuraDatos -> varShortAssign VARIABLE BRACEL COLON INTEGER BRACER .)


state 261

    (56) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER . BRACER

    BRACER          shift and go to state 288


state 262

    (54) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .

    FUNC            reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    SWITCH          reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    FOR             reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    SELECT          reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    VARIABLE        reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    FMT             reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    VAR             reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    LEN             reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    APPEND          reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    CAP             reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    DELETE          reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    INTEGER         reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    STRING          reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    FLOAT           reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    $end            reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    LOCKR           reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    CASE            reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)
    RETURN          reduce using rule 54 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON BRACER .)


state 263

    (80) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING . BRACKETR

    BRACKETR        shift and go to state 289


state 264

    (61) estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .

    FUNC            reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    SWITCH          reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    FOR             reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    SELECT          reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    VARIABLE        reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    FMT             reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    VAR             reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    LEN             reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    APPEND          reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    CAP             reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    DELETE          reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    INTEGER         reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    STRING          reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    FLOAT           reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    $end            reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    LOCKR           reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    CASE            reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)
    RETURN          reduce using rule 61 (estructuraDatos -> varShortAssign LIST DOT NEW BRACKETL BRACKETR .)


state 265

    (90) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS . DOT STDIN BRACKETR

    DOT             shift and go to state 290


state 266

    (91) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS . DOT STDOUT BRACKETR

    DOT             shift and go to state 291


state 267

    (71) createemptymap -> MAP BRACEL tipoDato . BRACER tipoDato

    BRACER          shift and go to state 292


state 268

    (69) createmap -> MAP BRACEL tipoDato BRACER tipoDato . LOCKL mapvalues LOCKR

    LOCKL           shift and go to state 293


state 269

    (47) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS . COLON main

    COLON           shift and go to state 294


state 270

    (78) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA . STRING BRACKETR

    STRING          shift and go to state 295


state 271

    (79) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA . valores BRACKETR
    (135) valores -> . valor
    (136) valores -> . valor COMA valores
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valores                        shift and go to state 296
    valor                          shift and go to state 164
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 272

    (81) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura . BRACKETR

    BRACKETR        shift and go to state 297


state 273

    (82) opcionLectura -> COMA . opciones
    (83) opcionLectura -> COMA . opciones opcionLectura
    (88) opciones -> . STRING
    (89) opciones -> . ampersand
    (84) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 245
    AMPERSON        shift and go to state 247

    opciones                       shift and go to state 298
    ampersand                      shift and go to state 246

state 274

    (85) lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .

    FUNC            reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SWITCH          reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FOR             reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    SELECT          reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VARIABLE        reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FMT             reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    VAR             reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    LEN             reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    APPEND          reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    CAP             reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    DELETE          reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    INTEGER         reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    STRING          reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    FLOAT           reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    $end            reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    LOCKR           reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    CASE            reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)
    RETURN          reduce using rule 85 (lecturaSscanf -> FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR .)


state 275

    (87) opcionesLectura -> opciones COMA . opcionesLectura
    (86) opcionesLectura -> . opciones
    (87) opcionesLectura -> . opciones COMA opcionesLectura
    (88) opciones -> . STRING
    (89) opciones -> . ampersand
    (84) ampersand -> . AMPERSON VARIABLE

    STRING          shift and go to state 245
    AMPERSON        shift and go to state 247

    opciones                       shift and go to state 244
    opcionesLectura                shift and go to state 299
    ampersand                      shift and go to state 246

state 276

    (84) ampersand -> AMPERSON VARIABLE .

    COMA            reduce using rule 84 (ampersand -> AMPERSON VARIABLE .)
    BRACKETR        reduce using rule 84 (ampersand -> AMPERSON VARIABLE .)


state 277

    (67) deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .

    FUNC            reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    SWITCH          reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    FOR             reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    SELECT          reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    VARIABLE        reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    FMT             reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    VAR             reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    LEN             reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    APPEND          reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    CAP             reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    DELETE          reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    INTEGER         reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    STRING          reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    FLOAT           reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    $end            reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    LOCKR           reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    CASE            reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)
    RETURN          reduce using rule 67 (deleteMap -> DELETE BRACKETL VARIABLE COMA valor BRACKETR .)


state 278

    (34) funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL . cuerpos LOCKR
    (35) cuerpos -> . cuerpo
    (36) cuerpos -> . cuerpo cuerpos
    (37) cuerpo -> . ejecutable
    (38) cuerpo -> . RETURN VARIABLE
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    RETURN          shift and go to state 303
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    cuerpos                        shift and go to state 300
    cuerpo                         shift and go to state 301
    ejecutable                     shift and go to state 302
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 279

    (59) appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .

    FUNC            reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    SWITCH          reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    FOR             reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    SELECT          reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    VARIABLE        reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    FMT             reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    VAR             reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    LEN             reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    APPEND          reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    CAP             reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    DELETE          reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    INTEGER         reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    STRING          reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    FLOAT           reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    $end            reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    LOCKR           reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    CASE            reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)
    RETURN          reduce using rule 59 (appendSlice -> VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR .)


state 280

    (50) case -> CASE condicionCase COLON main .

    CASE            reduce using rule 50 (case -> CASE condicionCase COLON main .)
    LOCKR           reduce using rule 50 (case -> CASE condicionCase COLON main .)


state 281

    (41) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    asignacion                     shift and go to state 8
    condicion                      shift and go to state 12
    main                           shift and go to state 304
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 282

    (143) iterador -> VARIABLE INCREMENT .

    LOCKL           reduce using rule 143 (iterador -> VARIABLE INCREMENT .)


state 283

    (144) iterador -> VARIABLE DECREMENT .

    LOCKL           reduce using rule 144 (iterador -> VARIABLE DECREMENT .)


state 284

    (42) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL . main LOCKR
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    varShortAssign                 shift and go to state 17
    main                           shift and go to state 305
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 285

    (43) estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LEN             reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    APPEND          reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CAP             reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    DELETE          reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    INTEGER         reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    STRING          reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FLOAT           reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    RETURN          reduce using rule 43 (estructuraControl -> FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 286

    (51) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores . LOCKR

    LOCKR           shift and go to state 306


state 287

    (52) estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .

    FUNC            reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    SWITCH          reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    FOR             reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    SELECT          reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    VARIABLE        reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    FMT             reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    VAR             reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    LEN             reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    APPEND          reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    CAP             reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    DELETE          reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    INTEGER         reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    STRING          reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    FLOAT           reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    $end            reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    LOCKR           reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    CASE            reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)
    RETURN          reduce using rule 52 (estructuraDatos -> varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR .)


state 288

    (56) estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .

    FUNC            reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    SWITCH          reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    FOR             reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    SELECT          reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    VARIABLE        reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    FMT             reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    VAR             reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    LEN             reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    APPEND          reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    CAP             reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    DELETE          reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    INTEGER         reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    STRING          reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    FLOAT           reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    $end            reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    LOCKR           reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    CASE            reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)
    RETURN          reduce using rule 56 (estructuraDatos -> varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER .)


state 289

    (80) lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .

    FUNC            reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SWITCH          reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FOR             reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    SELECT          reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VARIABLE        reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FMT             reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    VAR             reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    LEN             reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    APPEND          reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    CAP             reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    DELETE          reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    INTEGER         reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    STRING          reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    FLOAT           reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    $end            reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    LOCKR           reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    CASE            reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)
    RETURN          reduce using rule 80 (lecturaReader -> varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR .)


state 290

    (90) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT . STDIN BRACKETR

    STDIN           shift and go to state 307


state 291

    (91) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT . STDOUT BRACKETR

    STDOUT          shift and go to state 308


state 292

    (71) createemptymap -> MAP BRACEL tipoDato BRACER . tipoDato
    (112) tipoDato -> . INTTYPE
    (113) tipoDato -> . FLOATTYPE
    (114) tipoDato -> . BOOLEANTYPE
    (115) tipoDato -> . STRINGTYPE

    INTTYPE         shift and go to state 93
    FLOATTYPE       shift and go to state 94
    BOOLEANTYPE     shift and go to state 95
    STRINGTYPE      shift and go to state 96

    tipoDato                       shift and go to state 309

state 293

    (69) createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL . mapvalues LOCKR
    (72) mapvalues -> . mapvalue
    (73) mapvalues -> . mapvalue COMA mapvalues
    (74) mapvalue -> . valor COLON valor
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    mapvalues                      shift and go to state 310
    mapvalue                       shift and go to state 311
    valor                          shift and go to state 312
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 294

    (47) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON . main
    (1) main -> . ejecutable
    (2) main -> . funcion
    (3) main -> . ejecutable main
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (34) funcion -> . FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    FUNC            shift and go to state 13
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    varShortAssign                 shift and go to state 17
    main                           shift and go to state 313
    ejecutable                     shift and go to state 2
    funcion                        shift and go to state 3
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 295

    (78) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING . BRACKETR

    BRACKETR        shift and go to state 314


state 296

    (79) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores . BRACKETR

    BRACKETR        shift and go to state 315


state 297

    (81) lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .

    FUNC            reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SWITCH          reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FOR             reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    SELECT          reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VARIABLE        reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FMT             reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    VAR             reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    LEN             reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    APPEND          reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    CAP             reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    DELETE          reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    INTEGER         reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    STRING          reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    FLOAT           reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    $end            reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    LOCKR           reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    CASE            reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)
    RETURN          reduce using rule 81 (lecturaScanf -> FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR .)


state 298

    (82) opcionLectura -> COMA opciones .
    (83) opcionLectura -> COMA opciones . opcionLectura
    (82) opcionLectura -> . COMA opciones
    (83) opcionLectura -> . COMA opciones opcionLectura

    BRACKETR        reduce using rule 82 (opcionLectura -> COMA opciones .)
    COMA            shift and go to state 273

    opcionLectura                  shift and go to state 316

state 299

    (87) opcionesLectura -> opciones COMA opcionesLectura .

    BRACKETR        reduce using rule 87 (opcionesLectura -> opciones COMA opcionesLectura .)


state 300

    (34) funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos . LOCKR

    LOCKR           shift and go to state 317


state 301

    (35) cuerpos -> cuerpo .
    (36) cuerpos -> cuerpo . cuerpos
    (35) cuerpos -> . cuerpo
    (36) cuerpos -> . cuerpo cuerpos
    (37) cuerpo -> . ejecutable
    (38) cuerpo -> . RETURN VARIABLE
    (4) ejecutable -> . estructuraControl
    (5) ejecutable -> . estructuraDatos
    (6) ejecutable -> . impresion
    (7) ejecutable -> . declaracion
    (8) ejecutable -> . asignacion
    (9) ejecutable -> . lectura
    (10) ejecutable -> . metodos
    (11) ejecutable -> . expresionMatematica
    (12) ejecutable -> . condicion
    (39) estructuraControl -> . SWITCH VARIABLE LOCKL cases LOCKR
    (40) estructuraControl -> . FOR condicion LOCKL main LOCKR
    (41) estructuraControl -> . FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR
    (42) estructuraControl -> . FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (43) estructuraControl -> . FOR varShortAssign RANGE VARIABLE LOCKL main LOCKR
    (44) estructuraControl -> . SELECT LOCKL casesSelect LOCKR
    (51) estructuraDatos -> . varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR
    (52) estructuraDatos -> . varShortAssign BRACEL BRACER tipoDato LOCKL valores LOCKR
    (53) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON BRACER
    (54) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON BRACER
    (55) estructuraDatos -> . varShortAssign VARIABLE BRACEL COLON INTEGER BRACER
    (56) estructuraDatos -> . varShortAssign VARIABLE BRACEL INTEGER COLON INTEGER BRACER
    (61) estructuraDatos -> . varShortAssign LIST DOT NEW BRACKETL BRACKETR
    (64) estructuraDatos -> . initmapvalue
    (65) estructuraDatos -> . initmap
    (13) impresion -> . impresionSencilla
    (14) impresion -> . impresionBufio
    (15) impresion -> . impresionFormato
    (30) declaracion -> . varAssign tipoDato
    (90) declaracion -> . varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR
    (91) declaracion -> . varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR
    (26) asignacion -> . varShortAssign asignable
    (27) asignacion -> . varAssign ASSIGN asignable
    (28) asignacion -> . VARIABLE ASSIGN asignable
    (29) asignacion -> . varAssign tipoDato ASSIGN asignable
    (16) lectura -> . lecturaReader
    (17) lectura -> . lecturaScanf
    (18) lectura -> . lecturaSscanf
    (19) metodos -> . lenSlice
    (20) metodos -> . appendSlice
    (21) metodos -> . capSlice
    (22) metodos -> . listaPushBack
    (23) metodos -> . listaFront
    (24) metodos -> . lenMap
    (25) metodos -> . deleteMap
    (119) expresionMatematica -> . expresionSuma
    (120) expresionMatematica -> . expresionResta
    (121) expresionMatematica -> . expresionMultiplicacion
    (122) expresionMatematica -> . expresionDivision
    (123) expresionMatematica -> . expresionModulo
    (124) expresionMatematica -> . factor operadorMatematico factor
    (97) condicion -> . valor operadorComparacion valor
    (98) condicion -> . valor operadorLogico valor
    (99) condicion -> . comparaciones
    (92) varShortAssign -> . VARIABLE SHORTASSIGN
    (68) initmapvalue -> . varShortAssign createmap
    (70) initmap -> . varShortAssign MAKE BRACKETL createemptymap BRACKETR
    (75) impresionSencilla -> . tipoImpresion BRACKETL valores BRACKETR
    (78) impresionBufio -> . FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR
    (79) impresionFormato -> . FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR
    (93) varAssign -> . VAR VARIABLE
    (80) lecturaReader -> . varShortAssign VARIABLE DOT READSTRING BRACKETL STRING BRACKETR
    (81) lecturaScanf -> . FMT DOT SCANF BRACKETL STRING opcionLectura BRACKETR
    (85) lecturaSscanf -> . FMT DOT SSCANF BRACKETL opcionesLectura BRACKETR
    (57) lenSlice -> . LEN BRACKETL VARIABLE BRACKETR
    (58) appendSlice -> . APPEND BRACKETL VARIABLE valores BRACKETR
    (59) appendSlice -> . VARIABLE ASSIGN APPEND BRACKETL VARIABLE valores BRACKETR
    (60) capSlice -> . CAP BRACKETL VARIABLE BRACKETR
    (62) listaPushBack -> . VARIABLE DOT PUSHBACK BRACKETL INTEGER BRACKETR
    (63) listaFront -> . VARIABLE DOT FRONT BRACKETL BRACKETR
    (66) lenMap -> . LEN VARIABLE
    (67) deleteMap -> . DELETE BRACKETL VARIABLE COMA valor BRACKETR
    (125) expresionSuma -> . INTEGER PLUS INTEGER
    (126) expresionResta -> . INTEGER MINUS INTEGER
    (127) expresionMultiplicacion -> . INTEGER TIMES INTEGER
    (128) expresionDivision -> . INTEGER DIVIDE INTEGER
    (129) expresionModulo -> . INTEGER MODULE INTEGER
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (137) valor -> . STRING
    (138) valor -> . factor
    (100) comparaciones -> . INTEGER EQUAL INTEGER
    (101) comparaciones -> . INTEGER UNEQUAL INTEGER
    (102) comparaciones -> . INTEGER GREATERTHAN INTEGER
    (103) comparaciones -> . INTEGER SMALLERTHAN INTEGER
    (104) comparaciones -> . INTEGER GREATEROREQUALTHAN INTEGER
    (105) comparaciones -> . INTEGER SMALLEROREQUALTHAN INTEGER
    (76) tipoImpresion -> . FMT DOT PRINT
    (77) tipoImpresion -> . FMT DOT PRINTLN
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    LOCKR           reduce using rule 35 (cuerpos -> cuerpo .)
    RETURN          shift and go to state 303
    SWITCH          shift and go to state 15
    FOR             shift and go to state 16
    SELECT          shift and go to state 18
    VARIABLE        shift and go to state 14
    FMT             shift and go to state 45
    VAR             shift and go to state 47
    LEN             shift and go to state 48
    APPEND          shift and go to state 49
    CAP             shift and go to state 50
    DELETE          shift and go to state 51
    INTEGER         shift and go to state 19
    STRING          shift and go to state 46
    FLOAT           shift and go to state 53

    cuerpo                         shift and go to state 301
    cuerpos                        shift and go to state 318
    ejecutable                     shift and go to state 302
    estructuraControl              shift and go to state 4
    estructuraDatos                shift and go to state 5
    impresion                      shift and go to state 6
    declaracion                    shift and go to state 7
    asignacion                     shift and go to state 8
    lectura                        shift and go to state 9
    metodos                        shift and go to state 10
    expresionMatematica            shift and go to state 11
    condicion                      shift and go to state 12
    varShortAssign                 shift and go to state 17
    initmapvalue                   shift and go to state 20
    initmap                        shift and go to state 21
    impresionSencilla              shift and go to state 22
    impresionBufio                 shift and go to state 23
    impresionFormato               shift and go to state 24
    varAssign                      shift and go to state 25
    lecturaReader                  shift and go to state 26
    lecturaScanf                   shift and go to state 27
    lecturaSscanf                  shift and go to state 28
    lenSlice                       shift and go to state 29
    appendSlice                    shift and go to state 30
    capSlice                       shift and go to state 31
    listaPushBack                  shift and go to state 32
    listaFront                     shift and go to state 33
    lenMap                         shift and go to state 34
    deleteMap                      shift and go to state 35
    expresionSuma                  shift and go to state 36
    expresionResta                 shift and go to state 37
    expresionMultiplicacion        shift and go to state 38
    expresionDivision              shift and go to state 39
    expresionModulo                shift and go to state 40
    factor                         shift and go to state 41
    valor                          shift and go to state 42
    comparaciones                  shift and go to state 43
    tipoImpresion                  shift and go to state 44
    numero                         shift and go to state 52

state 302

    (37) cuerpo -> ejecutable .

    RETURN          reduce using rule 37 (cuerpo -> ejecutable .)
    SWITCH          reduce using rule 37 (cuerpo -> ejecutable .)
    FOR             reduce using rule 37 (cuerpo -> ejecutable .)
    SELECT          reduce using rule 37 (cuerpo -> ejecutable .)
    VARIABLE        reduce using rule 37 (cuerpo -> ejecutable .)
    FMT             reduce using rule 37 (cuerpo -> ejecutable .)
    VAR             reduce using rule 37 (cuerpo -> ejecutable .)
    LEN             reduce using rule 37 (cuerpo -> ejecutable .)
    APPEND          reduce using rule 37 (cuerpo -> ejecutable .)
    CAP             reduce using rule 37 (cuerpo -> ejecutable .)
    DELETE          reduce using rule 37 (cuerpo -> ejecutable .)
    INTEGER         reduce using rule 37 (cuerpo -> ejecutable .)
    STRING          reduce using rule 37 (cuerpo -> ejecutable .)
    FLOAT           reduce using rule 37 (cuerpo -> ejecutable .)
    LOCKR           reduce using rule 37 (cuerpo -> ejecutable .)


state 303

    (38) cuerpo -> RETURN . VARIABLE

    VARIABLE        shift and go to state 319


state 304

    (41) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main . LOCKR

    LOCKR           shift and go to state 320


state 305

    (42) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main . LOCKR

    LOCKR           shift and go to state 321


state 306

    (51) estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .

    FUNC            reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    SWITCH          reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    FOR             reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    SELECT          reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    VARIABLE        reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    FMT             reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    VAR             reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    LEN             reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    APPEND          reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    CAP             reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    DELETE          reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    INTEGER         reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    STRING          reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    FLOAT           reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    $end            reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    LOCKR           reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    CASE            reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)
    RETURN          reduce using rule 51 (estructuraDatos -> varShortAssign BRACEL INTEGER BRACER tipoDato LOCKL valores LOCKR .)


state 307

    (90) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN . BRACKETR

    BRACKETR        shift and go to state 322


state 308

    (91) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT . BRACKETR

    BRACKETR        shift and go to state 323


state 309

    (71) createemptymap -> MAP BRACEL tipoDato BRACER tipoDato .

    BRACKETR        reduce using rule 71 (createemptymap -> MAP BRACEL tipoDato BRACER tipoDato .)


state 310

    (69) createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues . LOCKR

    LOCKR           shift and go to state 324


state 311

    (72) mapvalues -> mapvalue .
    (73) mapvalues -> mapvalue . COMA mapvalues

    LOCKR           reduce using rule 72 (mapvalues -> mapvalue .)
    COMA            shift and go to state 325


state 312

    (74) mapvalue -> valor . COLON valor

    COLON           shift and go to state 326


state 313

    (47) caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .

    CASE            reduce using rule 47 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)
    LOCKR           reduce using rule 47 (caseSelect -> CASE varShortAssign SMALLERTHAN MINUS COLON main .)


state 314

    (78) impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .

    FUNC            reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SWITCH          reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FOR             reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    SELECT          reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VARIABLE        reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FMT             reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    VAR             reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    LEN             reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    APPEND          reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    CAP             reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    DELETE          reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    INTEGER         reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    STRING          reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    FLOAT           reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    $end            reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    LOCKR           reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    CASE            reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)
    RETURN          reduce using rule 78 (impresionBufio -> FMT DOT FPRINT BRACKETL VARIABLE COMA STRING BRACKETR .)


state 315

    (79) impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .

    FUNC            reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SWITCH          reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FOR             reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    SELECT          reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VARIABLE        reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FMT             reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    VAR             reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    LEN             reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    APPEND          reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    CAP             reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    DELETE          reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    INTEGER         reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    STRING          reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    FLOAT           reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    $end            reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    LOCKR           reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    CASE            reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)
    RETURN          reduce using rule 79 (impresionFormato -> FMT DOT PRINTF BRACKETL STRING COMA valores BRACKETR .)


state 316

    (83) opcionLectura -> COMA opciones opcionLectura .

    BRACKETR        reduce using rule 83 (opcionLectura -> COMA opciones opcionLectura .)


state 317

    (34) funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR .

    $end            reduce using rule 34 (funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR .)
    LOCKR           reduce using rule 34 (funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR .)
    CASE            reduce using rule 34 (funcion -> FUNC VARIABLE BRACKETL valores BRACKETR tipoDato LOCKL cuerpos LOCKR .)


state 318

    (36) cuerpos -> cuerpo cuerpos .

    LOCKR           reduce using rule 36 (cuerpos -> cuerpo cuerpos .)


state 319

    (38) cuerpo -> RETURN VARIABLE .

    RETURN          reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    SWITCH          reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    FOR             reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    SELECT          reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    VARIABLE        reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    FMT             reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    VAR             reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    LEN             reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    APPEND          reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    CAP             reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    DELETE          reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    INTEGER         reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    STRING          reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    FLOAT           reduce using rule 38 (cuerpo -> RETURN VARIABLE .)
    LOCKR           reduce using rule 38 (cuerpo -> RETURN VARIABLE .)


state 320

    (41) estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .

    FUNC            reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SWITCH          reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FOR             reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    SELECT          reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VARIABLE        reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FMT             reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    VAR             reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    LEN             reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    APPEND          reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    CAP             reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    DELETE          reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    INTEGER         reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    STRING          reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    FLOAT           reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    $end            reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    LOCKR           reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    CASE            reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)
    RETURN          reduce using rule 41 (estructuraControl -> FOR asignacion SEMICOLON condicion SEMICOLON iterador LOCKL main LOCKR .)


state 321

    (42) estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .

    FUNC            reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SWITCH          reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FOR             reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    SELECT          reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VARIABLE        reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FMT             reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    VAR             reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LEN             reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    APPEND          reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CAP             reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    DELETE          reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    INTEGER         reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    STRING          reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    FLOAT           reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    $end            reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    LOCKR           reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    CASE            reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)
    RETURN          reduce using rule 42 (estructuraControl -> FOR VARIABLE COMA varShortAssign RANGE VARIABLE LOCKL main LOCKR .)


state 322

    (90) declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .

    FUNC            reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SWITCH          reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FOR             reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    SELECT          reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VARIABLE        reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FMT             reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    VAR             reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    LEN             reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    APPEND          reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    CAP             reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    DELETE          reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    INTEGER         reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    STRING          reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    FLOAT           reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    $end            reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    LOCKR           reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    CASE            reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)
    RETURN          reduce using rule 90 (declaracion -> varShortAssign BUFIO DOT NEWREADER BRACKETL OS DOT STDIN BRACKETR .)


state 323

    (91) declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .

    FUNC            reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SWITCH          reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FOR             reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    SELECT          reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VARIABLE        reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FMT             reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    VAR             reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    LEN             reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    APPEND          reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    CAP             reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    DELETE          reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    INTEGER         reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    STRING          reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    FLOAT           reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    $end            reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    LOCKR           reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    CASE            reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)
    RETURN          reduce using rule 91 (declaracion -> varShortAssign BUFIO DOT NEWWRITER BRACKETL OS DOT STDOUT BRACKETR .)


state 324

    (69) createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .

    FUNC            reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    SWITCH          reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    FOR             reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    SELECT          reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    VARIABLE        reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    FMT             reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    VAR             reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    LEN             reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    APPEND          reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    CAP             reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    DELETE          reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    INTEGER         reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    STRING          reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    FLOAT           reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    $end            reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    LOCKR           reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    CASE            reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)
    RETURN          reduce using rule 69 (createmap -> MAP BRACEL tipoDato BRACER tipoDato LOCKL mapvalues LOCKR .)


state 325

    (73) mapvalues -> mapvalue COMA . mapvalues
    (72) mapvalues -> . mapvalue
    (73) mapvalues -> . mapvalue COMA mapvalues
    (74) mapvalue -> . valor COLON valor
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    mapvalue                       shift and go to state 311
    mapvalues                      shift and go to state 327
    valor                          shift and go to state 312
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 326

    (74) mapvalue -> valor COLON . valor
    (137) valor -> . STRING
    (138) valor -> . factor
    (139) factor -> . VARIABLE
    (140) factor -> . numero
    (141) numero -> . FLOAT
    (142) numero -> . INTEGER

    STRING          shift and go to state 46
    VARIABLE        shift and go to state 123
    FLOAT           shift and go to state 53
    INTEGER         shift and go to state 160

    valor                          shift and go to state 328
    factor                         shift and go to state 65
    numero                         shift and go to state 52

state 327

    (73) mapvalues -> mapvalue COMA mapvalues .

    LOCKR           reduce using rule 73 (mapvalues -> mapvalue COMA mapvalues .)


state 328

    (74) mapvalue -> valor COLON valor .

    COMA            reduce using rule 74 (mapvalue -> valor COLON valor .)
    LOCKR           reduce using rule 74 (mapvalue -> valor COLON valor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 19 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 19 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 19 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 19 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 19 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for UNEQUAL in state 19 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 19 resolved as shift
WARNING: shift/reduce conflict for SMALLERTHAN in state 19 resolved as shift
WARNING: shift/reduce conflict for GREATEROREQUALTHAN in state 19 resolved as shift
WARNING: shift/reduce conflict for SMALLEROREQUALTHAN in state 19 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for UNEQUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALLERTHAN in state 66 resolved as shift
WARNING: shift/reduce conflict for GREATEROREQUALTHAN in state 66 resolved as shift
WARNING: shift/reduce conflict for SMALLEROREQUALTHAN in state 66 resolved as shift
WARNING: shift/reduce conflict for EQUAL in state 219 resolved as shift
WARNING: shift/reduce conflict for UNEQUAL in state 219 resolved as shift
WARNING: shift/reduce conflict for GREATERTHAN in state 219 resolved as shift
WARNING: shift/reduce conflict for SMALLERTHAN in state 219 resolved as shift
WARNING: shift/reduce conflict for GREATEROREQUALTHAN in state 219 resolved as shift
WARNING: shift/reduce conflict for SMALLEROREQUALTHAN in state 219 resolved as shift
