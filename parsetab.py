
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSON AND APPEND ASSIGN BOOLEANTYPE BRACEL BRACER BRACKETL BRACKETR BREAK BUFIO CAP CASE CHAN COLON COMA CONST DECREMENT DEFAULT DEFER DIVIDE DOT ELSE EQUAL ERROR FALLTHROUGH FALSE FLOAT FLOATTYPE FMT FOR FPRINT FRONT FUNCION GO GOTO GREATEROREQUALTHAN GREATERTHAN IF IMPORT INCREMENT INTEGER INTERFACE INTTYPE LEN LIST LOCKL LOCKR MAP MINUS MODULE NEW NEWWRITER NOT OR OS PACKAGE PLUS PRINT PRINTLN PUSHBACK RANGE RETURN SCANF SELECT SEMICOLON SHORTASSIGN SMALLEROREQUALTHAN SMALLERTHAN SSCANF STDOUT STRING STRINGTYPE STRUCT SWITCH TIMES TRUE TYPE UNEQUAL VAR VARIABLE\n    declaracion : VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR\n    \n        declaracion : VARIABLE SHORTASSIGN\n    declaracion : VAR VARIABLE FLOATTYPE\n                   | VAR VARIABLE INTTYPE\n                   | VAR VARIABLE BOOLEANTYPE\n    \n    declaracion : factor\n     factor : TRUE\n             | FALSE\n     factor : STRING\n             | INTEGER\n             | FLOAT\n    \n    factor : VARIABLE\n    \n    factor : reservada\n    \n    reservada : VAR\n    \n    reservada : simbolo\n    simbolo : EQUAL\n               | UNEQUAL\n               | GREATERTHAN\n               | SMALLERTHAN\n               | GREATEROREQUALTHAN\n               | SMALLEROREQUALTHAN\n    \n    simbolo : BRACKETR\n    \n    simbolo : BRACKETL\n    \n    simbolo : DOT\n    '
    
_lr_action_items = {'VARIABLE':([0,6,],[2,22,]),'VAR':([0,],[6,]),'TRUE':([0,],[8,]),'FALSE':([0,],[9,]),'STRING':([0,],[10,]),'INTEGER':([0,],[11,]),'FLOAT':([0,],[12,]),'EQUAL':([0,],[15,]),'UNEQUAL':([0,],[16,]),'GREATERTHAN':([0,],[17,]),'SMALLERTHAN':([0,],[18,]),'GREATEROREQUALTHAN':([0,],[19,]),'SMALLEROREQUALTHAN':([0,],[20,]),'BRACKETR':([0,29,],[5,30,]),'BRACKETL':([0,28,],[4,29,]),'DOT':([0,23,],[3,27,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,24,25,26,30,],[0,-12,-24,-23,-22,-14,-6,-7,-8,-9,-10,-11,-13,-15,-16,-17,-18,-19,-20,-21,-2,-3,-4,-5,-1,]),'SHORTASSIGN':([2,],[21,]),'LIST':([21,],[23,]),'FLOATTYPE':([22,],[24,]),'INTTYPE':([22,],[25,]),'BOOLEANTYPE':([22,],[26,]),'NEW':([27,],[28,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[1,]),'factor':([0,],[7,]),'reservada':([0,],[13,]),'simbolo':([0,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> VARIABLE SHORTASSIGN LIST DOT NEW BRACKETL BRACKETR','declaracion',7,'p_declaracion_lista','golangsintax.py',11),
  ('declaracion -> VARIABLE SHORTASSIGN','declaracion',2,'p_declaracion_var','golangsintax.py',18),
  ('declaracion -> VAR VARIABLE FLOATTYPE','declaracion',3,'p_declaracion_vartipo','golangsintax.py',24),
  ('declaracion -> VAR VARIABLE INTTYPE','declaracion',3,'p_declaracion_vartipo','golangsintax.py',25),
  ('declaracion -> VAR VARIABLE BOOLEANTYPE','declaracion',3,'p_declaracion_vartipo','golangsintax.py',26),
  ('declaracion -> factor','declaracion',1,'p_declaracion_factor','golangsintax.py',32),
  ('factor -> TRUE','factor',1,'p_factor_booleano','golangsintax.py',38),
  ('factor -> FALSE','factor',1,'p_factor_booleano','golangsintax.py',39),
  ('factor -> STRING','factor',1,'p_factor_dato','golangsintax.py',45),
  ('factor -> INTEGER','factor',1,'p_factor_dato','golangsintax.py',46),
  ('factor -> FLOAT','factor',1,'p_factor_dato','golangsintax.py',47),
  ('factor -> VARIABLE','factor',1,'p_factor_variable','golangsintax.py',53),
  ('factor -> reservada','factor',1,'p_factor_reservada','golangsintax.py',59),
  ('reservada -> VAR','reservada',1,'p_reservada_var','golangsintax.py',65),
  ('reservada -> simbolo','reservada',1,'p_reservada_simbolo','golangsintax.py',71),
  ('simbolo -> EQUAL','simbolo',1,'p_simbolo_comparacion','golangsintax.py',76),
  ('simbolo -> UNEQUAL','simbolo',1,'p_simbolo_comparacion','golangsintax.py',77),
  ('simbolo -> GREATERTHAN','simbolo',1,'p_simbolo_comparacion','golangsintax.py',78),
  ('simbolo -> SMALLERTHAN','simbolo',1,'p_simbolo_comparacion','golangsintax.py',79),
  ('simbolo -> GREATEROREQUALTHAN','simbolo',1,'p_simbolo_comparacion','golangsintax.py',80),
  ('simbolo -> SMALLEROREQUALTHAN','simbolo',1,'p_simbolo_comparacion','golangsintax.py',81),
  ('simbolo -> BRACKETR','simbolo',1,'p_simbolo_bracketr','golangsintax.py',86),
  ('simbolo -> BRACKETL','simbolo',1,'p_simbolo_bracketl','golangsintax.py',92),
  ('simbolo -> DOT','simbolo',1,'p_simbolo_dot','golangsintax.py',98),
]
